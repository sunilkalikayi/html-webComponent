"use strict";

require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReactNativeEnvType = exports.ReactNativeEnv = void 0;
function _lodash() {
  const data = require("lodash");
  _lodash = function () {
    return data;
  };
  return data;
}
function _reactNativeAlias() {
  const data = require("./webpack/react-native-alias");
  _reactNativeAlias = function () {
    return data;
  };
  return data;
}
function _webpackTemplateTransformers() {
  const data = require("./webpack/webpack-template-transformers");
  _webpackTemplateTransformers = function () {
    return data;
  };
  return data;
}
const ReactNativeEnvType = 'react-native';
exports.ReactNativeEnvType = ReactNativeEnvType;
class ReactNativeEnv {
  constructor(react, aspect) {
    this.react = react;
    this.aspect = aspect;
  }
  async getHostDependencies() {
    const reactAdditional = await this.react.reactEnv.getAdditionalHostDependencies();
    const currentPeers = Object.keys(this.getDependencies().peerDependencies);
    // We filter react-native as we don't want to bundle it to the web
    return (0, _lodash().uniq)(reactAdditional.concat(currentPeers).filter(dep => dep !== 'react-native'));
  }
  async getTemplateBundler(context, transformers = []) {
    return this.createTemplateWebpackBundler(context, transformers);
  }
  async createTemplateWebpackBundler(context, transformers = []) {
    return this.aspect.aspectEnv.createTemplateWebpackBundler(context, [_webpackTemplateTransformers().removeExposedReactNative, _webpackTemplateTransformers().removeReactNativePeerEntry, _reactNativeAlias().reactNativeAlias, ...transformers]);
  }
  getDependencies() {
    return {
      dependencies: {
        react: '-',
        'react-dom': '-',
        'react-native': '-'
      },
      devDependencies: {
        react: '-',
        'react-dom': '-',
        'react-native': '-',
        '@types/jest': '^26.0.0',
        '@types/react': '^17.0.8',
        '@types/react-dom': '^17.0.5',
        '@types/react-native': '^0.64.1',
        // This is added as dev dep since our jest file transformer uses babel plugins that require this to be installed
        '@babel/runtime': '7.12.18',
        '@types/testing-library__jest-dom': '5.9.5'
      },
      peerDependencies: {
        react: '^16.8.0 || ^17.0.0',
        'react-dom': '^16.8.0 || ^17.0.0',
        'react-native': '^0.64.1',
        'react-native-web': '^0.16.0'
      }
    };
  }
  async __getDescriptor() {
    return {
      type: ReactNativeEnvType
    };
  }
}
exports.ReactNativeEnv = ReactNativeEnv;

//# sourceMappingURL=react-native.env.js.map