"use strict";

require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.workspaceConfig = workspaceConfig;
function _config() {
  const data = require("@teambit/config");
  _config = function () {
    return data;
  };
  return data;
}
function _commentJson() {
  const data = require("comment-json");
  _commentJson = function () {
    return data;
  };
  return data;
}
async function workspaceConfig({
  name,
  defaultScope,
  empty
}) {
  const scope = defaultScope || 'company.scope';
  const configParsed = await (0, _config().getWorkspaceConfigTemplateParsed)();
  configParsed['teambit.workspace/workspace'].name = name;
  configParsed['teambit.workspace/workspace'].defaultScope = scope;
  configParsed['teambit.dependencies/dependency-resolver'].packageManager = 'teambit.dependencies/yarn';
  configParsed['teambit.dependencies/dependency-resolver'].policy = {
    dependencies: {
      '@teambit/eslint-config-bit-react': '~0.0.367',
      '@typescript-eslint/eslint-plugin': '4.29.3',
      'eslint-import-resolver-node': '0.3.6',
      'eslint-plugin-import': '2.22.1',
      'eslint-plugin-jest': '24.4.0',
      'eslint-plugin-jsx-a11y': '6.4.1',
      'eslint-plugin-mdx': '1.15.0',
      'eslint-plugin-react': '7.25.1'
    },
    peerDependencies: {
      react: '17.0.2',
      'react-dom': '17.0.2',
      'react-native': '0.66.4',
      'babel-jest': '27.4.5',
      'react-test-renderer': '17.0.2',
      '@testing-library/react-native': '9.0.0'
    }
  };
  const variants = {
    'teambit.workspace/variants': empty ? {
      '*': {
        'teambit.react/react-native': {}
      }
    } : (0, _commentJson().parse)(`{
      "{ui/**}, {pages/**}": {
        // uses the custom env
        "${scope}/envs/my-react-native": {},
        // uncomment the line below if you remove the custom env and remove the line above
        // "teambit.react/react-native": {},
      },
      "{themes/**}": {
        "teambit.react/react": {},
      },
      "{envs/**}, {extensions/**}": {
        "teambit.harmony/aspect": {},
      },
    }`)
  };
  const configMerged = (0, _commentJson().assign)(configParsed, variants);
  return (0, _config().stringifyWorkspaceConfig)(configMerged);
}

//# sourceMappingURL=workspace-config.js.map