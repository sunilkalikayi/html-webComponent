import { ExecutionContext } from '@teambit/envs';
import { BuildContext, BuiltTaskResult, BuildTask, TaskLocation } from '@teambit/builder';
import { BundlerMain } from '@teambit/bundler';
import { ComponentMap } from '@teambit/component';
import { Capsule } from '@teambit/isolator';
import { AbstractVinyl } from '@teambit/legacy/dist/consumer/component/sources';
import { DependencyResolverMain } from '@teambit/dependency-resolver';
import { Logger } from '@teambit/logger';
import { PreviewMain } from './preview.main.runtime';
export declare const PREVIEW_TASK_NAME = "GeneratePreview";
export declare class PreviewTask implements BuildTask {
    /**
     * bundler extension.
     */
    private bundler;
    /**
     * preview extension.
     */
    private preview;
    private dependencyResolver;
    private logger;
    constructor(
    /**
     * bundler extension.
     */
    bundler: BundlerMain, 
    /**
     * preview extension.
     */
    preview: PreviewMain, dependencyResolver: DependencyResolverMain, logger: Logger);
    aspectId: string;
    name: string;
    location: TaskLocation;
    execute(context: BuildContext): Promise<BuiltTaskResult>;
    getLinkFileDirectory(): string;
    getPreviewDirectory(context: ExecutionContext): string;
    getPathsFromMap(capsule: Capsule, moduleMap: ComponentMap<AbstractVinyl[]>, context: BuildContext): ComponentMap<string[]>;
}
