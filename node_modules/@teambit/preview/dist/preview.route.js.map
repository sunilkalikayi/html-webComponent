{"version":3,"names":["PreviewRoute","constructor","preview","logger","req","res","next","component","status","send","noPreview","isLegacyPath","isBundledWithEnv","artifact","getEnvTemplateFromComponentEnv","getPreview","e","error","serverError","getArtifactFileMiddleware"],"sources":["preview.route.ts"],"sourcesContent":["import type { NextFunction, Request, Response, Route } from '@teambit/express';\nimport type { Component } from '@teambit/component';\nimport { noPreview, serverError } from '@teambit/ui-foundation.ui.pages.static-error';\nimport type { Logger } from '@teambit/logger';\n\nimport { PreviewMain } from './preview.main.runtime';\nimport { PreviewArtifact } from './preview-artifact';\nimport { getArtifactFileMiddleware } from './artifact-file-middleware';\nimport type { PreviewUrlParams } from './artifact-file-middleware';\n\nexport class PreviewRoute implements Route {\n  constructor(\n    /**\n     * preview extension.\n     */\n    private preview: PreviewMain,\n    private logger: Logger\n  ) {}\n\n  route = `/preview/:previewName?/:filePath(*)`;\n  method = 'get';\n\n  middlewares = [\n    async (req: Request<PreviewUrlParams>, res: Response, next: NextFunction) => {\n      try {\n        // @ts-ignore TODO: @guy please fix.\n        const component = req.component as Component | undefined;\n        if (!component) return res.status(404).send(noPreview());\n        const isLegacyPath = await this.preview.isBundledWithEnv(component);\n\n        let artifact: PreviewArtifact | undefined;\n        // TODO - prevent error `getVinylsAndImportIfMissing is not a function` #4680\n        try {\n          // Taking the env template (in this case we will take the component only bundle throw component-preview route)\n          // We use this route for the env template for backward compatibility - new scopes which contain components tagged with old versions of bit\n          if (!isLegacyPath) {\n            artifact = await this.preview.getEnvTemplateFromComponentEnv(component);\n          } else {\n            // If it's legacy (bundled together with the env template) take the preview bundle from the component directly\n            artifact = await this.preview.getPreview(component);\n          }\n        } catch (e: any) {\n          this.logger.error(`getEnvTemplateFromComponentEnv or getPreview has failed`, e);\n          return res.status(404).send(noPreview());\n        }\n        // @ts-ignore\n        req.artifact = artifact;\n        // @ts-ignore\n        req.isLegacyPath = isLegacyPath;\n        return next();\n      } catch (e: any) {\n        this.logger.error('failed getting preview', e);\n        return res.status(500).send(serverError());\n      }\n    },\n    getArtifactFileMiddleware(this.logger),\n  ];\n}\n"],"mappings":";;;;;;;;;;;;;;;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAKA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGO,MAAMA,YAAY,CAAkB;EACzCC,WAAW;EACT;AACJ;AACA;EACYC,OAAoB,EACpBC,MAAc,EACtB;IAAA,KAFQD,OAAoB,GAApBA,OAAoB;IAAA,KACpBC,MAAc,GAAdA,MAAc;IAAA,+CAGf,qCAAoC;IAAA,gDACpC,KAAK;IAAA,qDAEA,CACZ,OAAOC,GAA8B,EAAEC,GAAa,EAAEC,IAAkB,KAAK;MAC3E,IAAI;QACF;QACA,MAAMC,SAAS,GAAGH,GAAG,CAACG,SAAkC;QACxD,IAAI,CAACA,SAAS,EAAE,OAAOF,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAAC,gCAAS,GAAE,CAAC;QACxD,MAAMC,YAAY,GAAG,MAAM,IAAI,CAACT,OAAO,CAACU,gBAAgB,CAACL,SAAS,CAAC;QAEnE,IAAIM,QAAqC;QACzC;QACA,IAAI;UACF;UACA;UACA,IAAI,CAACF,YAAY,EAAE;YACjBE,QAAQ,GAAG,MAAM,IAAI,CAACX,OAAO,CAACY,8BAA8B,CAACP,SAAS,CAAC;UACzE,CAAC,MAAM;YACL;YACAM,QAAQ,GAAG,MAAM,IAAI,CAACX,OAAO,CAACa,UAAU,CAACR,SAAS,CAAC;UACrD;QACF,CAAC,CAAC,OAAOS,CAAM,EAAE;UACf,IAAI,CAACb,MAAM,CAACc,KAAK,CAAE,yDAAwD,EAAED,CAAC,CAAC;UAC/E,OAAOX,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAAC,gCAAS,GAAE,CAAC;QAC1C;QACA;QACAN,GAAG,CAACS,QAAQ,GAAGA,QAAQ;QACvB;QACAT,GAAG,CAACO,YAAY,GAAGA,YAAY;QAC/B,OAAOL,IAAI,EAAE;MACf,CAAC,CAAC,OAAOU,CAAM,EAAE;QACf,IAAI,CAACb,MAAM,CAACc,KAAK,CAAC,wBAAwB,EAAED,CAAC,CAAC;QAC9C,OAAOX,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAAS,kCAAW,GAAE,CAAC;MAC5C;IACF,CAAC,EACD,IAAAC,mDAAyB,EAAC,IAAI,CAAChB,MAAM,CAAC,CACvC;EAvCE;AAwCL;AAAC"}