{"version":3,"names":["PreviewStartPlugin","constructor","workspace","bundler","ui","pubsub","logger","Promise","resolve","setReady","servers","initialState","setServers","useState","updateServers","useEffect","noneAreCompiling","Object","values","every","x","compiling","previewServers","initiate","options","listenToDevServers","components","byPattern","pattern","devServer","forEach","server","listen","watcher","watchAll","spawnTSServer","checkTypes","CheckTypes","None","preCompile","initiator","CompilationInitiator","Start","catch","err","msg","error","console","message","concat","getProxy","proxyConfigs","map","context","envRuntime","id","target","port","ws","flatten","SubscribeToWebpackEvents","onStart","state","onDone","results","whenReady","readyPromise"],"sources":["preview.start-plugin.tsx"],"sourcesContent":["import React, { useState, useEffect, Dispatch, SetStateAction } from 'react';\nimport { flatten } from 'lodash';\nimport { PreviewServerStatus } from '@teambit/preview.cli.preview-server-status';\nimport { BundlerMain, ComponentServer } from '@teambit/bundler';\nimport { PubsubMain } from '@teambit/pubsub';\nimport { ProxyEntry, StartPlugin, StartPluginOptions, UiMain } from '@teambit/ui';\nimport { Workspace, CheckTypes } from '@teambit/workspace';\nimport { SubscribeToWebpackEvents, CompilationResult } from '@teambit/preview.cli.webpack-events-listener';\nimport { CompilationInitiator } from '@teambit/compiler';\nimport { Logger } from '@teambit/logger';\n\ntype CompilationServers = Record<string, CompilationResult>;\ntype ServersSetter = Dispatch<SetStateAction<CompilationServers>>;\n\nexport class PreviewStartPlugin implements StartPlugin {\n  constructor(\n    private workspace: Workspace,\n    private bundler: BundlerMain,\n    private ui: UiMain,\n    private pubsub: PubsubMain,\n    private logger: Logger\n  ) {}\n\n  previewServers: ComponentServer[] = [];\n\n  async initiate(options: StartPluginOptions) {\n    this.listenToDevServers();\n\n    const components = await this.workspace.byPattern(options.pattern || '');\n    // TODO: logic for creating preview servers must be refactored to this aspect from the DevServer aspect.\n    const previewServers = await this.bundler.devServer(components);\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    previewServers.forEach((server) => server.listen());\n    // DON'T add wait! this promise never resolve so it's stop all the start process!\n    this.workspace.watcher\n      .watchAll({\n        spawnTSServer: true,\n        checkTypes: CheckTypes.None,\n        preCompile: false,\n        initiator: CompilationInitiator.Start,\n      })\n      .catch((err) => {\n        const msg = `watcher found an error`;\n        this.logger.error(msg, err);\n        this.logger.console(`${msg}, ${err.message}`);\n      });\n    this.previewServers = this.previewServers.concat(previewServers);\n  }\n\n  getProxy(): ProxyEntry[] {\n    const proxyConfigs = this.previewServers.map<ProxyEntry[]>((server) => {\n      return [\n        {\n          context: [`/preview/${server.context.envRuntime.id}`],\n          target: `http://localhost:${server.port}`,\n        },\n        {\n          context: [`/_hmr/${server.context.envRuntime.id}`],\n          target: `http://localhost:${server.port}`,\n          ws: true,\n        },\n      ];\n    });\n\n    return flatten(proxyConfigs);\n  }\n\n  // TODO: this should be a part of the devServer\n  private listenToDevServers() {\n    // keep state changes immutable!\n    SubscribeToWebpackEvents(this.pubsub, {\n      onStart: (id) => {\n        this.updateServers((state) => ({\n          ...state,\n          [id]: { compiling: true },\n        }));\n      },\n      onDone: (id, results) => {\n        this.updateServers((state) => ({\n          ...state,\n          [id]: results,\n        }));\n      },\n    });\n  }\n\n  private setReady: () => void;\n  private readyPromise = new Promise<void>((resolve) => (this.setReady = resolve));\n  get whenReady(): Promise<void> {\n    return this.readyPromise;\n  }\n\n  private initialState: CompilationServers = {};\n  // implements react-like setter (value or updater)\n  private updateServers: ServersSetter = (servers) => {\n    this.initialState = typeof servers === 'function' ? servers(this.initialState) : servers;\n    return servers;\n  };\n\n  render = () => {\n    const [servers, setServers] = useState<CompilationServers>(this.initialState);\n    this.updateServers = setServers;\n    this.initialState = {};\n\n    useEffect(() => {\n      const noneAreCompiling = Object.values(servers).every((x) => !x.compiling);\n      if (noneAreCompiling) this.setReady();\n    }, [servers]);\n\n    return <PreviewServerStatus previewServers={this.previewServers} serverStats={servers} />;\n  };\n}\n"],"mappings":"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"}