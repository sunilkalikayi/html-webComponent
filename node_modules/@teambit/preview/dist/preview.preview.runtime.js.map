{"version":3,"names":["PreviewPreview","constructor","pubsub","previewSlot","renderingContextSlot","isReady","Promise","resolve","_setupPromise","PREVIEW_MODULES","onSet","add","rootExt","window","document","body","style","width","previewName","componentId","getLocation","name","getDefault","isDev","preview","getPreview","PreviewNotFound","includesAll","all","include","map","inclPreviewName","includedPreview","undefined","inclPreviewModule","getPreviewModule","selectPreviewModel","fullName","includes","filter","module","componentAspects","getComponentAspects","toString","previewModule","render","getRenderingContext","reportSize","setViewport","memoize","fetchComponentAspects","max","maxAge","registerClickPubSub","addEventListener","e","timestamp","Date","now","clickEvent","Object","assign","pub","PreviewAspect","id","ClickInsideAnIframeEvent","has","includedReady","every","included","query","getQuery","viewPort","getParam","maxWidth","parent","sendPubsubEvent","SizeEvent","offsetWidth","height","offsetHeight","debounce","counter","interval","setInterval","clearInterval","compShortId","relevantModel","get","Error","componentMap","componentPreviews","fetchComponentPreview","loadComponentPreviews","component","metadata","mainModule","componentMapMetadata","previewFile","allFiles","fetchComponentPreviewFiles","file","endsWith","addComponentFileElement","loadPreviewScript","previewBundleFileName","addComponentFileScriptElement","addComponentFileLinkElement","catch","err","previewAssetsRoute","stringId","url","res","crossFetch","status","parsed","json","isBundledWithEnv","files","length","previewRoute","src","loadScript","href","loadLink","globalId","toStringWithoutVersion","componentPreview","registerPreview","register","aspectsFilter","RenderingContext","registerRenderContext","renderContext","previews","values","defaultOne","find","previewCandidate","default","param","params","URLSearchParams","withoutHash","location","hash","substring","after","split","before","ComponentID","tryFromString","provider","config","PreviewRuntime","PubsubAspect","Slot","withType","addRuntime"],"sources":["preview.preview.runtime.tsx"],"sourcesContent":["import PubsubAspect, { PubsubPreview } from '@teambit/pubsub';\nimport { Slot, SlotRegistry } from '@teambit/harmony';\nimport { ComponentID } from '@teambit/component-id';\nimport crossFetch from 'cross-fetch';\nimport memoize from 'memoizee';\nimport { debounce } from 'lodash';\n\nimport { PreviewNotFound } from './exceptions';\nimport { PreviewType } from './preview-type';\nimport { PreviewAspect, PreviewRuntime } from './preview.aspect';\nimport { ClickInsideAnIframeEvent } from './events';\nimport { ModuleFile, PreviewModule } from './types/preview-module';\nimport { RenderingContext } from './rendering-context';\nimport { fetchComponentAspects } from './gql/fetch-component-aspects';\nimport { PREVIEW_MODULES } from './preview-modules';\nimport { loadScript, loadLink } from './html-utils';\nimport { SizeEvent } from './size-event';\n\n// forward linkModules() for generate-link.ts\nexport { linkModules } from './preview-modules';\n\nexport type PreviewSlot = SlotRegistry<PreviewType>;\n\nexport type RenderingContextOptions = { aspectsFilter?: string[] };\nexport type RenderingContextProvider = (options: RenderingContextOptions) => { [key: string]: any };\nexport type RenderingContextSlot = SlotRegistry<RenderingContextProvider>;\n\nexport class PreviewPreview {\n  constructor(\n    /**\n     * register to pubsub\n     */\n    private pubsub: PubsubPreview,\n\n    /**\n     * preview slot.\n     */\n    private previewSlot: PreviewSlot,\n\n    private renderingContextSlot: RenderingContextSlot\n  ) {\n    this.registerClickPubSub();\n  }\n\n  private registerClickPubSub() {\n    window.addEventListener('click', (e) => {\n      const timestamp = Date.now();\n      const clickEvent = Object.assign({}, e);\n      this.pubsub.pub(PreviewAspect.id, new ClickInsideAnIframeEvent(timestamp, clickEvent));\n    });\n  }\n\n  private isDev = false;\n\n  private isReady() {\n    const { previewName } = this.getLocation();\n    const name = previewName || this.getDefault();\n\n    if (!PREVIEW_MODULES.has(name)) return false;\n    const preview = this.getPreview(name);\n    if (!preview) return false;\n    const includedReady = preview.include?.every((included) => PREVIEW_MODULES.has(included)) ?? true;\n    if (!includedReady) return false;\n\n    return true;\n  }\n\n  private _setupPromise?: Promise<void>;\n  setup = () => {\n    if (this.isReady()) return Promise.resolve();\n\n    this._setupPromise ??= new Promise((resolve) => {\n      PREVIEW_MODULES.onSet.add(() => {\n        if (this.isReady()) resolve();\n      });\n    });\n\n    return this._setupPromise;\n  };\n\n  /**\n   * render the preview.\n   */\n  render = async (rootExt?: string) => {\n    // fit content always.\n    window.document.body.style.width = 'fit-content';\n\n    const { previewName, componentId } = this.getLocation();\n    const name = previewName || this.getDefault();\n    if (rootExt) this.isDev = rootExt === 'teambit.workspace/workspace';\n\n    const preview = this.getPreview(name);\n    if (!preview || !componentId) {\n      throw new PreviewNotFound(previewName);\n    }\n\n    const includesAll = await Promise.all(\n      (preview.include || []).map(async (inclPreviewName) => {\n        const includedPreview = this.getPreview(inclPreviewName);\n        if (!includedPreview) return undefined;\n\n        const inclPreviewModule = await this.getPreviewModule(inclPreviewName, componentId);\n        return includedPreview.selectPreviewModel?.(componentId.fullName, inclPreviewModule);\n      })\n    );\n\n    const includes = includesAll.filter((module) => !!module);\n    // during build / tag, the component is isolated, so all aspects are relevant, and do not require filtering\n    const componentAspects = this.isDev ? await this.getComponentAspects(componentId.toString()) : undefined;\n    const previewModule = await this.getPreviewModule(name, componentId);\n    const render = preview.render(componentId, previewModule, includes, this.getRenderingContext(componentAspects));\n\n    this.reportSize();\n    this.setViewport();\n    return render;\n  };\n\n  setViewport() {\n    const query = this.getQuery();\n    const viewPort = this.getParam(query, 'viewport');\n    if (!viewPort) {\n      window.document.body.style.width = '100%';\n      return;\n    }\n\n    window.document.body.style.maxWidth = `${viewPort}px`;\n  }\n\n  reportSize() {\n    if (!window?.parent || !window?.document) return;\n    // TODO: discuss with gilad for a better way to resolve page loaded here.\n\n    const sendPubsubEvent = () => {\n      this.pubsub.pub(\n        PreviewAspect.id,\n        new SizeEvent({\n          width: window.document.body.offsetWidth,\n          height: window.document.body.offsetHeight,\n        })\n      );\n    };\n\n    window.document.body.addEventListener('resize', debounce(sendPubsubEvent, 300));\n\n    let counter = 0;\n    const interval = setInterval(() => {\n      // TODO: think\n      counter += 1;\n      if (counter > 10) {\n        clearInterval(interval);\n        return;\n      }\n      this.pubsub.pub(\n        PreviewAspect.id,\n        new SizeEvent({\n          width: window.document.body.offsetWidth,\n          height: window.document.body.offsetHeight,\n        })\n      );\n    }, 200);\n  }\n\n  async getPreviewModule(previewName: string, id: ComponentID): Promise<PreviewModule> {\n    const compShortId = id.fullName;\n\n    const relevantModel = PREVIEW_MODULES.get(previewName);\n    if (!relevantModel) throw new Error(`[preview.preview] missing preview \"${previewName}\"`);\n    if (relevantModel.componentMap[compShortId]) return relevantModel;\n\n    const componentPreviews = await this.fetchComponentPreview(id, previewName);\n    PREVIEW_MODULES.loadComponentPreviews(compShortId, componentPreviews);\n\n    const component = componentPreviews[previewName];\n    const metadata = componentPreviews[`${previewName}_metadata`];\n\n    return {\n      mainModule: relevantModel.mainModule,\n      componentMap: {\n        [id.fullName]: component,\n      },\n      componentMapMetadata: {\n        [id.fullName]: metadata,\n      },\n    };\n  }\n\n  async fetchComponentPreview(id: ComponentID, name: string): Promise<Record<string, ModuleFile[]>> {\n    let previewFile: string | undefined;\n    const allFiles = await this.fetchComponentPreviewFiles(id, name);\n    // It's a component bundled with the env\n    if (allFiles === null) return {};\n\n    await Promise.all(\n      allFiles.map((file) => {\n        // We want to run the preview file always last\n        if (file.endsWith('-preview.js')) {\n          previewFile = file;\n          return undefined;\n        }\n\n        return this.addComponentFileElement(id, file);\n      })\n    );\n\n    if (!previewFile) return {};\n    return this.loadPreviewScript(id, name, previewFile);\n  }\n\n  private addComponentFileElement(id: ComponentID, previewBundleFileName: string) {\n    if (previewBundleFileName.endsWith('.js')) {\n      return this.addComponentFileScriptElement(id, previewBundleFileName);\n    }\n\n    // TODO - should we load assets other than .css / .js?\n    // if (previewBundleFileName.endsWith('.css')) {\n    this.addComponentFileLinkElement(id, previewBundleFileName).catch((err) => {\n      throw new Error(\n        `[preview.preview] failed loading asset \"${previewBundleFileName}\". Error - \"${err?.toString()}\"`\n      );\n    });\n\n    // do NOT await non js assets, as they might never load (like images), and not critical for rendering.\n    return undefined;\n  }\n\n  private async fetchComponentPreviewFiles(id: ComponentID, previewName: string): Promise<string[] | null> {\n    const previewAssetsRoute = `~aspect/preview-assets`;\n    const stringId = id.toString();\n    const url = `/api/${stringId}/${previewAssetsRoute}`;\n\n    const res = await crossFetch(url);\n    if (res.status >= 400) {\n      throw new PreviewNotFound(previewName);\n    }\n    const parsed = await res.json();\n    // This is component bundled with the env, no reason to bring the files, as they will be the files of the env\n    if (parsed.isBundledWithEnv) {\n      return null;\n    }\n    if (!parsed.files || !parsed.files.length) {\n      throw new PreviewNotFound(previewName);\n    }\n    return parsed.files;\n  }\n\n  private addComponentFileScriptElement(id: ComponentID, previewBundleFileName: string) {\n    const previewRoute = `~aspect/component-preview`;\n    const stringId = id.toString();\n    const src = `/api/${stringId}/${previewRoute}/${previewBundleFileName}`;\n    return loadScript({ src });\n  }\n\n  private addComponentFileLinkElement(id: ComponentID, previewBundleFileName: string) {\n    const stringId = id.toString();\n    const previewRoute = `~aspect/component-preview`;\n    const href = `/api/${stringId}/${previewRoute}/${previewBundleFileName}`;\n    return loadLink({ href });\n  }\n\n  private async loadPreviewScript(id: ComponentID, previewName: string, previewBundleFileName: string) {\n    const previewRoute = `~aspect/component-preview`;\n    const src = `/api/${id.toString()}/${previewRoute}/${previewBundleFileName}`;\n    await loadScript({ src });\n\n    // TODO - replace with jsonp\n    const globalId = `${id.toStringWithoutVersion()}-preview`;\n    const componentPreview = window[globalId];\n    if (!componentPreview) throw new PreviewNotFound(previewName);\n\n    return componentPreview as Record<string, ModuleFile[]>;\n  }\n\n  private getComponentAspects = memoize(fetchComponentAspects, {\n    max: 100,\n    maxAge: 12 * 60 * 60 * 1000,\n  });\n\n  /**\n   * register a new preview.\n   */\n  registerPreview(preview: PreviewType) {\n    this.previewSlot.register(preview);\n    return this;\n  }\n\n  /**\n   * get the preview rendering context.\n   */\n  getRenderingContext(aspectsFilter?: string[]) {\n    return new RenderingContext(this.renderingContextSlot, { aspectsFilter });\n  }\n\n  /**\n   * allows aspects to add rendering contexts.\n   * render context is available through all preview definitions.\n   */\n  registerRenderContext(renderContext: RenderingContextProvider) {\n    this.renderingContextSlot.register(renderContext);\n    return this;\n  }\n\n  getDefault() {\n    const previews = this.previewSlot.values();\n    const defaultOne = previews.find((previewCandidate) => previewCandidate.default);\n\n    return defaultOne?.name || previews[0].name;\n  }\n\n  private getPreview(previewName: string): undefined | PreviewType {\n    const previews = this.previewSlot.values();\n    const preview = previews.find((previewCandidate) => previewCandidate.name === previewName);\n\n    return preview;\n  }\n\n  getParam(query: string, param: string) {\n    const params = new URLSearchParams(query);\n    return params.get(param);\n  }\n\n  getQuery() {\n    const withoutHash = window.location.hash.substring(1);\n    const [, after] = withoutHash.split('?');\n    return after;\n  }\n\n  private getLocation() {\n    const withoutHash = window.location.hash.substring(1);\n    const [before, after] = withoutHash.split('?');\n\n    return {\n      previewName: this.getParam(after, 'preview'),\n      componentId: ComponentID.tryFromString(before),\n    };\n  }\n\n  static runtime = PreviewRuntime;\n\n  static dependencies = [PubsubAspect];\n\n  static slots = [Slot.withType<PreviewType>(), Slot.withType<RenderingContextProvider>()];\n\n  static async provider(\n    [pubsub]: [PubsubPreview],\n    config,\n    [previewSlot, renderingContextSlot]: [PreviewSlot, RenderingContextSlot]\n  ) {\n    const preview = new PreviewPreview(pubsub, previewSlot, renderingContextSlot);\n\n    window.addEventListener('hashchange', () => {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      preview.render();\n    });\n\n    return preview;\n  }\n}\n\nPreviewAspect.addRuntime(PreviewPreview);\n"],"mappings":"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"}