{"version":3,"names":["generateLink","prefix","componentMap","mainModule","isSplitComponentBundle","links","toArray","map","component","modulePath","compIdx","componentIdentifier","id","fullName","modules","path","pathIdx","varName","moduleVarName","resolveFrom","toWindowsCompatiblePath","require","resolve","link","module","join","filter","line","componentIdx","fileIdx"],"sources":["generate-link.ts"],"sourcesContent":["import { toWindowsCompatiblePath } from '@teambit/toolbox.path.to-windows-compatible-path';\nimport type { ComponentMap } from '@teambit/component';\n\n// :TODO refactor to building an AST and generate source code based on it.\nexport function generateLink(\n  prefix: string,\n  componentMap: ComponentMap<string[]>,\n  mainModule?: string,\n  isSplitComponentBundle = false\n): string {\n  const links = componentMap.toArray().map(([component, modulePath], compIdx) => ({\n    componentIdentifier: component.id.fullName,\n    modules: modulePath.map((path, pathIdx) => ({\n      varName: moduleVarName(compIdx, pathIdx),\n      resolveFrom: toWindowsCompatiblePath(path),\n    })),\n  }));\n\n  return `\nimport { linkModules } from '${toWindowsCompatiblePath(require.resolve('./preview.preview.runtime'))}';\n${mainModule ? `import * as mainModule from '${toWindowsCompatiblePath(mainModule)}';` : 'const mainModule = {};'}\n\n${links\n  .map((link) => link.modules.map((module) => `import * as ${module.varName} from \"${module.resolveFrom}\";`).join('\\n'))\n  .filter((line) => line !== '') // prevent empty lines\n  .join('\\n')}\n\nlinkModules('${prefix}', {\n  mainModule,\n  isSplitComponentBundle: ${isSplitComponentBundle},\n  componentMap: {\n${links\n  // must include all components, including empty\n  .map((link) => `    \"${link.componentIdentifier}\": [${link.modules.map((module) => module.varName).join(', ')}]`)\n  .join(',\\n')}\n  }\n});\n`;\n}\n\nfunction moduleVarName(componentIdx: number, fileIdx: number) {\n  return `file_${componentIdx}_${fileIdx}`;\n}\n"],"mappings":";;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;AACO,SAASA,YAAY,CAC1BC,MAAc,EACdC,YAAoC,EACpCC,UAAmB,EACnBC,sBAAsB,GAAG,KAAK,EACtB;EACR,MAAMC,KAAK,GAAGH,YAAY,CAACI,OAAO,EAAE,CAACC,GAAG,CAAC,CAAC,CAACC,SAAS,EAAEC,UAAU,CAAC,EAAEC,OAAO,MAAM;IAC9EC,mBAAmB,EAAEH,SAAS,CAACI,EAAE,CAACC,QAAQ;IAC1CC,OAAO,EAAEL,UAAU,CAACF,GAAG,CAAC,CAACQ,IAAI,EAAEC,OAAO,MAAM;MAC1CC,OAAO,EAAEC,aAAa,CAACR,OAAO,EAAEM,OAAO,CAAC;MACxCG,WAAW,EAAE,IAAAC,sCAAuB,EAACL,IAAI;IAC3C,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC;EAEH,OAAQ;AACV,+BAA+B,IAAAK,sCAAuB,EAACC,OAAO,CAACC,OAAO,CAAC,2BAA2B,CAAC,CAAE;AACrG,EAAEnB,UAAU,GAAI,gCAA+B,IAAAiB,sCAAuB,EAACjB,UAAU,CAAE,IAAG,GAAG,wBAAyB;AAClH;AACA,EAAEE,KAAK,CACJE,GAAG,CAAEgB,IAAI,IAAKA,IAAI,CAACT,OAAO,CAACP,GAAG,CAAEiB,MAAM,IAAM,eAAcA,MAAM,CAACP,OAAQ,UAASO,MAAM,CAACL,WAAY,IAAG,CAAC,CAACM,IAAI,CAAC,IAAI,CAAC,CAAC,CACrHC,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAK,EAAE,CAAC,CAAC;EAAA,CAC9BF,IAAI,CAAC,IAAI,CAAE;AACd;AACA,eAAexB,MAAO;AACtB;AACA,4BAA4BG,sBAAuB;AACnD;AACA,EAAEC;EACA;EAAA,CACCE,GAAG,CAAEgB,IAAI,IAAM,QAAOA,IAAI,CAACZ,mBAAoB,OAAMY,IAAI,CAACT,OAAO,CAACP,GAAG,CAAEiB,MAAM,IAAKA,MAAM,CAACP,OAAO,CAAC,CAACQ,IAAI,CAAC,IAAI,CAAE,GAAE,CAAC,CAChHA,IAAI,CAAC,KAAK,CAAE;AACf;AACA;AACA,CAAC;AACD;AAEA,SAASP,aAAa,CAACU,YAAoB,EAAEC,OAAe,EAAE;EAC5D,OAAQ,QAAOD,YAAa,IAAGC,OAAQ,EAAC;AAC1C"}