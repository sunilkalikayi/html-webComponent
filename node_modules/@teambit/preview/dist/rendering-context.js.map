{"version":3,"names":["RenderingContext","constructor","contexts","options","get","aspectId","contextFactory"],"sources":["rendering-context.ts"],"sourcesContent":["import { RenderingContextSlot } from './preview.preview.runtime';\n\nexport type RenderingContextOptions = { aspectsFilter?: string[] };\nexport type RenderingContextProvider = (options: RenderingContextOptions) => { [key: string]: any };\n\nexport class RenderingContext {\n  constructor(private contexts: RenderingContextSlot, private options: RenderingContextOptions = {}) {}\n\n  /**\n   * obtain rendering context of a specific aspect.\n   */\n  get(aspectId: string) {\n    const contextFactory = this.contexts.get(aspectId);\n    return contextFactory?.(this.options);\n  }\n}\n"],"mappings":";;;;;;AAKO,MAAMA,gBAAgB,CAAC;EAC5BC,WAAW,CAASC,QAA8B,EAAUC,OAAgC,GAAG,CAAC,CAAC,EAAE;IAAA,KAA/ED,QAA8B,GAA9BA,QAA8B;IAAA,KAAUC,OAAgC,GAAhCA,OAAgC;EAAQ;;EAEpG;AACF;AACA;EACEC,GAAG,CAACC,QAAgB,EAAE;IACpB,MAAMC,cAAc,GAAG,IAAI,CAACJ,QAAQ,CAACE,GAAG,CAACC,QAAQ,CAAC;IAClD,OAAOC,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAG,IAAI,CAACH,OAAO,CAAC;EACvC;AACF;AAAC"}