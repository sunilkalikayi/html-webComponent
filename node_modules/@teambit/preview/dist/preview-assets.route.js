"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PreviewAssetsRoute = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _uiFoundationUiPages() {
  const data = require("@teambit/ui-foundation.ui.pages.static-error");
  _uiFoundationUiPages = function () {
    return data;
  };
  return data;
}
class PreviewAssetsRoute {
  constructor(
  /**
   * preview extension.
   */
  preview, logger) {
    this.preview = preview;
    this.logger = logger;
    (0, _defineProperty2().default)(this, "route", '/preview-assets');
    (0, _defineProperty2().default)(this, "method", 'get');
    (0, _defineProperty2().default)(this, "middlewares", [async (req, res) => {
      try {
        // @ts-ignore TODO: @guy please fix.
        const component = req.component;
        // if (!component) return res.status(404).send(noPreview());
        if (!component) return res.status(404).jsonp({
          error: 'not found'
        });
        const result = await this.preview.getPreviewFiles(component);
        if (!result) return res.status(404).jsonp({
          error: 'not found'
        });
        return res.json(result);
      } catch (e) {
        this.logger.error('failed getting preview assets', e);
        return res.status(500).send((0, _uiFoundationUiPages().serverError)());
      }
    }]);
  }
}
exports.PreviewAssetsRoute = PreviewAssetsRoute;

//# sourceMappingURL=preview-assets.route.js.map