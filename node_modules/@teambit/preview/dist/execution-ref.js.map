{"version":3,"names":["ExecutionRef","constructor","executionCtx","currentComponents","components","add","added","concat","remove","removed","filter","c","id","toString","update","next","map","equals","get","find","x","isEqual"],"sources":["execution-ref.ts"],"sourcesContent":["import { Component, ComponentID } from '@teambit/component';\nimport type { ExecutionContext } from '@teambit/envs';\n\n// TODO - use workspace.list() instead of this\nexport class ExecutionRef {\n  constructor(public executionCtx: ExecutionContext) {\n    this.currentComponents = executionCtx.components;\n  }\n\n  currentComponents: Component[];\n\n  add(added: Component) {\n    this.currentComponents = this.currentComponents.concat(added);\n  }\n  remove(removed: ComponentID) {\n    this.currentComponents = this.currentComponents.filter((c) => c.id.toString() !== removed.toString());\n  }\n  update(next: Component) {\n    this.currentComponents = this.currentComponents.map((c) => (c.equals(next) ? next : c));\n  }\n\n  get(id: ComponentID) {\n    return this.currentComponents.find((x) => x.id.isEqual(id));\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;AAGA;AACO,MAAMA,YAAY,CAAC;EACxBC,WAAW,CAAQC,YAA8B,EAAE;IAAA,KAAhCA,YAA8B,GAA9BA,YAA8B;IAAA;IAC/C,IAAI,CAACC,iBAAiB,GAAGD,YAAY,CAACE,UAAU;EAClD;EAIAC,GAAG,CAACC,KAAgB,EAAE;IACpB,IAAI,CAACH,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACI,MAAM,CAACD,KAAK,CAAC;EAC/D;EACAE,MAAM,CAACC,OAAoB,EAAE;IAC3B,IAAI,CAACN,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACO,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,CAACC,QAAQ,EAAE,KAAKJ,OAAO,CAACI,QAAQ,EAAE,CAAC;EACvG;EACAC,MAAM,CAACC,IAAe,EAAE;IACtB,IAAI,CAACZ,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACa,GAAG,CAAEL,CAAC,IAAMA,CAAC,CAACM,MAAM,CAACF,IAAI,CAAC,GAAGA,IAAI,GAAGJ,CAAE,CAAC;EACzF;EAEAO,GAAG,CAACN,EAAe,EAAE;IACnB,OAAO,IAAI,CAACT,iBAAiB,CAACgB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACR,EAAE,CAACS,OAAO,CAACT,EAAE,CAAC,CAAC;EAC7D;AACF;AAAC"}