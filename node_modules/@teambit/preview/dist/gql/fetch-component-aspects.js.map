{"version":3,"names":["GQL_SERVER","GET_COMPONENT_ASPECTS","gql","fetchComponentAspects","componentId","response","request","id","toString","getHost","get","aspects","map","x","err","console","error","undefined"],"sources":["fetch-component-aspects.tsx"],"sourcesContent":["import { request, gql } from 'graphql-request';\n\nconst GQL_SERVER = '/graphql';\nconst GET_COMPONENT_ASPECTS = gql`\n  query getComponentAspects($id: String!) {\n    getHost {\n      id\n      get(id: $id) {\n        aspects {\n          id\n        }\n      }\n    }\n  }\n`;\ntype QueryResult = {\n  getHost: {\n    id: string;\n    get: {\n      aspects: { id: string }[];\n    };\n  };\n};\n\nexport async function fetchComponentAspects(componentId: string) {\n  try {\n    const response = await request<QueryResult>(GQL_SERVER, GET_COMPONENT_ASPECTS, { id: componentId.toString() });\n    return response.getHost.get.aspects.map((x) => x.id);\n  } catch (err: any) {\n    // eslint-disable-next-line no-console\n    console.error(`[gql] error on \"getComponentAspects\" - \"${err.toString()}\"`);\n    return undefined;\n  }\n}\n"],"mappings":";;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA,MAAMA,UAAU,GAAG,UAAU;AAC7B,MAAMC,qBAAqB,GAAG,IAAAC,qBAAG,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAUM,eAAeC,qBAAqB,CAACC,WAAmB,EAAE;EAC/D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAM,IAAAC,yBAAO,EAAcN,UAAU,EAAEC,qBAAqB,EAAE;MAAEM,EAAE,EAAEH,WAAW,CAACI,QAAQ;IAAG,CAAC,CAAC;IAC9G,OAAOH,QAAQ,CAACI,OAAO,CAACC,GAAG,CAACC,OAAO,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACN,EAAE,CAAC;EACtD,CAAC,CAAC,OAAOO,GAAQ,EAAE;IACjB;IACAC,OAAO,CAACC,KAAK,CAAE,2CAA0CF,GAAG,CAACN,QAAQ,EAAG,GAAE,CAAC;IAC3E,OAAOS,SAAS;EAClB;AACF"}