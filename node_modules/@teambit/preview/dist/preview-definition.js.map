{"version":3,"names":[],"sources":["preview-definition.ts"],"sourcesContent":["import type { Component, ComponentMap } from '@teambit/component';\nimport type { Environment, ExecutionContext } from '@teambit/envs';\nimport type { AbstractVinyl } from '@teambit/legacy/dist/consumer/component/sources';\n\nexport interface PreviewDefinition {\n  /**\n   * extension preview prefix\n   */\n  prefix: string;\n\n  /**\n   * which other extension modules to include in the preview context.\n   */\n  include?: string[];\n\n  /**\n   * path of the default template to be executed.\n   */\n  renderTemplatePath?: (context: ExecutionContext) => Promise<string>;\n\n  /**\n   * get the template by env.\n   * TODO: refactor `renderTemplatePath` to accept only an env and remove this method.\n   */\n  renderTemplatePathByEnv?: (env: Environment) => Promise<string>;\n\n  /**\n   * get all files to require in the preview runtime.\n   */\n  getModuleMap(components: Component[]): Promise<ComponentMap<AbstractVinyl[]>>;\n\n  /**\n   * Whether to include the peers chunk in the output html\n   */\n  includePeers?: boolean;\n\n  /**\n   * Get metadata for the preview\n   */\n  getMetadata?: (component: Component) => Promise<unknown>;\n}\n"],"mappings":""}