/// <reference types="qs" />
/// <reference types="express" />
import type { NextFunction, Request, Response } from '@teambit/express';
import type { ComponentUrlParams, RegisteredComponentRoute } from '@teambit/component';
import type { Logger } from '@teambit/logger';
import type { PreviewMain } from './preview.main.runtime';
declare type UrlParams = ComponentUrlParams & {
    filePath?: string;
};
export declare class EnvTemplateRoute implements RegisteredComponentRoute {
    /**
     * preview extension.
     */
    private preview;
    private logger;
    constructor(
    /**
     * preview extension.
     */
    preview: PreviewMain, logger: Logger);
    route: string;
    method: string;
    resolveComponent: boolean;
    middlewares: (((req: Request<import("./artifact-file-middleware").PreviewUrlParams, any, any, import("qs").ParsedQs, Record<string, any>>, res: import("express").Response<any, Record<string, any>>) => Promise<import("express").Response<any, Record<string, any>>>) | ((req: Request<UrlParams>, res: Response, next: NextFunction) => Promise<void | import("express").Response<any, Record<string, any>>>))[];
}
export {};
