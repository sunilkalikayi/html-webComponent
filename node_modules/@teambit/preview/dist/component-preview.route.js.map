{"version":3,"names":["ComponentPreviewRoute","constructor","preview","logger","req","res","next","isLegacyPath","component","status","send","noPreview","artifact","getPreview","e","error","serverError","getArtifactFileMiddleware"],"sources":["component-preview.route.ts"],"sourcesContent":["import type { NextFunction, Request, Response, Route } from '@teambit/express';\nimport type { Component } from '@teambit/component';\nimport { noPreview, serverError } from '@teambit/ui-foundation.ui.pages.static-error';\nimport type { Logger } from '@teambit/logger';\n\nimport { PreviewMain } from './preview.main.runtime';\nimport type { PreviewArtifact } from './preview-artifact';\nimport type { PreviewUrlParams } from './artifact-file-middleware';\nimport { getArtifactFileMiddleware } from './artifact-file-middleware';\n\nexport class ComponentPreviewRoute implements Route {\n  constructor(\n    /**\n     * preview extension.\n     */\n    private preview: PreviewMain,\n    private logger: Logger\n  ) {}\n\n  route = `/component-preview/:filePath(*)`;\n  method = 'get';\n\n  middlewares = [\n    async (req: Request<PreviewUrlParams>, res: Response, next: NextFunction) => {\n      try {\n        let isLegacyPath = false;\n        // @ts-ignore TODO: @guy please fix.\n        const component = req.component as Component | undefined;\n        if (!component) return res.status(404).send(noPreview());\n\n        let artifact: PreviewArtifact | undefined;\n        // TODO - prevent error `getVinylsAndImportIfMissing is not a function` #4680\n        try {\n          isLegacyPath = true;\n          artifact = await this.preview.getPreview(component);\n        } catch (e: any) {\n          this.logger.error(`preview.getPreview has failed`, e);\n          return res.status(404).send(noPreview());\n        }\n        // @ts-ignore\n        req.artifact = artifact;\n        // @ts-ignore\n        req.isLegacyPath = isLegacyPath;\n        return next();\n      } catch (e: any) {\n        this.logger.error('failed getting preview', e);\n        return res.status(500).send(serverError());\n      }\n    },\n    getArtifactFileMiddleware(this.logger),\n  ];\n}\n"],"mappings":";;;;;;;;;;;;;;;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAMA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEO,MAAMA,qBAAqB,CAAkB;EAClDC,WAAW;EACT;AACJ;AACA;EACYC,OAAoB,EACpBC,MAAc,EACtB;IAAA,KAFQD,OAAoB,GAApBA,OAAoB;IAAA,KACpBC,MAAc,GAAdA,MAAc;IAAA,+CAGf,iCAAgC;IAAA,gDAChC,KAAK;IAAA,qDAEA,CACZ,OAAOC,GAA8B,EAAEC,GAAa,EAAEC,IAAkB,KAAK;MAC3E,IAAI;QACF,IAAIC,YAAY,GAAG,KAAK;QACxB;QACA,MAAMC,SAAS,GAAGJ,GAAG,CAACI,SAAkC;QACxD,IAAI,CAACA,SAAS,EAAE,OAAOH,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAAC,gCAAS,GAAE,CAAC;QAExD,IAAIC,QAAqC;QACzC;QACA,IAAI;UACFL,YAAY,GAAG,IAAI;UACnBK,QAAQ,GAAG,MAAM,IAAI,CAACV,OAAO,CAACW,UAAU,CAACL,SAAS,CAAC;QACrD,CAAC,CAAC,OAAOM,CAAM,EAAE;UACf,IAAI,CAACX,MAAM,CAACY,KAAK,CAAE,+BAA8B,EAAED,CAAC,CAAC;UACrD,OAAOT,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAAC,gCAAS,GAAE,CAAC;QAC1C;QACA;QACAP,GAAG,CAACQ,QAAQ,GAAGA,QAAQ;QACvB;QACAR,GAAG,CAACG,YAAY,GAAGA,YAAY;QAC/B,OAAOD,IAAI,EAAE;MACf,CAAC,CAAC,OAAOQ,CAAM,EAAE;QACf,IAAI,CAACX,MAAM,CAACY,KAAK,CAAC,wBAAwB,EAAED,CAAC,CAAC;QAC9C,OAAOT,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAAM,kCAAW,GAAE,CAAC;MAC5C;IACF,CAAC,EACD,IAAAC,mDAAyB,EAAC,IAAI,CAACd,MAAM,CAAC,CACvC;EAjCE;AAkCL;AAAC"}