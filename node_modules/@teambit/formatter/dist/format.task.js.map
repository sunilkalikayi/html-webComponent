{"version":3,"names":["FormatTask","constructor","aspectId","name","execute","context","formatter","env","getFormatter","results","check","componentsResults","map","formatResult","component","metadata","errors"],"sources":["format.task.ts"],"sourcesContent":["import { BuildTask, BuiltTaskResult, BuildContext, ComponentResult } from '@teambit/builder';\nimport { Formatter } from './formatter';\n\nexport class FormatTask implements BuildTask {\n  constructor(readonly aspectId: string, readonly name = 'format') {}\n\n  async execute(context: BuildContext): Promise<BuiltTaskResult> {\n    const formatter: Formatter = context.env.getFormatter();\n    // TODO: add option to select between check and format here\n    const results = await formatter.check(context);\n    const componentsResults = results.results.map((formatResult): ComponentResult => {\n      return {\n        component: formatResult.component,\n        metadata: {\n          results: formatResult.results,\n        },\n        errors: [],\n      };\n    });\n\n    return {\n      componentsResults,\n    };\n  }\n}\n"],"mappings":";;;;;;;AAGO,MAAMA,UAAU,CAAsB;EAC3CC,WAAW,CAAUC,QAAgB,EAAWC,IAAI,GAAG,QAAQ,EAAE;IAAA,KAA5CD,QAAgB,GAAhBA,QAAgB;IAAA,KAAWC,IAAI,GAAJA,IAAI;EAAc;EAElE,MAAMC,OAAO,CAACC,OAAqB,EAA4B;IAC7D,MAAMC,SAAoB,GAAGD,OAAO,CAACE,GAAG,CAACC,YAAY,EAAE;IACvD;IACA,MAAMC,OAAO,GAAG,MAAMH,SAAS,CAACI,KAAK,CAACL,OAAO,CAAC;IAC9C,MAAMM,iBAAiB,GAAGF,OAAO,CAACA,OAAO,CAACG,GAAG,CAAEC,YAAY,IAAsB;MAC/E,OAAO;QACLC,SAAS,EAAED,YAAY,CAACC,SAAS;QACjCC,QAAQ,EAAE;UACRN,OAAO,EAAEI,YAAY,CAACJ;QACxB,CAAC;QACDO,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IAEF,OAAO;MACLL;IACF,CAAC;EACH;AACF;AAAC"}