{"version":3,"names":[],"sources":["formatter.ts"],"sourcesContent":["import { Component } from '@teambit/component';\nimport { FormatterContext } from './formatter-context';\n\nexport type ComponentFormatResult = {\n  /**\n   * the formatted component.\n   */\n  component: Component;\n\n  /**\n   * format results for each file of the component.\n   */\n  results: FileFormatResult[];\n};\n\nexport type FileFormatResult = {\n  /**\n   * path of the formatted file.\n   */\n  filePath: string;\n\n  /**\n   * Does the file has formatting issues (needs format)\n   */\n  hasIssues: boolean;\n\n  /**\n   * The new file content after the formatting\n   */\n  newContent?: string;\n};\n\nexport type FormatResults = {\n  results: ComponentFormatResult[];\n  errors: Error[];\n};\n\nexport interface Formatter {\n  format(context: FormatterContext): Promise<FormatResults>;\n  check(context: FormatterContext): Promise<FormatResults>;\n}\n"],"mappings":""}