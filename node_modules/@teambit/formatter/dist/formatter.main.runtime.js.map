{"version":3,"names":["FormatterMain","constructor","envs","formatterService","format","components","opts","envsRuntime","createEnvironment","formatResults","run","toFormatServiceOptions","check","createTask","name","FormatTask","FormatterAspect","id","provider","cli","component","loggerAspect","workspace","config","logger","createLogger","FormatterService","formatterAspect","registerService","register","FormatCmd","getHost","MainRuntime","EnvsAspect","CLIAspect","ComponentAspect","LoggerAspect","WorkspaceAspect","addRuntime"],"sources":["formatter.main.runtime.ts"],"sourcesContent":["import { CLIAspect, CLIMain, MainRuntime } from '@teambit/cli';\nimport { Component, ComponentAspect, ComponentMain } from '@teambit/component';\nimport { EnvsAspect, EnvsMain } from '@teambit/envs';\nimport { LoggerAspect, LoggerMain } from '@teambit/logger';\nimport { Workspace, WorkspaceAspect } from '@teambit/workspace';\nimport { FormatterAspect } from './formatter.aspect';\nimport { FormatterService, FormatterServiceOptions } from './formatter.service';\nimport { FormatTask } from './format.task';\nimport { FormatCmd } from './format.cmd';\nimport { FormatterOptions } from './formatter-context';\n\nexport type FormatterConfig = {};\nexport class FormatterMain {\n  static runtime = MainRuntime;\n\n  constructor(private envs: EnvsMain, private formatterService: FormatterService) {}\n\n  /**\n   * format an array of components.\n   */\n  async format(components: Component[], opts: FormatterOptions) {\n    const envsRuntime = await this.envs.createEnvironment(components);\n    const formatResults = envsRuntime.run(this.formatterService, this.toFormatServiceOptions(opts, false));\n    return formatResults;\n  }\n\n  /**\n   * check format an array of components.\n   */\n  async check(components: Component[], opts: FormatterOptions) {\n    const envsRuntime = await this.envs.createEnvironment(components);\n    const formatResults = envsRuntime.run(this.formatterService, this.toFormatServiceOptions(opts, true));\n    return formatResults;\n  }\n\n  private toFormatServiceOptions(opts: FormatterOptions, check = false): FormatterServiceOptions {\n    return {\n      ...opts,\n      check,\n    };\n  }\n\n  /**\n   * create a format task for build pipelines.\n   * @param name name of the task.\n   */\n  createTask(name?: string): FormatTask {\n    return new FormatTask(FormatterAspect.id, name);\n  }\n\n  static dependencies = [EnvsAspect, CLIAspect, ComponentAspect, LoggerAspect, WorkspaceAspect];\n\n  static defaultConfig: FormatterConfig = {};\n\n  static async provider(\n    [envs, cli, component, loggerAspect, workspace]: [EnvsMain, CLIMain, ComponentMain, LoggerMain, Workspace],\n    config: FormatterConfig\n  ) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const logger = loggerAspect.createLogger(FormatterAspect.id);\n    const formatterService = new FormatterService(config);\n    const formatterAspect = new FormatterMain(envs, formatterService);\n    envs.registerService(formatterService);\n    cli.register(new FormatCmd(formatterAspect, component.getHost(), workspace));\n\n    return formatterAspect;\n  }\n}\n\nFormatterAspect.addRuntime(FormatterMain);\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAyC;AAAA;AAIlC,MAAMA,aAAa,CAAC;EAGzBC,WAAW,CAASC,IAAc,EAAUC,gBAAkC,EAAE;IAAA,KAA5DD,IAAc,GAAdA,IAAc;IAAA,KAAUC,gBAAkC,GAAlCA,gBAAkC;EAAG;;EAEjF;AACF;AACA;EACE,MAAMC,MAAM,CAACC,UAAuB,EAAEC,IAAsB,EAAE;IAC5D,MAAMC,WAAW,GAAG,MAAM,IAAI,CAACL,IAAI,CAACM,iBAAiB,CAACH,UAAU,CAAC;IACjE,MAAMI,aAAa,GAAGF,WAAW,CAACG,GAAG,CAAC,IAAI,CAACP,gBAAgB,EAAE,IAAI,CAACQ,sBAAsB,CAACL,IAAI,EAAE,KAAK,CAAC,CAAC;IACtG,OAAOG,aAAa;EACtB;;EAEA;AACF;AACA;EACE,MAAMG,KAAK,CAACP,UAAuB,EAAEC,IAAsB,EAAE;IAC3D,MAAMC,WAAW,GAAG,MAAM,IAAI,CAACL,IAAI,CAACM,iBAAiB,CAACH,UAAU,CAAC;IACjE,MAAMI,aAAa,GAAGF,WAAW,CAACG,GAAG,CAAC,IAAI,CAACP,gBAAgB,EAAE,IAAI,CAACQ,sBAAsB,CAACL,IAAI,EAAE,IAAI,CAAC,CAAC;IACrG,OAAOG,aAAa;EACtB;EAEQE,sBAAsB,CAACL,IAAsB,EAAEM,KAAK,GAAG,KAAK,EAA2B;IAC7F,uCACKN,IAAI;MACPM;IAAK;EAET;;EAEA;AACF;AACA;AACA;EACEC,UAAU,CAACC,IAAa,EAAc;IACpC,OAAO,KAAIC,oBAAU,EAACC,4BAAe,CAACC,EAAE,EAAEH,IAAI,CAAC;EACjD;EAMA,aAAaI,QAAQ,CACnB,CAAChB,IAAI,EAAEiB,GAAG,EAAEC,SAAS,EAAEC,YAAY,EAAEC,SAAS,CAA4D,EAC1GC,MAAuB,EACvB;IACA;IACA,MAAMC,MAAM,GAAGH,YAAY,CAACI,YAAY,CAACT,4BAAe,CAACC,EAAE,CAAC;IAC5D,MAAMd,gBAAgB,GAAG,KAAIuB,8BAAgB,EAACH,MAAM,CAAC;IACrD,MAAMI,eAAe,GAAG,IAAI3B,aAAa,CAACE,IAAI,EAAEC,gBAAgB,CAAC;IACjED,IAAI,CAAC0B,eAAe,CAACzB,gBAAgB,CAAC;IACtCgB,GAAG,CAACU,QAAQ,CAAC,KAAIC,oBAAS,EAACH,eAAe,EAAEP,SAAS,CAACW,OAAO,EAAE,EAAET,SAAS,CAAC,CAAC;IAE5E,OAAOK,eAAe;EACxB;AACF;AAAC;AAAA,gCAvDY3B,aAAa,aACPgC,kBAAW;AAAA,gCADjBhC,aAAa,kBAsCF,CAACiC,kBAAU,EAAEC,gBAAS,EAAEC,4BAAe,EAAEC,sBAAY,EAAEC,4BAAe,CAAC;AAAA,gCAtClFrC,aAAa,mBAwCgB,CAAC,CAAC;AAiB5CgB,4BAAe,CAACsB,UAAU,CAACtC,aAAa,CAAC"}