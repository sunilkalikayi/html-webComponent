/// <reference types="react" />
import { EnvService, ExecutionContext, EnvDefinition } from '@teambit/envs';
import { FormatResults } from './formatter';
import { FormatterOptions } from './formatter-context';
import { FormatterConfig } from './formatter.main.runtime';
export declare type FormatterServiceOptions = FormatterOptions & {
    check?: boolean;
};
export declare class FormatterService implements EnvService<FormatResults> {
    private formatterConfig;
    name: string;
    constructor(formatterConfig: FormatterConfig);
    run(context: ExecutionContext, options: FormatterServiceOptions): Promise<FormatResults>;
    private optionsWithDefaults;
    private mergeContext;
    render(env: EnvDefinition): JSX.Element;
    getDescriptor(env: EnvDefinition): {
        id: any;
        icon: any;
        config: any;
        version: any;
        displayName: any;
    } | undefined;
}
