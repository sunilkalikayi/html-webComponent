{"version":3,"names":["describe","schema","workspace","workspaceData","beforeAll","mockWorkspace","workspacePath","console","log","loadAspect","SchemaAspect","afterAll","destroyWorkspace","apiSchema","compDir","path","join","src","getMockDir","fs","copy","WorkspaceAspect","track","rootDir","defaultScope","bitMap","write","compId","resolveComponentId","comp","get","getSchema","it","results","toObject","expectedJsonPath","expectedJson","readJsonSync","expect","toMatchObject","jsonPath","json","getSchemaFromObject","APISchema","toBeTruthy","componentId","ComponentID","module","exports","UnknownSchema","location","file","line","character","getCurrentDir","currentDir","__dirname","endsWith","sep","slice"],"sources":["schema.spec.ts"],"sourcesContent":["import path from 'path';\nimport fs from 'fs-extra';\nimport { APISchema, UnknownSchema } from '@teambit/semantics.entities.semantic-schema';\nimport { loadAspect } from '@teambit/harmony.testing.load-aspect';\nimport { mockWorkspace, destroyWorkspace, WorkspaceData } from '@teambit/workspace.testing.mock-workspace';\nimport { ComponentID } from '@teambit/component-id';\nimport WorkspaceAspect, { Workspace } from '@teambit/workspace';\nimport { SchemaMain } from './schema.main.runtime';\nimport { SchemaAspect } from '.';\n\ndescribe('SchemaAspect', function () {\n  let schema: SchemaMain;\n  let workspace: Workspace;\n  let workspaceData: WorkspaceData;\n  beforeAll(async () => {\n    workspaceData = mockWorkspace();\n    const { workspacePath } = workspaceData;\n    // eslint-disable-next-line no-console\n    console.log('workspace created at ', workspacePath);\n    schema = await loadAspect(SchemaAspect, workspacePath);\n  });\n  afterAll(async () => {\n    await destroyWorkspace(workspaceData);\n  });\n  describe('getSchema()', () => {\n    let apiSchema: APISchema;\n    beforeAll(async () => {\n      const { workspacePath } = workspaceData;\n      const compDir = path.join(workspacePath, 'button');\n      const src = path.join(getMockDir(), 'button');\n      await fs.copy(src, compDir);\n      workspace = await loadAspect(WorkspaceAspect, workspacePath);\n      await workspace.track({ rootDir: compDir, defaultScope: 'org.scope' });\n      await workspace.bitMap.write();\n      schema = await loadAspect(SchemaAspect, workspacePath);\n      const compId = await workspace.resolveComponentId('button');\n      const comp = await workspace.get(compId);\n      apiSchema = await schema.getSchema(comp);\n    });\n    it('should be able to generate JSON object with all schemas', async () => {\n      const results = apiSchema.toObject();\n      const expectedJsonPath = path.join(getMockDir(), 'button-schemas.json');\n      // uncomment the next line temporarily to sync the expected json with new schema changes\n      // fs.outputFileSync(expectedJsonPath, JSON.stringify(results, undefined, 2));\n      const expectedJson = fs.readJsonSync(expectedJsonPath);\n      // @ts-ignore it exists on Jest. for some reason ts assumes this is Jasmine.\n      expect(results).toMatchObject(expectedJson);\n    });\n  });\n  describe('getSchemaFromObject', () => {\n    it('should be able to deserialize an JSON object to SchemaNode instances', () => {\n      const jsonPath = path.join(getMockDir(), 'button-schemas.json');\n      const json = fs.readJsonSync(jsonPath);\n      const apiSchema = schema.getSchemaFromObject(json);\n      expect(apiSchema instanceof APISchema).toBeTruthy();\n      expect(apiSchema.componentId instanceof ComponentID).toBeTruthy();\n      // @ts-ignore it exists on Jest. for some reason ts assumes this is Jasmine.\n      expect(apiSchema.toObject()).toMatchObject(json);\n    });\n    it('should not throw when it does not recognize the schema', () => {\n      const jsonPath = path.join(getMockDir(), 'button-old-schema.json');\n      const json = fs.readJsonSync(jsonPath);\n      const apiSchema = schema.getSchemaFromObject(json);\n      expect(apiSchema instanceof APISchema).toBeTruthy();\n      expect(apiSchema.module.exports[0] instanceof UnknownSchema).toBeTruthy();\n      // @ts-ignore\n      expect(apiSchema.module.exports[0].location).toMatchObject({ file: 'index.ts', line: 21, character: 14 });\n    });\n  });\n});\n\nfunction getCurrentDir() {\n  const currentDir = __dirname;\n  if (currentDir.endsWith(`${path.sep}dist`)) return currentDir.slice(0, -5);\n  return currentDir;\n}\n\nfunction getMockDir() {\n  return path.join(getCurrentDir(), 'mock');\n}\n"],"mappings":"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"}