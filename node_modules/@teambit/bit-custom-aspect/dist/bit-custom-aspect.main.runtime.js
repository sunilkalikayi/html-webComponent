"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BitCustomAspectMain = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _aspect() {
  const data = _interopRequireDefault(require("@teambit/aspect"));
  _aspect = function () {
    return data;
  };
  return data;
}
function _cli() {
  const data = require("@teambit/cli");
  _cli = function () {
    return data;
  };
  return data;
}
function _envs() {
  const data = _interopRequireDefault(require("@teambit/envs"));
  _envs = function () {
    return data;
  };
  return data;
}
function _mocha() {
  const data = _interopRequireDefault(require("@teambit/mocha"));
  _mocha = function () {
    return data;
  };
  return data;
}
function _bitCustomAspect() {
  const data = require("./bit-custom-aspect.aspect");
  _bitCustomAspect = function () {
    return data;
  };
  return data;
}
class BitCustomAspectMain {
  static async provider([envs, aspect, mocha]) {
    const tester = mocha.createTester({}, aspect.babelConfig);
    const testerOverride = envs.override({
      getTester: () => tester
    });
    const depsOverride = aspect.overrideDependencies({
      devDependencies: {
        chai: '4.3.0'
      }
    });
    const bitCustomAspect = aspect.compose([testerOverride, depsOverride]);
    envs.registerEnv(bitCustomAspect);
    return new BitCustomAspectMain();
  }
}
exports.BitCustomAspectMain = BitCustomAspectMain;
(0, _defineProperty2().default)(BitCustomAspectMain, "slots", []);
(0, _defineProperty2().default)(BitCustomAspectMain, "dependencies", [_envs().default, _aspect().default, _mocha().default]);
(0, _defineProperty2().default)(BitCustomAspectMain, "runtime", _cli().MainRuntime);
_bitCustomAspect().BitCustomAspectAspect.addRuntime(BitCustomAspectMain);

//# sourceMappingURL=bit-custom-aspect.main.runtime.js.map