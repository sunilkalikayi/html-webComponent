"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ComponentListLinks = ComponentListLinks;
function _chalk() {
  const data = _interopRequireDefault(require("chalk"));
  _chalk = function () {
    return data;
  };
  return data;
}
function _getPackageNameFromTarget() {
  const data = require("./get-package-name-from-target");
  _getPackageNameFromTarget = function () {
    return data;
  };
  return data;
}
function _linkRow() {
  const data = require("./link-row");
  _linkRow = function () {
    return data;
  };
  return data;
}
function ComponentListLinks({
  componentListLinks,
  verbose = false
}) {
  if (!componentListLinks || !componentListLinks.length) {
    return _chalk().default.cyan('No components link were generated');
  }
  const title = _chalk().default.bold.cyan('Components links');
  const links = componentListLinks.map(componentLinks => ComponentLinks({
    componentLinks,
    verbose
  })).join('\n');
  return `${title}\n${links}`;
}
function ComponentLinks({
  componentLinks,
  verbose = false
}) {
  if (!componentLinks.bound || componentLinks.bound.length < 1) return '';
  if (verbose) return VerboseComponentLinks({
    componentLinks
  });
  return RegularComponentLinks({
    componentLinks
  });
}
function RegularComponentLinks({
  componentLinks
}) {
  const id = componentLinks.id.toString();
  if (!componentLinks.bound || componentLinks.bound.length < 1) return '';
  const packagePath = (0, _getPackageNameFromTarget().getPackageNameFromTarget)(componentLinks.bound[0].to);
  return (0, _linkRow().LinkRow)({
    title: id,
    target: packagePath,
    padding: 50
  });
}
function VerboseComponentLinks({
  componentLinks
}) {
  const id = componentLinks.id.toString();
  if (!componentLinks.bound || componentLinks.bound.length < 1) return '';
  const title = _chalk().default.bold.cyan(id);
  const links = componentLinks.bound.map(link => (0, _linkRow().VerboseLinkRow)({
    from: link.from,
    to: link.to
  })).join('\n');
  return `${title}\n${links}\n`;
}

//# sourceMappingURL=component-list-links.js.map