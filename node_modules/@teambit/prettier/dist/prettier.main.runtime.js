"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PrettierMain = void 0;
exports.runTransformersWithContext = runTransformersWithContext;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _cli() {
  const data = require("@teambit/cli");
  _cli = function () {
    return data;
  };
  return data;
}
function _logger() {
  const data = require("@teambit/logger");
  _logger = function () {
    return data;
  };
  return data;
}
function _defenderPrettier() {
  const data = require("@teambit/defender.prettier.config-mutator");
  _defenderPrettier = function () {
    return data;
  };
  return data;
}
function _prettier() {
  const data = require("./prettier.aspect");
  _prettier = function () {
    return data;
  };
  return data;
}
function _prettier2() {
  const data = require("./prettier.formatter");
  _prettier2 = function () {
    return data;
  };
  return data;
}
class PrettierMain {
  constructor(logger) {
    this.logger = logger;
  }
  /**
   * create a prettier formatter instance.
   * @param options prettier options.
   * @param PrettierModule reference to an `prettier` module.
   */
  createFormatter(context, options, transformers = [], PrettierModule) {
    const configMutator = new (_defenderPrettier().PrettierConfigMutator)(options.config);
    const transformerContext = {
      check: !!context.check
    };
    const afterMutation = runTransformersWithContext(configMutator.clone(), transformers, transformerContext);
    return new (_prettier2().PrettierFormatter)(this.logger, afterMutation.raw, PrettierModule);
  }
  static async provider([loggerExt]) {
    const logger = loggerExt.createLogger(_prettier().PrettierAspect.id);
    return new PrettierMain(logger);
  }
}
exports.PrettierMain = PrettierMain;
(0, _defineProperty2().default)(PrettierMain, "runtime", _cli().MainRuntime);
(0, _defineProperty2().default)(PrettierMain, "dependencies", [_logger().LoggerAspect]);
_prettier().PrettierAspect.addRuntime(PrettierMain);
function runTransformersWithContext(config, transformers = [], context) {
  if (!Array.isArray(transformers)) return config;
  const newConfig = transformers.reduce((acc, transformer) => {
    return transformer(acc, context);
  }, config);
  return newConfig;
}

//# sourceMappingURL=prettier.main.runtime.js.map