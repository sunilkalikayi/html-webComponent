{"version":3,"names":["INTERNAL_FIELDS","VariantsMain","constructor","patterns","configAspect","_loadedLegacy","ConsumerOverrides","load","validateConfig","forEach","patternConfig","pattern","defaultScope","isValidScopeName","InvalidScopeName","undefined","raw","legacy","byRootDirAndName","rootDir","componentName","matches","match","isMatchPattern","excluded","push","config","specificity","maxSpecificity","sortedMatches","sortMatchesBySpecificity","propagate","extensionsToMerge","getExtensionFromPatternRawConfig","mergedExtensions","ExtensionDataList","mergeConfigs","result","extensions","length","setExtension","variant","extensionId","extensionConfig","opts","newVariant","assign","VariantsAspect","id","overrideExisting","ignoreVersion","provider","MainRuntime","ConfigAspect","rawExtensions","omit","fromConfigObject","addRuntime"],"sources":["variants.main.runtime.ts"],"sourcesContent":["import { MainRuntime } from '@teambit/cli';\nimport { ConfigAspect } from '@teambit/config';\nimport type { ConfigMain } from '@teambit/config';\nimport ConsumerOverrides from '@teambit/legacy/dist/consumer/config/consumer-overrides';\nimport { ExtensionDataList } from '@teambit/legacy/dist/consumer/config/extension-data';\nimport { PathLinuxRelative } from '@teambit/legacy/dist/utils/path';\nimport { assign } from 'comment-json';\nimport { omit, forEach } from 'lodash';\nimport {\n  MatchedPatternWithConfig,\n  isMatchPattern,\n  sortMatchesBySpecificity,\n} from '@teambit/workspace.modules.match-pattern';\nimport { InvalidScopeName, isValidScopeName } from '@teambit/legacy-bit-id';\nimport { VariantsAspect } from './variants.aspect';\n\nexport type Patterns = { [pattern: string]: Record<string, any> };\n\nexport type VariantsComponentConfig = {\n  propagate: boolean;\n  exclude?: string[];\n  defaultScope?: string;\n  extensions: ExtensionDataList;\n  maxSpecificity: number;\n  sortedMatches: MatchedPatternWithConfig[];\n};\n\nconst INTERNAL_FIELDS = ['propagate', 'exclude', 'defaultScope'];\n\nexport class VariantsMain {\n  static runtime = MainRuntime;\n  static dependencies = [ConfigAspect];\n\n  _loadedLegacy: ConsumerOverrides;\n\n  constructor(private patterns: Patterns, private configAspect: ConfigMain) {\n    this._loadedLegacy = ConsumerOverrides.load(this.patterns);\n    this.validateConfig();\n  }\n\n  private validateConfig() {\n    forEach(this.patterns, (patternConfig: Record<string, any>, pattern: string) => {\n      if (patternConfig.defaultScope && !isValidScopeName(patternConfig.defaultScope)) {\n        throw new InvalidScopeName(patternConfig.defaultScope, undefined, pattern);\n      }\n    });\n  }\n\n  raw(): Patterns {\n    return this.patterns;\n  }\n\n  /**\n   * Get all the patterns defined in the variants section of the workspace as the legacy ConsumerOverrides format\n   */\n  legacy(): ConsumerOverrides {\n    // return ConsumerOverrides.load(this.patterns);\n    return this._loadedLegacy;\n  }\n\n  /**\n   * Gets the config for specific component after merge all matching patterns of the component dir and id in the variants section\n   * @param rootDir\n   */\n  byRootDirAndName(rootDir: PathLinuxRelative, componentName: string): VariantsComponentConfig | undefined {\n    const matches: MatchedPatternWithConfig[] = [];\n    forEach(this.patterns, (patternConfig, pattern) => {\n      const match = isMatchPattern(rootDir, componentName, pattern);\n\n      // Ignore matches with exclude matches\n      if (match.match && !match.excluded) {\n        matches.push({\n          config: patternConfig,\n          specificity: match.maxSpecificity,\n          pattern: match.pattern,\n        });\n      }\n    });\n\n    const sortedMatches: MatchedPatternWithConfig[] = sortMatchesBySpecificity(matches);\n\n    let defaultScope;\n    let propagate = true;\n    const extensionsToMerge: ExtensionDataList[] = [];\n    sortedMatches.forEach((match) => {\n      defaultScope = defaultScope || match.config.defaultScope;\n      if (propagate) {\n        extensionsToMerge.push(getExtensionFromPatternRawConfig(match.config));\n      }\n      if (match.config.propagate === false) {\n        propagate = false;\n      }\n    });\n\n    const mergedExtensions = ExtensionDataList.mergeConfigs(extensionsToMerge);\n    const result = {\n      defaultScope,\n      extensions: mergedExtensions,\n      propagate,\n      maxSpecificity: sortedMatches.length ? sortedMatches[0].specificity : -1,\n      sortedMatches,\n    };\n    return result;\n  }\n\n  /**\n   * Updates the specified extension object of the specified variant.\n   * @param {string} variant - The variant pattern.\n   * @param {string} extensionId - The extension ID.\n   * @param {Object} extensionConfig - The extension configuration.\n   * @param {boolean} opts.overrideExisting - When true, any existing entries are overriden.\n   */\n  setExtension(variant: string, extensionId: string, extensionConfig: any, opts?: { overrideExisting?: boolean }) {\n    const newVariant = this.patterns[variant] ?? {};\n    assign(newVariant, { [extensionId]: extensionConfig });\n    assign(this.patterns, { [variant]: newVariant });\n    this.configAspect.setExtension(VariantsAspect.id, this.patterns, {\n      overrideExisting: opts?.overrideExisting === true,\n      ignoreVersion: true,\n    });\n  }\n\n  static async provider([configAspect]: [ConfigMain], config) {\n    return new VariantsMain(config, configAspect);\n  }\n}\n\nfunction getExtensionFromPatternRawConfig(config: Record<string, any>) {\n  const rawExtensions = omit(config, INTERNAL_FIELDS);\n  const extensions = ExtensionDataList.fromConfigObject(rawExtensions);\n  return extensions;\n}\n\nVariantsAspect.addRuntime(VariantsMain);\n"],"mappings":"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"}