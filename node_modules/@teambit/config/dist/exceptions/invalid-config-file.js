"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _bitError() {
  const data = require("@teambit/bit-error");
  _bitError = function () {
    return data;
  };
  return data;
}
function _chalk() {
  const data = _interopRequireDefault(require("chalk"));
  _chalk = function () {
    return data;
  };
  return data;
}
class InvalidConfigFile extends _bitError().BitError {
  constructor(path) {
    super(`error: invalid workspace.jsonc: ${_chalk().default.bold(path)} is not a valid JSON file.
consider running ${_chalk().default.bold('bit init --reset')} to recreate the file`);
    this.path = path;
    (0, _defineProperty2().default)(this, "showDoctorMessage", void 0);
    this.showDoctorMessage = true;
  }
}
exports.default = InvalidConfigFile;

//# sourceMappingURL=invalid-config-file.js.map