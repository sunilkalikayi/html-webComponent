{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["import { ExtensionDataEntry, ExtensionDataList } from '@teambit/legacy/dist/consumer/config';\nimport { PathOsBased, PathOsBasedAbsolute } from '@teambit/legacy/dist/utils/path';\n\nimport { SetExtensionOptions } from './config.main.runtime';\n\nexport type WriteOptions = {\n  dir?: PathOsBasedAbsolute;\n};\n\n/**\n * An interface implemented by component host (workspace / scope) config file\n * This used to be able to abstract the workspace/scope config.\n */\nexport interface HostConfig {\n  /**\n   * Path to the actual file\n   */\n  path: PathOsBased;\n\n  extensions: ExtensionDataList;\n\n  extension: (extensionId: string, ignoreVersion: boolean) => ExtensionDataEntry;\n\n  setExtension(extensionId: string, config: Record<string, any>, options: SetExtensionOptions): void;\n\n  write(opts: WriteOptions): Promise<void>;\n}\n\nexport type ConfigType = 'workspace' | 'scope';\n"],"mappings":""}