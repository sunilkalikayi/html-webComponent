{"version":3,"names":["DocsUI","constructor","titleBadgeSlot","registerTitleBadge","titleBadges","badges","Array","isArray","register","listTitleBadges","flatten","values","provider","component","componentCompare","config","docs","section","OverviewSection","compareSection","OverviewCompareSection","registerRoute","route","registerNavigation","navigationLink","order","props","registerRoutes","ComponentAspect","ComponentCompareAspect","UIRuntime","Slot","withType","DocsAspect","addRuntime"],"sources":["docs.ui.runtime.tsx"],"sourcesContent":["import { flatten } from 'lodash';\nimport { ComponentAspect, ComponentUI } from '@teambit/component';\nimport { Slot } from '@teambit/harmony';\nimport { UIRuntime } from '@teambit/ui';\nimport ComponentCompareAspect, { ComponentCompareUI } from '@teambit/component-compare';\n\nimport { DocsAspect } from './docs.aspect';\nimport { OverviewSection } from './overview.section';\nimport type { TitleBadgeSlot, TitleBadge } from './overview';\nimport { OverviewCompareSection } from './docs.compare.section';\n\nexport class DocsUI {\n  constructor(readonly titleBadgeSlot: TitleBadgeSlot) {}\n\n  /**\n   * register a new title badge into the overview section of a component.\n   */\n  registerTitleBadge(titleBadges: TitleBadge | TitleBadge[]) {\n    const badges = Array.isArray(titleBadges) ? titleBadges : [titleBadges];\n    this.titleBadgeSlot.register(badges);\n    return this;\n  }\n\n  /**\n   * list all title badges registered.\n   */\n  listTitleBadges() {\n    return flatten(this.titleBadgeSlot.values());\n  }\n\n  static dependencies = [ComponentAspect, ComponentCompareAspect];\n\n  static runtime = UIRuntime;\n\n  static slots = [Slot.withType<TitleBadge>()];\n\n  static async provider(\n    [component, componentCompare]: [ComponentUI, ComponentCompareUI],\n    config,\n    [titleBadgeSlot]: [TitleBadgeSlot]\n  ) {\n    const docs = new DocsUI(titleBadgeSlot);\n    const section = new OverviewSection(titleBadgeSlot);\n    const compareSection = new OverviewCompareSection(titleBadgeSlot);\n\n    component.registerRoute(section.route);\n    component.registerNavigation(section.navigationLink, section.order);\n    componentCompare.registerNavigation({\n      props: compareSection.navigationLink,\n      order: compareSection.navigationLink.order,\n    });\n    componentCompare.registerRoutes([compareSection.route]);\n    return docs;\n  }\n}\n\nexport default DocsUI;\n\nDocsAspect.addRuntime(DocsUI);\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEO,MAAMA,MAAM,CAAC;EAClBC,WAAW,CAAUC,cAA8B,EAAE;IAAA,KAAhCA,cAA8B,GAA9BA,cAA8B;EAAG;;EAEtD;AACF;AACA;EACEC,kBAAkB,CAACC,WAAsC,EAAE;IACzD,MAAMC,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACH,WAAW,CAAC,GAAGA,WAAW,GAAG,CAACA,WAAW,CAAC;IACvE,IAAI,CAACF,cAAc,CAACM,QAAQ,CAACH,MAAM,CAAC;IACpC,OAAO,IAAI;EACb;;EAEA;AACF;AACA;EACEI,eAAe,GAAG;IAChB,OAAO,IAAAC,iBAAO,EAAC,IAAI,CAACR,cAAc,CAACS,MAAM,EAAE,CAAC;EAC9C;EAQA,aAAaC,QAAQ,CACnB,CAACC,SAAS,EAAEC,gBAAgB,CAAoC,EAChEC,MAAM,EACN,CAACb,cAAc,CAAmB,EAClC;IACA,MAAMc,IAAI,GAAG,IAAIhB,MAAM,CAACE,cAAc,CAAC;IACvC,MAAMe,OAAO,GAAG,KAAIC,2BAAe,EAAChB,cAAc,CAAC;IACnD,MAAMiB,cAAc,GAAG,KAAIC,qCAAsB,EAAClB,cAAc,CAAC;IAEjEW,SAAS,CAACQ,aAAa,CAACJ,OAAO,CAACK,KAAK,CAAC;IACtCT,SAAS,CAACU,kBAAkB,CAACN,OAAO,CAACO,cAAc,EAAEP,OAAO,CAACQ,KAAK,CAAC;IACnEX,gBAAgB,CAACS,kBAAkB,CAAC;MAClCG,KAAK,EAAEP,cAAc,CAACK,cAAc;MACpCC,KAAK,EAAEN,cAAc,CAACK,cAAc,CAACC;IACvC,CAAC,CAAC;IACFX,gBAAgB,CAACa,cAAc,CAAC,CAACR,cAAc,CAACG,KAAK,CAAC,CAAC;IACvD,OAAON,IAAI;EACb;AACF;AAAC;AAAA,gCA3CYhB,MAAM,kBAmBK,CAAC4B,4BAAe,EAAEC,2BAAsB,CAAC;AAAA,gCAnBpD7B,MAAM,aAqBA8B,eAAS;AAAA,gCArBf9B,MAAM,WAuBF,CAAC+B,eAAI,CAACC,QAAQ,EAAc,CAAC;AAAA,eAsB/BhC,MAAM;AAAA;AAErBiC,kBAAU,CAACC,UAAU,CAAClC,MAAM,CAAC"}