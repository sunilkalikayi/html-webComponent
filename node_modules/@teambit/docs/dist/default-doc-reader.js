"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.symbol.description.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultDocReader = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _path() {
  const data = require("path");
  _path = function () {
    return data;
  };
  return data;
}
function _docsEntities() {
  const data = require("@teambit/docs.entities.doc");
  _docsEntities = function () {
    return data;
  };
  return data;
}
class DefaultDocReader {
  constructor(pkg, compiler, workspace) {
    this.pkg = pkg;
    this.compiler = compiler;
    this.workspace = workspace;
    (0, _defineProperty2().default)(this, "supportedExtensions", ['.ts', '.js', '.jsx', '.tsx']);
  }
  async read(path, contents, component) {
    var _docsModule$default, _docsModule$default2, _docsModule$default3;
    const packageName = this.pkg.getPackageName(component);
    const distPath = this.compiler.getDistPathBySrcPath(component, path);
    // eslint-disable-next-line
    const docsModule = require((0, _path().resolve)(`${this.workspace.path}/node_modules/${packageName}/${distPath}`));
    return _docsEntities().Doc.from(path, {
      labels: docsModule.labels || ((_docsModule$default = docsModule.default) === null || _docsModule$default === void 0 ? void 0 : _docsModule$default.labels),
      description: docsModule.abstract || ((_docsModule$default2 = docsModule.default) === null || _docsModule$default2 === void 0 ? void 0 : _docsModule$default2.abstract) || docsModule.description,
      displayName: docsModule.displayName || ((_docsModule$default3 = docsModule.default) === null || _docsModule$default3 === void 0 ? void 0 : _docsModule$default3.componentDisplayName)
    });
  }
  isFormatSupported(format) {
    return this.supportedExtensions.includes(format);
  }
}
exports.DefaultDocReader = DefaultDocReader;

//# sourceMappingURL=default-doc-reader.js.map