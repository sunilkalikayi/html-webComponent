"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.symbol.description.js");
require("core-js/modules/es.array.iterator.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BadgePosition = void 0;
exports.Overview = Overview;
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _classnames() {
  const data = _interopRequireDefault(require("classnames"));
  _classnames = function () {
    return data;
  };
  return data;
}
function _lodash() {
  const data = require("lodash");
  _lodash = function () {
    return data;
  };
  return data;
}
function _component() {
  const data = require("@teambit/component");
  _component = function () {
    return data;
  };
  return data;
}
function _previewUi() {
  const data = require("@teambit/preview.ui.component-preview");
  _previewUi = function () {
    return data;
  };
  return data;
}
function _designUiSurfaces() {
  const data = require("@teambit/design.ui.surfaces.status-message-card");
  _designUiSurfaces = function () {
    return data;
  };
  return data;
}
function _componentUi() {
  const data = require("@teambit/component.ui.component-meta");
  _componentUi = function () {
    return data;
  };
  return data;
}
function _overviewModule() {
  const data = _interopRequireDefault(require("./overview.module.scss"));
  _overviewModule = function () {
    return data;
  };
  return data;
}
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
let BadgePosition;
exports.BadgePosition = BadgePosition;
(function (BadgePosition) {
  BadgePosition[BadgePosition["Title"] = 0] = "Title";
  BadgePosition[BadgePosition["SubTitle"] = 1] = "SubTitle";
  BadgePosition[BadgePosition["Labels"] = 2] = "Labels";
  BadgePosition[BadgePosition["Package"] = 3] = "Package";
  BadgePosition[BadgePosition["ElementsPackage"] = 4] = "ElementsPackage";
})(BadgePosition || (exports.BadgePosition = BadgePosition = {}));
function Overview({
  titleBadges
}) {
  var _component$preview, _component$preview2;
  const component = (0, _react().useContext)(_component().ComponentContext);
  const componentDescriptor = (0, _component().useComponentDescriptor)();
  const showHeader = !((_component$preview = component.preview) !== null && _component$preview !== void 0 && _component$preview.legacyHeader);
  if ((component === null || component === void 0 ? void 0 : component.buildStatus) === 'pending' && (component === null || component === void 0 ? void 0 : component.host) === 'teambit.scope/scope') return /*#__PURE__*/_react().default.createElement(_designUiSurfaces().StatusMessageCard, {
    style: {
      margin: 'auto'
    },
    status: "PROCESSING",
    title: "component preview pending"
  }, "this might take some time");
  if ((component === null || component === void 0 ? void 0 : component.buildStatus) === 'failed' && (component === null || component === void 0 ? void 0 : component.host) === 'teambit.scope/scope') return /*#__PURE__*/_react().default.createElement(_designUiSurfaces().StatusMessageCard, {
    style: {
      margin: 'auto'
    },
    status: "FAILURE",
    title: "failed to get component preview "
  });
  const isScaling = (_component$preview2 = component.preview) === null || _component$preview2 === void 0 ? void 0 : _component$preview2.isScaling;
  return /*#__PURE__*/_react().default.createElement("div", {
    className: _overviewModule().default.overviewWrapper
  }, showHeader && /*#__PURE__*/_react().default.createElement(_componentUi().ComponentOverview, {
    className: (0, _classnames().default)(_overviewModule().default.componentOverviewBlock, !isScaling && _overviewModule().default.legacyPreview),
    displayName: component.displayName,
    version: component.version,
    abstract: component.description,
    labels: component.labels,
    packageName: component.packageName,
    titleBadges: (0, _lodash().flatten)(titleBadges.values()),
    componentDescriptor: componentDescriptor,
    component: component
  }), /*#__PURE__*/_react().default.createElement(_previewUi().ComponentPreview, {
    component: component,
    style: {
      width: '100%',
      height: '100%'
    },
    previewName: "overview",
    pubsub: true,
    viewport: null,
    fullContentHeight: true,
    scrolling: "no"
  }));
}

//# sourceMappingURL=overview.js.map