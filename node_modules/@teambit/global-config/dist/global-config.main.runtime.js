"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GlobalConfigMain = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _cli() {
  const data = require("@teambit/cli");
  _cli = function () {
    return data;
  };
  return data;
}
function _constants() {
  const data = require("@teambit/legacy/dist/constants");
  _constants = function () {
    return data;
  };
  return data;
}
function _globalConfig() {
  const data = require("@teambit/legacy/dist/api/consumer/lib/global-config");
  _globalConfig = function () {
    return data;
  };
  return data;
}
function _globalConfig2() {
  const data = require("./global-config.aspect");
  _globalConfig2 = function () {
    return data;
  };
  return data;
}
function _globals() {
  const data = require("./globals.cmd");
  _globals = function () {
    return data;
  };
  return data;
}
class GlobalConfigMain {
  async get(key) {
    return (0, _globalConfig().get)(key);
  }
  getSync(key) {
    return (0, _globalConfig().getSync)(key);
  }
  list() {
    return (0, _globalConfig().list)();
  }
  listSync() {
    return (0, _globalConfig().listSync)();
  }
  async set(key, val) {
    return (0, _globalConfig().set)(key, val);
  }
  setSync(key, val) {
    return (0, _globalConfig().setSync)(key, val);
  }
  async del(key) {
    return (0, _globalConfig().del)(key);
  }
  delSync(key) {
    return (0, _globalConfig().delSync)(key);
  }
  getGlobalCapsulesBaseDir() {
    return this.getSync(_constants().CFG_CAPSULES_ROOT_BASE_DIR) || _constants().GLOBALS_DEFAULT_CAPSULES;
  }
  getKnownGlobalDirs() {
    return {
      'Global Dir': _constants().CACHE_ROOT,
      'Log file': _constants().DEBUG_LOG,
      'Global Scope Dir': _constants().GLOBAL_SCOPE,
      'Config Dir': _constants().GLOBAL_CONFIG,
      'Capsules Dir': this.getGlobalCapsulesBaseDir()
    };
  }
  static async provider([cli]) {
    const globalConfig = new GlobalConfigMain();
    cli.register(new (_globals().GlobalsCmd)(globalConfig));
    return globalConfig;
  }
}
exports.GlobalConfigMain = GlobalConfigMain;
(0, _defineProperty2().default)(GlobalConfigMain, "runtime", _cli().MainRuntime);
(0, _defineProperty2().default)(GlobalConfigMain, "dependencies", [_cli().CLIAspect]);
(0, _defineProperty2().default)(GlobalConfigMain, "slots", []);
_globalConfig2().GlobalConfigAspect.addRuntime(GlobalConfigMain);

//# sourceMappingURL=global-config.main.runtime.js.map