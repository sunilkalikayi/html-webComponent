"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GlobalsCmd = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _chalk() {
  const data = _interopRequireDefault(require("chalk"));
  _chalk = function () {
    return data;
  };
  return data;
}
function _padRight() {
  const data = _interopRequireDefault(require("pad-right"));
  _padRight = function () {
    return data;
  };
  return data;
}
function _constants() {
  const data = require("@teambit/legacy/dist/constants");
  _constants = function () {
    return data;
  };
  return data;
}
// eslint-disable-next-line max-classes-per-file

class GlobalsCmd {
  constructor(globalConfig) {
    this.globalConfig = globalConfig;
    (0, _defineProperty2().default)(this, "name", 'globals');
    (0, _defineProperty2().default)(this, "description", `list all globals`);
    (0, _defineProperty2().default)(this, "group", 'workspace');
    (0, _defineProperty2().default)(this, "alias", '');
    (0, _defineProperty2().default)(this, "options", [['j', 'json', 'json format']]);
  }
  async report() {
    const list = await this.json();
    const leftCol = Object.keys(list);
    const padMax = Math.max(...leftCol.map(c => c.length)) + 1;
    const values = Object.keys(list).map(key => {
      const keyPadded = (0, _padRight().default)(key, padMax, ' ');
      return `${_chalk().default.green(keyPadded)} ${list[key]}`;
    }).join('\n');
    const title = `the following globals are used by Bit. to change the global root dir, use "${_constants().CACHE_GLOBALS_ENV}" env variable`;
    return `${title}\n\n${values}`;
  }
  async json() {
    return this.globalConfig.getKnownGlobalDirs();
  }
}
exports.GlobalsCmd = GlobalsCmd;

//# sourceMappingURL=globals.cmd.js.map