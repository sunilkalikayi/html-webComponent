{"version":3,"names":["EjectCmd","constructor","workspace","logger","install","name","description","report","pattern","force","json","keepFiles","ConsumerNotFound","componentIds","idsByPattern","componentEjector","ComponentsEjector","ejectResults","eject","JSON","stringify","ejectTemplate"],"sources":["eject-cmd.ts"],"sourcesContent":["import { Command, CommandOptions } from '@teambit/cli';\nimport { Workspace } from '@teambit/workspace';\nimport ejectTemplate from '@teambit/legacy/dist/cli/templates/eject-template';\nimport { ConsumerNotFound } from '@teambit/legacy/dist/consumer/exceptions';\nimport { Logger } from '@teambit/logger';\nimport { InstallMain } from '@teambit/install';\nimport { ComponentsEjector } from './components-ejector';\n\nexport class EjectCmd implements Command {\n  name = 'eject <component-pattern>';\n  description = 'replace components maintained in the workspace with their corresponding packages';\n  arguments = [\n    {\n      name: 'component-pattern',\n      description:\n        'component name, component id, or component pattern.\\nuse component pattern to select multiple components. use comma to separate patterns and \"!\" to exclude. e.g. \"ui/**, !ui/button\"\\nwrap the pattern with quotes',\n    },\n  ];\n  alias = 'E';\n  options = [\n    ['f', 'force', 'ignore local version. remove the components even when they are staged or modified'],\n    ['j', 'json', 'print the results in JSON format'],\n    ['', 'keep-files', 'keep the component files in the workspace intact'],\n  ] as CommandOptions;\n  loader = true;\n  migration = true;\n  group = 'development';\n\n  constructor(private workspace: Workspace, private logger: Logger, private install: InstallMain) {}\n\n  async report(\n    [pattern]: [string],\n    { force = false, json = false, keepFiles = false }: { force: boolean; json: boolean; keepFiles: boolean }\n  ): Promise<string> {\n    if (!this.workspace) throw new ConsumerNotFound();\n    const componentIds = await this.workspace.idsByPattern(pattern);\n    const componentEjector = new ComponentsEjector(this.workspace, this.install, this.logger, componentIds, {\n      force,\n      keepFiles,\n    });\n    const ejectResults = await componentEjector.eject();\n    if (json) return JSON.stringify(ejectResults, null, 2);\n    return ejectTemplate(ejectResults);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEO,MAAMA,QAAQ,CAAoB;EAoBvCC,WAAW,CAASC,SAAoB,EAAUC,MAAc,EAAUC,OAAoB,EAAE;IAAA,KAA5EF,SAAoB,GAApBA,SAAoB;IAAA,KAAUC,MAAc,GAAdA,MAAc;IAAA,KAAUC,OAAoB,GAApBA,OAAoB;IAAA,8CAnBvF,2BAA2B;IAAA,qDACpB,kFAAkF;IAAA,mDACpF,CACV;MACEC,IAAI,EAAE,mBAAmB;MACzBC,WAAW,EACT;IACJ,CAAC,CACF;IAAA,+CACO,GAAG;IAAA,iDACD,CACR,CAAC,GAAG,EAAE,OAAO,EAAE,mFAAmF,CAAC,EACnG,CAAC,GAAG,EAAE,MAAM,EAAE,kCAAkC,CAAC,EACjD,CAAC,EAAE,EAAE,YAAY,EAAE,kDAAkD,CAAC,CACvE;IAAA,gDACQ,IAAI;IAAA,mDACD,IAAI;IAAA,+CACR,aAAa;EAE4E;EAEjG,MAAMC,MAAM,CACV,CAACC,OAAO,CAAW,EACnB;IAAEC,KAAK,GAAG,KAAK;IAAEC,IAAI,GAAG,KAAK;IAAEC,SAAS,GAAG;EAA6D,CAAC,EACxF;IACjB,IAAI,CAAC,IAAI,CAACT,SAAS,EAAE,MAAM,KAAIU,8BAAgB,GAAE;IACjD,MAAMC,YAAY,GAAG,MAAM,IAAI,CAACX,SAAS,CAACY,YAAY,CAACN,OAAO,CAAC;IAC/D,MAAMO,gBAAgB,GAAG,KAAIC,sCAAiB,EAAC,IAAI,CAACd,SAAS,EAAE,IAAI,CAACE,OAAO,EAAE,IAAI,CAACD,MAAM,EAAEU,YAAY,EAAE;MACtGJ,KAAK;MACLE;IACF,CAAC,CAAC;IACF,MAAMM,YAAY,GAAG,MAAMF,gBAAgB,CAACG,KAAK,EAAE;IACnD,IAAIR,IAAI,EAAE,OAAOS,IAAI,CAACC,SAAS,CAACH,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;IACtD,OAAO,IAAAI,wBAAa,EAACJ,YAAY,CAAC;EACpC;AACF;AAAC"}