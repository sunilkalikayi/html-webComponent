{"version":3,"names":["ComponentsEjector","constructor","workspace","install","logger","componentsIds","ejectOptions","consumer","idsToEject","BitIds","failedComponents","modifiedComponents","stagedComponents","notExportedComponents","selfHostedExportedComponents","eject","decideWhichComponentsToEject","debug","length","loadComponentsToEject","_validateIdsHaveScopesAndVersions","removeComponentsFromNodeModules","untrackComponents","installPackages","removeComponentsFiles","writeBitMap","ejectedComponents","setStatusLine","remotes","getScopeRemotes","scope","hubExportedComponents","forEach","componentId","bitId","_legacy","hasScope","push","isHub","force","Promise","all","map","id","componentStatus","getComponentStatusById","modified","staged","err","throwEjectError","toString","consoleSuccess","components","loadComponents","componentsToEject","action","packageJsonUtils","packages","getPackagesToInstall","c","componentIdToPackageName","_buildExceptionMessageWithRollbackData","keepFiles","dataToPersist","DataToPersist","component","componentMap","Error","rootDir","removePath","RemovePath","addBasePath","getPath","persistAllToFS","cleanFromBitMap","message","originalError","originalErrorMessage","defaultErrorHandler","error","hasVersion","TypeError"],"sources":["components-ejector.ts"],"sourcesContent":["/**\n * a classic use case of eject is when a user imports a component using `bit import` to update it,\n * but the user has no intention to have the code as part of the project source code.\n * the eject provides the option to delete the component locally and install it via the NPM client.\n *\n * an implementation note, the entire process is done with rollback in mind.\n * since installing the component via NPM client is an error prone process, we do it first, before\n * removing the component files, so then it's easier to rollback.\n */\nimport { Workspace } from '@teambit/workspace';\nimport { Consumer } from '@teambit/legacy/dist/consumer';\nimport { BitIds } from '@teambit/legacy/dist/bit-id';\nimport defaultErrorHandler from '@teambit/legacy/dist/cli/default-error-handler';\nimport { getScopeRemotes } from '@teambit/legacy/dist/scope/scope-remotes';\nimport componentIdToPackageName from '@teambit/legacy/dist/utils/bit/component-id-to-package-name';\nimport Component from '@teambit/legacy/dist/consumer/component/consumer-component';\nimport PackageJsonFile from '@teambit/legacy/dist/consumer/component/package-json-file';\nimport * as packageJsonUtils from '@teambit/legacy/dist/consumer/component/package-json-utils';\nimport DataToPersist from '@teambit/legacy/dist/consumer/component/sources/data-to-persist';\nimport RemovePath from '@teambit/legacy/dist/consumer/component/sources/remove-path';\nimport { Logger } from '@teambit/logger';\nimport { ComponentID } from '@teambit/component-id';\nimport { InstallMain } from '@teambit/install';\n\nexport type EjectResults = {\n  ejectedComponents: BitIds;\n  failedComponents: FailedComponents;\n};\n\nexport type EjectOptions = {\n  force: boolean; // eject although a component is modified/staged\n  keepFiles: boolean; // keep component files on the workspace\n};\n\ntype FailedComponents = {\n  modifiedComponents: BitIds;\n  stagedComponents: BitIds;\n  notExportedComponents: BitIds;\n  selfHostedExportedComponents: BitIds;\n};\n\nexport class ComponentsEjector {\n  consumer: Consumer;\n  idsToEject: BitIds;\n  componentsToEject: Component[] = [];\n  // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n  notEjectedDependents: Array<{ dependent: Component; ejectedDependencies: Component[] }>;\n  failedComponents: FailedComponents;\n  // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n  packageJsonFilesBeforeChanges: PackageJsonFile[]; // for rollback in case of errors\n  constructor(\n    private workspace: Workspace,\n    private install: InstallMain,\n    private logger: Logger,\n    private componentsIds: ComponentID[],\n    private ejectOptions: EjectOptions\n  ) {\n    this.consumer = this.workspace.consumer;\n    this.idsToEject = new BitIds();\n    this.failedComponents = {\n      modifiedComponents: new BitIds(),\n      stagedComponents: new BitIds(),\n      notExportedComponents: new BitIds(),\n      selfHostedExportedComponents: new BitIds(),\n    };\n  }\n\n  async eject(): Promise<EjectResults> {\n    await this.decideWhichComponentsToEject();\n    this.logger.debug(`${this.idsToEject.length} to eject`);\n    await this.loadComponentsToEject();\n    if (this.idsToEject.length) {\n      this._validateIdsHaveScopesAndVersions();\n      await this.removeComponentsFromNodeModules();\n      await this.untrackComponents();\n      await this.installPackages();\n      await this.removeComponentsFiles();\n      await this.consumer.writeBitMap();\n    }\n    this.logger.debug('eject: completed successfully');\n    return {\n      ejectedComponents: this.idsToEject,\n      failedComponents: this.failedComponents,\n    };\n  }\n\n  async decideWhichComponentsToEject(): Promise<void> {\n    this.logger.setStatusLine('Eject: getting the components status');\n    if (!this.componentsIds.length) return;\n    const remotes = await getScopeRemotes(this.consumer.scope);\n    const hubExportedComponents = new BitIds();\n    this.componentsIds.forEach((componentId) => {\n      const bitId = componentId._legacy;\n      if (!bitId.hasScope()) this.failedComponents.notExportedComponents.push(bitId);\n      else if (remotes.isHub(bitId.scope as string)) hubExportedComponents.push(bitId);\n      else this.failedComponents.selfHostedExportedComponents.push(bitId);\n    });\n    if (this.ejectOptions.force) {\n      this.idsToEject = hubExportedComponents;\n    } else {\n      await Promise.all(\n        hubExportedComponents.map(async (id) => {\n          try {\n            const componentStatus = await this.consumer.getComponentStatusById(id);\n            if (componentStatus.modified) this.failedComponents.modifiedComponents.push(id);\n            else if (componentStatus.staged) this.failedComponents.stagedComponents.push(id);\n            else this.idsToEject.push(id);\n          } catch (err: any) {\n            this.throwEjectError(\n              `eject operation failed getting the status of ${id.toString()}, no action has been done.\n            please fix the issue to continue.`,\n              err\n            );\n          }\n        })\n      );\n    }\n    this.logger.consoleSuccess();\n  }\n\n  async loadComponentsToEject() {\n    const { components } = await this.consumer.loadComponents(this.idsToEject);\n    this.componentsToEject = components;\n  }\n\n  async removeComponentsFromNodeModules() {\n    const action = 'Eject: removing the existing components from node_modules';\n    this.logger.setStatusLine(action);\n    this.logger.debug(action);\n    await packageJsonUtils.removeComponentsFromNodeModules(this.consumer, this.componentsToEject);\n    this.logger.consoleSuccess(action);\n  }\n\n  async installPackages() {\n    this.logger.setStatusLine('Eject: installing packages using the package-manager');\n    const packages = this.getPackagesToInstall();\n    await this.install.install(packages);\n  }\n\n  getPackagesToInstall(): string[] {\n    return this.componentsToEject.map((c) => componentIdToPackageName(c));\n  }\n\n  _buildExceptionMessageWithRollbackData(action: string): string {\n    return `eject failed ${action}.\nyour package.json (if existed) has been restored, however, some bit generated data may have been deleted, please run \"bit link\" to restore them.`;\n  }\n\n  /**\n   * as part of the 'eject' operation, a component is removed locally. as opposed to the remove\n   * command, in this case, no need to remove the objects from the scope, only remove from the\n   * filesystem, which means, delete the component files, untrack from .bitmap and clean\n   * package.json and bit.json traces.\n   */\n  private async removeComponentsFiles() {\n    if (this.ejectOptions.keepFiles) {\n      return;\n    }\n    this.logger.setStatusLine('Eject: removing the components files from the filesystem');\n    const dataToPersist = new DataToPersist();\n    this.componentsToEject.forEach((component) => {\n      const componentMap = component.componentMap;\n      if (!componentMap) {\n        throw new Error('ComponentEjector.removeComponentsFiles expect a component to have componentMap prop');\n      }\n      const rootDir = componentMap.rootDir;\n      if (!rootDir) {\n        throw new Error('ComponentEjector.removeComponentsFiles expect a componentMap to have rootDir');\n      }\n      dataToPersist.removePath(new RemovePath(rootDir, true));\n    });\n    dataToPersist.addBasePath(this.consumer.getPath());\n    await dataToPersist.persistAllToFS();\n    this.logger.consoleSuccess();\n  }\n\n  private async untrackComponents() {\n    this.logger.debug('eject: removing the components from the .bitmap');\n    await this.consumer.cleanFromBitMap(this.idsToEject);\n  }\n\n  throwEjectError(message: string, originalError: Error) {\n    const { message: originalErrorMessage } = defaultErrorHandler(originalError);\n    this.logger.error(`eject has stopped due to an error ${originalErrorMessage}`, originalError);\n    throw new Error(`${message}\n\ngot the following error: ${originalErrorMessage}`);\n  }\n\n  _validateIdsHaveScopesAndVersions() {\n    this.idsToEject.forEach((id) => {\n      if (!id.hasScope() || !id.hasVersion()) {\n        throw new TypeError(`EjectComponents expects ids with scope and version, got ${id.toString()}`);\n      }\n    });\n  }\n}\n"],"mappings":"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"}