{"version":3,"names":["EnvFragment","constructor","envs","renderRow","component","title","content","getEnvId","json"],"sources":["env.fragment.ts"],"sourcesContent":["import { ShowFragment, Component } from '@teambit/component';\nimport { EnvsMain } from './environments.main.runtime';\n\nexport class EnvFragment implements ShowFragment {\n  constructor(private envs: EnvsMain) {}\n\n  readonly title = 'env';\n\n  async renderRow(component: Component) {\n    return {\n      title: this.title,\n      content: this.getEnvId(component),\n    };\n  }\n\n  async json(component: Component) {\n    return {\n      title: this.title,\n      json: this.getEnvId(component),\n    };\n  }\n\n  private getEnvId(component: Component) {\n    // don't use this.envs.getEnv(). otherwise, it'll throw an error when running bit-show on a remote component\n    // where the env can't register to the slot.\n    return this.envs.getEnvId(component);\n  }\n\n  weight = 3;\n}\n"],"mappings":";;;;;;;;;;;;;;;AAGO,MAAMA,WAAW,CAAyB;EAC/CC,WAAW,CAASC,IAAc,EAAE;IAAA,KAAhBA,IAAc,GAAdA,IAAc;IAAA,+CAEjB,KAAK;IAAA,gDAsBb,CAAC;EAxB2B;EAIrC,MAAMC,SAAS,CAACC,SAAoB,EAAE;IACpC,OAAO;MACLC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,OAAO,EAAE,IAAI,CAACC,QAAQ,CAACH,SAAS;IAClC,CAAC;EACH;EAEA,MAAMI,IAAI,CAACJ,SAAoB,EAAE;IAC/B,OAAO;MACLC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBG,IAAI,EAAE,IAAI,CAACD,QAAQ,CAACH,SAAS;IAC/B,CAAC;EACH;EAEQG,QAAQ,CAACH,SAAoB,EAAE;IACrC;IACA;IACA,OAAO,IAAI,CAACF,IAAI,CAACK,QAAQ,CAACH,SAAS,CAAC;EACtC;AAGF;AAAC"}