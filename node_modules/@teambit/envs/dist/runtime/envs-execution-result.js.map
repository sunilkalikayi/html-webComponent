{"version":3,"names":["EnvsExecutionResult","constructor","results","hasErrors","Boolean","errors","length","flatten","map","envResult","getErrorsOfEnv","execError","error","data","push","throwErrorsIfExist","Error","errorsPerEnvs","getEnvErrorsAsString","errorOutput","join","title","env","id","errorsStr","message","stack"],"sources":["envs-execution-result.ts"],"sourcesContent":["import { flatten } from 'lodash';\n\nimport { ServiceExecutionResult } from '../services';\nimport { EnvResult } from './runtime';\n\nexport class EnvsExecutionResult<T extends ServiceExecutionResult> {\n  constructor(readonly results: EnvResult<T>[]) {}\n\n  hasErrors() {\n    return Boolean(this.errors.length);\n  }\n\n  /**\n   * execution errors.\n   */\n  get errors(): Error[] {\n    return flatten(this.results.map((envResult) => this.getErrorsOfEnv(envResult)));\n  }\n\n  getErrorsOfEnv(envResult: EnvResult<T>): Error[] {\n    const execError = envResult.error;\n    const errors = envResult.data ? envResult.data.errors || [] : [];\n    if (execError) errors.push(execError);\n    return errors;\n  }\n\n  /**\n   * if only one error is found, throw it. otherwise, summarize the errors per env and throw the\n   * output\n   */\n  throwErrorsIfExist() {\n    if (!this.errors || !this.errors.length) return;\n    if (this.errors.length === 1 && this.errors[0] instanceof Error) throw this.errors[0];\n    const errorsPerEnvs = this.results.map((envResult) => this.getEnvErrorsAsString(envResult));\n    const errorOutput = errorsPerEnvs.join('\\n\\n');\n    throw new Error(errorOutput);\n  }\n\n  getEnvErrorsAsString(envResult: EnvResult<T>): string {\n    const errors = this.getErrorsOfEnv(envResult);\n    if (!errors.length) return '';\n    const title = `found ${errors.length} error(s) for ${envResult.env.id}`;\n    const errorsStr = errors.map((error) => `${error.message}\\n${error.stack}`).join('\\n');\n    return `${title}\\n${errorsStr}`;\n  }\n}\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAKO,MAAMA,mBAAmB,CAAmC;EACjEC,WAAW,CAAUC,OAAuB,EAAE;IAAA,KAAzBA,OAAuB,GAAvBA,OAAuB;EAAG;EAE/CC,SAAS,GAAG;IACV,OAAOC,OAAO,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC;EACpC;;EAEA;AACF;AACA;EACE,IAAID,MAAM,GAAY;IACpB,OAAO,IAAAE,iBAAO,EAAC,IAAI,CAACL,OAAO,CAACM,GAAG,CAAEC,SAAS,IAAK,IAAI,CAACC,cAAc,CAACD,SAAS,CAAC,CAAC,CAAC;EACjF;EAEAC,cAAc,CAACD,SAAuB,EAAW;IAC/C,MAAME,SAAS,GAAGF,SAAS,CAACG,KAAK;IACjC,MAAMP,MAAM,GAAGI,SAAS,CAACI,IAAI,GAAGJ,SAAS,CAACI,IAAI,CAACR,MAAM,IAAI,EAAE,GAAG,EAAE;IAChE,IAAIM,SAAS,EAAEN,MAAM,CAACS,IAAI,CAACH,SAAS,CAAC;IACrC,OAAON,MAAM;EACf;;EAEA;AACF;AACA;AACA;EACEU,kBAAkB,GAAG;IACnB,IAAI,CAAC,IAAI,CAACV,MAAM,IAAI,CAAC,IAAI,CAACA,MAAM,CAACC,MAAM,EAAE;IACzC,IAAI,IAAI,CAACD,MAAM,CAACC,MAAM,KAAK,CAAC,IAAI,IAAI,CAACD,MAAM,CAAC,CAAC,CAAC,YAAYW,KAAK,EAAE,MAAM,IAAI,CAACX,MAAM,CAAC,CAAC,CAAC;IACrF,MAAMY,aAAa,GAAG,IAAI,CAACf,OAAO,CAACM,GAAG,CAAEC,SAAS,IAAK,IAAI,CAACS,oBAAoB,CAACT,SAAS,CAAC,CAAC;IAC3F,MAAMU,WAAW,GAAGF,aAAa,CAACG,IAAI,CAAC,MAAM,CAAC;IAC9C,MAAM,IAAIJ,KAAK,CAACG,WAAW,CAAC;EAC9B;EAEAD,oBAAoB,CAACT,SAAuB,EAAU;IACpD,MAAMJ,MAAM,GAAG,IAAI,CAACK,cAAc,CAACD,SAAS,CAAC;IAC7C,IAAI,CAACJ,MAAM,CAACC,MAAM,EAAE,OAAO,EAAE;IAC7B,MAAMe,KAAK,GAAI,SAAQhB,MAAM,CAACC,MAAO,iBAAgBG,SAAS,CAACa,GAAG,CAACC,EAAG,EAAC;IACvE,MAAMC,SAAS,GAAGnB,MAAM,CAACG,GAAG,CAAEI,KAAK,IAAM,GAAEA,KAAK,CAACa,OAAQ,KAAIb,KAAK,CAACc,KAAM,EAAC,CAAC,CAACN,IAAI,CAAC,IAAI,CAAC;IACtF,OAAQ,GAAEC,KAAM,KAAIG,SAAU,EAAC;EACjC;AACF;AAAC"}