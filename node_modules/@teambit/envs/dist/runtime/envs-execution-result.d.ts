import { ServiceExecutionResult } from '../services';
import { EnvResult } from './runtime';
export declare class EnvsExecutionResult<T extends ServiceExecutionResult> {
    readonly results: EnvResult<T>[];
    constructor(results: EnvResult<T>[]);
    hasErrors(): boolean;
    /**
     * execution errors.
     */
    get errors(): Error[];
    getErrorsOfEnv(envResult: EnvResult<T>): Error[];
    /**
     * if only one error is found, throw it. otherwise, summarize the errors per env and throw the
     * output
     */
    throwErrorsIfExist(): void;
    getEnvErrorsAsString(envResult: EnvResult<T>): string;
}
