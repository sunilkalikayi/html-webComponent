import { EnvDefinition } from '../env-definition';
import { Environment } from '../environment';
import { EnvRuntime, Runtime } from '../runtime';
export declare type ServiceMap<T> = {
    [env: string]: T;
};
export declare class ExecutionContext {
    /**
     * upper scope of all environment contexts.
     */
    readonly upper: Runtime;
    /**
     * runtime instance of the environment.
     */
    readonly envRuntime: EnvRuntime;
    /**
     * components applied in the execution context.
     */
    components: import("@teambit/component").Component[];
    constructor(
    /**
     * upper scope of all environment contexts.
     */
    upper: Runtime, 
    /**
     * runtime instance of the environment.
     */
    envRuntime: EnvRuntime, 
    /**
     * components applied in the execution context.
     */
    components?: import("@teambit/component").Component[]);
    relatedContexts: string[];
    /**
     * extension ID of the environment
     */
    get id(): string;
    /**
     * environment instance.
     */
    get env(): Environment;
    get envDefinition(): EnvDefinition;
    apply<T>(name: string, args: any[]): T;
}
