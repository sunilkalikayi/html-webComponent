{"version":3,"names":["MergeCmd","constructor","merging","WILDCARD_HELP","report","values","ours","theirs","manual","abort","resolve","build","noSnap","verbose","message","skipDependencyInstallation","isFeatureEnabled","BUILD_ON_CI","Boolean","mergeStrategy","getMergeStrategy","BitError","components","failedComponents","version","resolvedComponents","abortedComponents","mergeSnapResults","mergeSnapError","merge","title","componentsStr","map","c","id","toStringWithoutVersion","join","chalk","underline","green","mergeReport","leftUnresolvedConflicts","getSuccessOutput","length","bold","applyVersionReport","getConflictSummary","suggestion","conflictSummaryReport","yellow","getSnapsOutput","snappedComponents","autoSnappedResults","outputComponents","comps","component","componentOutput","toString","autoTag","filter","result","triggeredBy","searchWithoutScopeAndVersion","autoTagComp","a","AUTO_SNAPPED_MSG","getFailureOutput","body","compact","failedComponent","unchangedLegitimately","color","failureMessage","getSummary","merged","f","failedToMerge","autoSnapped","newLines","mergedStr","unchangedLegitimatelyStr","failedToMergeStr","autoSnappedStr"],"sources":["merge-cmd.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { Command, CommandOptions } from '@teambit/cli';\nimport { compact } from 'lodash';\nimport { WILDCARD_HELP, AUTO_SNAPPED_MSG } from '@teambit/legacy/dist/constants';\nimport {\n  ApplyVersionResults,\n  conflictSummaryReport,\n  getMergeStrategy,\n  applyVersionReport,\n} from '@teambit/legacy/dist/consumer/versions-ops/merge-version';\nimport { isFeatureEnabled, BUILD_ON_CI } from '@teambit/legacy/dist/api/consumer/lib/feature-toggle';\nimport { BitError } from '@teambit/bit-error';\nimport { MergingMain } from './merging.main.runtime';\n\nexport class MergeCmd implements Command {\n  name = 'merge [values...]';\n  description = 'merge changes of different component versions';\n  group = 'development';\n  extendedDescription = `merge changes of different component versions\n  \\`bit merge <version> [ids...]\\` => merge changes of the given version into the checked out version\n  \\`bit merge [ids...]\\` => EXPERIMENTAL. merge changes of the remote head into local, optionally use '--abort' or '--resolve'\n  ${WILDCARD_HELP('merge 0.0.1')}`;\n  alias = '';\n  options = [\n    ['', 'ours', 'in case of a conflict, override the used version with the current modification'],\n    ['', 'theirs', 'in case of a conflict, override the current modification with the specified version'],\n    ['', 'manual', 'in case of a conflict, leave the files with a conflict state to resolve them manually later'],\n    ['', 'abort', 'EXPERIMENTAL. in case of an unresolved merge, revert to the state before the merge began'],\n    ['', 'resolve', 'EXPERIMENTAL. mark an unresolved merge as resolved and create a new snap with the changes'],\n    ['', 'no-snap', 'EXPERIMENTAL. do not auto snap in case the merge completed without conflicts'],\n    ['', 'build', 'in case of snap during the merge, run the build-pipeline (similar to bit snap --build)'],\n    ['', 'verbose', 'show details of components that were not merged legitimately'],\n    ['', 'skip-dependency-installation', 'do not install packages of the imported components'],\n    ['m', 'message <message>', 'EXPERIMENTAL. override the default message for the auto snap'],\n  ] as CommandOptions;\n  loader = true;\n\n  constructor(private merging: MergingMain) {}\n\n  async report(\n    [values = []]: [string[]],\n    {\n      ours = false,\n      theirs = false,\n      manual = false,\n      abort = false,\n      resolve = false,\n      build = false,\n      noSnap = false,\n      verbose = false,\n      message,\n      skipDependencyInstallation = false,\n    }: {\n      ours?: boolean;\n      theirs?: boolean;\n      manual?: boolean;\n      abort?: boolean;\n      resolve?: boolean;\n      build?: boolean;\n      noSnap?: boolean;\n      verbose?: boolean;\n      message: string;\n      skipDependencyInstallation?: boolean;\n    }\n  ) {\n    build = isFeatureEnabled(BUILD_ON_CI) ? Boolean(build) : true;\n    const mergeStrategy = getMergeStrategy(ours, theirs, manual);\n    if (abort && resolve) throw new BitError('unable to use \"abort\" and \"resolve\" flags together');\n    if (noSnap && message) throw new BitError('unable to use \"noSnap\" and \"message\" flags together');\n    const {\n      components,\n      failedComponents,\n      version,\n      resolvedComponents,\n      abortedComponents,\n      mergeSnapResults,\n      mergeSnapError,\n    }: ApplyVersionResults = await this.merging.merge(\n      values,\n      mergeStrategy as any,\n      abort,\n      resolve,\n      noSnap,\n      message,\n      build,\n      skipDependencyInstallation\n    );\n    if (resolvedComponents) {\n      const title = 'successfully resolved component(s)\\n';\n      const componentsStr = resolvedComponents.map((c) => c.id.toStringWithoutVersion()).join('\\n');\n      return chalk.underline(title) + chalk.green(componentsStr);\n    }\n    if (abortedComponents) {\n      const title = 'successfully aborted the merge of the following component(s)\\n';\n      const componentsStr = abortedComponents.map((c) => c.id.toStringWithoutVersion()).join('\\n');\n      return chalk.underline(title) + chalk.green(componentsStr);\n    }\n\n    return mergeReport({\n      components,\n      failedComponents,\n      version,\n      mergeSnapResults,\n      mergeSnapError,\n      verbose,\n    });\n  }\n}\n\nexport function mergeReport({\n  components,\n  failedComponents,\n  version,\n  mergeSnapResults,\n  mergeSnapError,\n  leftUnresolvedConflicts,\n  verbose,\n}: ApplyVersionResults): string {\n  const getSuccessOutput = () => {\n    if (!components || !components.length) return '';\n    // @ts-ignore version is set in case of merge command\n    const title = `successfully merged components${version ? `from version ${chalk.bold(version)}` : ''}\\n`;\n    // @ts-ignore components is set in case of merge command\n    return chalk.underline(title) + chalk.green(applyVersionReport(components));\n  };\n\n  const getConflictSummary = () => {\n    if (!components || !components.length || !leftUnresolvedConflicts) return '';\n    const title = `\\nfiles with conflicts summary\\n`;\n    const suggestion = `\\n\\nthe merge process wasn't completed due to the conflicts above. fix them manually and then run \"bit install\".\nonce ready, snap/tag the components to complete the merge.`;\n    return chalk.underline(title) + conflictSummaryReport(components) + chalk.yellow(suggestion);\n  };\n\n  const getSnapsOutput = () => {\n    if (mergeSnapError) {\n      return `\n${chalk.bold(\n  'snapping the merged components had failed with the following error, please fix the issues and snap manually'\n)}\n${mergeSnapError.message}\n`;\n    }\n    if (!mergeSnapResults || !mergeSnapResults.snappedComponents) return '';\n    const { snappedComponents, autoSnappedResults } = mergeSnapResults;\n    const outputComponents = (comps) => {\n      return comps\n        .map((component) => {\n          let componentOutput = `     > ${component.id.toString()}`;\n          const autoTag = autoSnappedResults.filter((result) =>\n            result.triggeredBy.searchWithoutScopeAndVersion(component.id)\n          );\n          if (autoTag.length) {\n            const autoTagComp = autoTag.map((a) => a.component.id.toString());\n            componentOutput += `\\n       ${AUTO_SNAPPED_MSG}: ${autoTagComp.join(', ')}`;\n          }\n          return componentOutput;\n        })\n        .join('\\n');\n    };\n\n    return `\\n${chalk.underline(\n      'merge-snapped components'\n    )}\\n(${'components that snapped as a result of the merge'})\\n${outputComponents(snappedComponents)}\\n`;\n  };\n\n  const getFailureOutput = () => {\n    if (!failedComponents || !failedComponents.length) return '';\n    const title = '\\nthe merge has been skipped on the following component(s)';\n    const body = compact(\n      failedComponents.map((failedComponent) => {\n        if (!verbose && failedComponent.unchangedLegitimately) return null;\n        const color = failedComponent.unchangedLegitimately ? 'white' : 'red';\n        return `${chalk.bold(failedComponent.id.toString())} - ${chalk[color](failedComponent.failureMessage)}`;\n      })\n    ).join('\\n');\n    if (!body) {\n      return `${chalk.bold(`\\nthe merge has been skipped on ${failedComponents.length} component(s) legitimately`)}\n(use --verbose to list them next time)`;\n    }\n    return `\\n${chalk.underline(title)}\\n${body}\\n\\n`;\n  };\n\n  const getSummary = () => {\n    const merged = components?.length || 0;\n    const unchangedLegitimately = failedComponents?.filter((f) => f.unchangedLegitimately).length || 0;\n    const failedToMerge = failedComponents?.filter((f) => !f.unchangedLegitimately).length || 0;\n    const autoSnapped =\n      (mergeSnapResults?.snappedComponents.length || 0) + (mergeSnapResults?.autoSnappedResults.length || 0);\n\n    const newLines = '\\n\\n';\n    const title = chalk.bold.underline('Merge Summary');\n    const mergedStr = `\\nTotal Merged: ${chalk.bold(merged.toString())}`;\n    const unchangedLegitimatelyStr = `\\nTotal Unchanged: ${chalk.bold(unchangedLegitimately.toString())}`;\n    const failedToMergeStr = `\\nTotal Failed: ${chalk.bold(failedToMerge.toString())}`;\n    const autoSnappedStr = `\\nTotal Snapped: ${chalk.bold(autoSnapped.toString())}`;\n\n    return newLines + title + mergedStr + unchangedLegitimatelyStr + failedToMergeStr + autoSnappedStr;\n  };\n\n  return getSuccessOutput() + getFailureOutput() + getSnapsOutput() + getConflictSummary() + getSummary();\n}\n"],"mappings":"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"}