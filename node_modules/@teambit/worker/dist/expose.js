"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expose = expose;
exports.setFunctionHandlers = setFunctionHandlers;
function _worker_threads() {
  const data = require("worker_threads");
  _worker_threads = function () {
    return data;
  };
  return data;
}
function _comlink() {
  const data = require("comlink");
  _comlink = function () {
    return data;
  };
  return data;
}
function _nodeEndpoint() {
  const data = _interopRequireDefault(require("./node-endpoint"));
  _nodeEndpoint = function () {
    return data;
  };
  return data;
}
// eslint-disable-next-line import/no-unresolved

function setFunctionHandlers() {
  // Override comlink's default proxy handler to use Node endpoints
  _comlink().transferHandlers.set('proxy', {
    canHandle: obj => obj && obj[_comlink().proxyMarker],
    serialize: obj => {
      const {
        port1,
        port2
      } = new (_worker_threads().MessageChannel)();
      (0, _comlink().expose)(obj, (0, _nodeEndpoint().default)(port1));
      return [port2, [port2]];
    },
    deserialize: port => {
      port = (0, _nodeEndpoint().default)(port);
      port.start();
      return (0, _comlink().wrap)(port);
    }
  });
}
setFunctionHandlers();
function expose(object) {
  return (0, _comlink().expose)(object, (0, _nodeEndpoint().default)(_worker_threads().parentPort));
}

//# sourceMappingURL=expose.js.map