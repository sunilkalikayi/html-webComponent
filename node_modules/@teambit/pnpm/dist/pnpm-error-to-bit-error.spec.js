"use strict";

function _error() {
  const data = require("@pnpm/error");
  _error = function () {
    return data;
  };
  return data;
}
function _pnpmErrorToBitError() {
  const data = require("./pnpm-error-to-bit-error");
  _pnpmErrorToBitError = function () {
    return data;
  };
  return data;
}
test('the hint from the fetch error is used', () => {
  const bitError = (0, _pnpmErrorToBitError().pnpmErrorToBitError)(new (_error().PnpmError)('FETCH_404', 'GET https://node.bit.cloud/dsffsdf: Not Found - 404', {
    hint: `dsffsdf is not in the npm registry, or you have no permission to fetch it.

An authorization header was used: Bearer df96[hidden]`
  }));
  expect(bitError.report()).toEqual(`GET https://node.bit.cloud/dsffsdf: Not Found - 404

dsffsdf is not in the npm registry, or you have no permission to fetch it.

An authorization header was used: Bearer df96[hidden]`);
});
test('a regular error object is reported', () => {
  const bitError = (0, _pnpmErrorToBitError().pnpmErrorToBitError)(new Error('some error'));
  expect(bitError.report()).toEqual('some error');
});

//# sourceMappingURL=pnpm-error-to-bit-error.spec.js.map