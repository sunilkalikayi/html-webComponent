{"version":3,"names":["defaultStoreDir","join","userHome","defaultCacheDir","PnpmPackageManager","constructor","depResolver","logger","memoize","readConfig","_getGlobalPnpmDirs","opts","config","packageManagerConfigRootDir","storeDir","cacheRootDir","cacheDir","install","rootDir","manifests","installOptions","require","debug","setStatusLine","off","registries","getRegistries","proxyConfig","getProxyConfig","networkConfig","getNetworkConfig","useNesting","extendWithComponentsFromDir","engineStrict","nodeLinker","nodeVersion","overrides","hoistPattern","publicHoistPattern","packageImportMethod","rootComponents","rootComponentsForCapsules","peerDependencyRules","sideEffectsCacheRead","sideEffectsCache","sideEffectsCacheWrite","on","console","consoleSuccess","getPeerDependencyIssues","lynx","resolveRemoteVersion","packageName","options","maxSockets","rawConfig","networkConcurrency","fetchRetries","fetchTimeout","fetchRetryMaxtimeout","fetchRetryMintimeout","strictSSL","ca","cert","key","pnpmRegistry","defaultRegistry","Registry","default","uri","alwaysAuth","authHeaderValue","originalAuthType","originalAuthValue","pnpmScoped","omit","scopesRegistries","Object","keys","reduce","acc","scopedRegName","scopedReg","name","replace","bit","BIT_DEV_REGISTRY","Registries","getInjectedDirs","componentDir","modulesState","readModulesManifest","injectedDeps"],"sources":["pnpm.package-manager.ts"],"sourcesContent":["import {\n  DependencyResolverMain,\n  extendWithComponentsFromDir,\n  InstallationContext,\n  PackageManager,\n  PackageManagerInstallOptions,\n  PackageManagerResolveRemoteVersionOptions,\n  ResolvedPackageVersion,\n  Registries,\n  Registry,\n  BIT_DEV_REGISTRY,\n  PackageManagerProxyConfig,\n  PackageManagerNetworkConfig,\n} from '@teambit/dependency-resolver';\nimport { Logger } from '@teambit/logger';\nimport { memoize, omit } from 'lodash';\nimport { PeerDependencyIssuesByProjects } from '@pnpm/core';\nimport { readModulesManifest } from '@pnpm/modules-yaml';\nimport { ProjectManifest } from '@pnpm/types';\nimport { join } from 'path';\nimport userHome from 'user-home';\nimport { readConfig } from './read-config';\n\nconst defaultStoreDir = join(userHome, '.pnpm-store');\nconst defaultCacheDir = join(userHome, '.pnpm-cache');\n\nexport class PnpmPackageManager implements PackageManager {\n  private readConfig = memoize(readConfig);\n  constructor(private depResolver: DependencyResolverMain, private logger: Logger) {}\n\n  async _getGlobalPnpmDirs(\n    opts: {\n      cacheRootDir?: string;\n      packageManagerConfigRootDir?: string;\n    } = {}\n  ) {\n    const { config } = await this.readConfig(opts.packageManagerConfigRootDir);\n    const storeDir = opts.cacheRootDir ? join(opts.cacheRootDir, '.pnpm-store') : config.storeDir ?? defaultStoreDir;\n    const cacheDir = opts.cacheRootDir ? join(opts.cacheRootDir, '.pnpm-cache') : config.cacheDir ?? defaultCacheDir;\n    return { storeDir, cacheDir };\n  }\n\n  async install(\n    { rootDir, manifests }: InstallationContext,\n    installOptions: PackageManagerInstallOptions = {}\n  ): Promise<void> {\n    // require it dynamically for performance purpose. the pnpm package require many files - do not move to static import\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    const { install } = require('./lynx');\n\n    this.logger.debug(`running installation in root dir ${rootDir}`);\n    this.logger.debug('components manifests for installation', manifests);\n    this.logger.setStatusLine('installing dependencies using pnpm');\n    // turn off the logger because it interrupts the pnpm output\n    this.logger.off();\n    const registries = await this.depResolver.getRegistries();\n    const proxyConfig = await this.depResolver.getProxyConfig();\n    const networkConfig = await this.depResolver.getNetworkConfig();\n    const { storeDir, cacheDir } = await this._getGlobalPnpmDirs(installOptions);\n    const { config } = await this.readConfig(installOptions.packageManagerConfigRootDir);\n    if (!installOptions.useNesting) {\n      manifests = await extendWithComponentsFromDir(rootDir, manifests);\n    }\n    await install(\n      rootDir,\n      manifests,\n      storeDir,\n      cacheDir,\n      registries,\n      proxyConfig,\n      networkConfig,\n      {\n        engineStrict: installOptions.engineStrict ?? config.engineStrict,\n        nodeLinker: installOptions.nodeLinker,\n        nodeVersion: installOptions.nodeVersion ?? config.nodeVersion,\n        overrides: installOptions.overrides,\n        hoistPattern: config.hoistPattern,\n        publicHoistPattern: ['*eslint*', '@prettier/plugin-*', '*prettier-plugin-*'],\n        packageImportMethod: installOptions.packageImportMethod ?? config.packageImportMethod,\n        rootComponents: installOptions.rootComponents,\n        rootComponentsForCapsules: installOptions.rootComponentsForCapsules,\n        peerDependencyRules: installOptions.peerDependencyRules,\n        sideEffectsCacheRead: installOptions.sideEffectsCache ?? true,\n        sideEffectsCacheWrite: installOptions.sideEffectsCache ?? true,\n      },\n      this.logger\n    );\n    this.logger.on();\n    // Make a divider row to improve output\n    this.logger.console('-------------------------');\n    this.logger.consoleSuccess('installing dependencies using pnpm');\n  }\n\n  async getPeerDependencyIssues(\n    rootDir: string,\n    manifests: Record<string, ProjectManifest>,\n    installOptions: PackageManagerInstallOptions = {}\n  ): Promise<PeerDependencyIssuesByProjects> {\n    const { storeDir, cacheDir } = await this._getGlobalPnpmDirs(installOptions);\n    const proxyConfig = await this.depResolver.getProxyConfig();\n    const networkConfig = await this.depResolver.getNetworkConfig();\n    const registries = await this.depResolver.getRegistries();\n    // require it dynamically for performance purpose. the pnpm package require many files - do not move to static import\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    const lynx = require('./lynx');\n    const { config } = await this.readConfig();\n    return lynx.getPeerDependencyIssues(manifests, {\n      storeDir,\n      cacheDir,\n      proxyConfig,\n      registries,\n      rootDir,\n      networkConfig,\n      overrides: installOptions.overrides,\n      packageImportMethod: installOptions.packageImportMethod ?? config.packageImportMethod,\n    });\n  }\n\n  async resolveRemoteVersion(\n    packageName: string,\n    options: PackageManagerResolveRemoteVersionOptions\n  ): Promise<ResolvedPackageVersion> {\n    // require it dynamically for performance purpose. the pnpm package require many files - do not move to static import\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    const { resolveRemoteVersion } = require('./lynx');\n    const { cacheDir } = await this._getGlobalPnpmDirs(options);\n    const registries = await this.depResolver.getRegistries();\n    const proxyConfig = await this.depResolver.getProxyConfig();\n    const networkConfig = await this.depResolver.getNetworkConfig();\n    return resolveRemoteVersion(packageName, options.rootDir, cacheDir, registries, proxyConfig, networkConfig);\n  }\n\n  async getProxyConfig?(): Promise<PackageManagerProxyConfig> {\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    const { getProxyConfig } = require('./get-proxy-config');\n    const { config } = await this.readConfig();\n    return getProxyConfig(config);\n  }\n\n  async getNetworkConfig?(): Promise<PackageManagerNetworkConfig> {\n    const { config } = await this.readConfig();\n    // We need to use config.rawConfig as it will only contain the settings defined by the user.\n    // config contains default values of the settings when they are not defined by the user.\n    return {\n      maxSockets: config.rawConfig['max-sockets'],\n      networkConcurrency: config.rawConfig['network-concurrency'],\n      fetchRetries: config.rawConfig['fetch-retries'],\n      fetchTimeout: config.rawConfig['fetch-timeout'],\n      fetchRetryMaxtimeout: config.rawConfig['fetch-retry-maxtimeout'],\n      fetchRetryMintimeout: config.rawConfig['fetch-retry-mintimeout'],\n      strictSSL: config.rawConfig['strict-ssl'],\n      // These settings don't have default value, so it is safe to read them from config\n      // ca is automatically populated from the content of the file specified by cafile.\n      ca: config.ca,\n      cert: config.cert,\n      key: config.key,\n    };\n  }\n\n  async getRegistries(): Promise<Registries> {\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    const { getRegistries } = require('./get-registries');\n    const { config } = await this.readConfig();\n    const pnpmRegistry = await getRegistries(config);\n    const defaultRegistry = new Registry(\n      pnpmRegistry.default.uri,\n      pnpmRegistry.default.alwaysAuth,\n      pnpmRegistry.default.authHeaderValue,\n      pnpmRegistry.default.originalAuthType,\n      pnpmRegistry.default.originalAuthValue\n    );\n\n    const pnpmScoped = omit(pnpmRegistry, ['default']);\n    const scopesRegistries: Record<string, Registry> = Object.keys(pnpmScoped).reduce((acc, scopedRegName) => {\n      const scopedReg = pnpmScoped[scopedRegName];\n      const name = scopedRegName.replace('@', '');\n      acc[name] = new Registry(\n        scopedReg.uri,\n        scopedReg.alwaysAuth,\n        scopedReg.authHeaderValue,\n        scopedReg.originalAuthType,\n        scopedReg.originalAuthValue\n      );\n      return acc;\n    }, {});\n\n    // Add bit registry server if not exist\n    if (!scopesRegistries.bit) {\n      scopesRegistries.bit = new Registry(BIT_DEV_REGISTRY, true);\n    }\n\n    return new Registries(defaultRegistry, scopesRegistries);\n  }\n\n  async getInjectedDirs(rootDir: string, componentDir: string): Promise<string[]> {\n    const modulesState = await readModulesManifest(join(rootDir, 'node_modules'));\n    return modulesState?.injectedDeps?.[componentDir] ?? [];\n  }\n}\n"],"mappings":"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"}