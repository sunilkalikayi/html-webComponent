"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.promise.js");
require("core-js/modules/es.regexp.exec.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PnpmUI = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _react() {
  const data = _interopRequireDefault(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _ui() {
  const data = require("@teambit/ui");
  _ui = function () {
    return data;
  };
  return data;
}
function _uiFoundationUiUseBox() {
  const data = require("@teambit/ui-foundation.ui.use-box.menu");
  _uiFoundationUiUseBox = function () {
    return data;
  };
  return data;
}
function _component() {
  const data = _interopRequireDefault(require("@teambit/component"));
  _component = function () {
    return data;
  };
  return data;
}
function _pnpm() {
  const data = require("./pnpm.aspect");
  _pnpm = function () {
    return data;
  };
  return data;
}
class PnpmUI {
  constructor() {
    (0, _defineProperty2().default)(this, "consumeMethod", (comp, options) => {
      if (options !== null && options !== void 0 && options.currentLane) return undefined;
      const registry = comp.packageName.split('/')[0];
      const packageVersion = comp.version === comp.latest ? '' : `@${comp.version}`;
      return {
        Title: /*#__PURE__*/_react().default.createElement("img", {
          style: {
            height: '16px',
            marginTop: '-2px'
          },
          src: "https://static.bit.dev/brands/pnpm.svg"
        }),
        Component: /*#__PURE__*/_react().default.createElement(_uiFoundationUiUseBox().Install, {
          config: `npm config set '${registry}:registry' https://node.bit.cloud`,
          componentName: comp.id.name,
          packageManager: "pnpm",
          copyString: `pnpm i ${comp.packageName}${packageVersion}`,
          registryName: registry
        }),
        order: 30
      };
    });
  }
  static async provider([componentUI]) {
    const pnpm = new PnpmUI();
    componentUI.registerConsumeMethod(pnpm.consumeMethod);
    return pnpm;
  }
}
exports.PnpmUI = PnpmUI;
(0, _defineProperty2().default)(PnpmUI, "runtime", _ui().UIRuntime);
(0, _defineProperty2().default)(PnpmUI, "dependencies", [_component().default]);
var _default = PnpmUI;
exports.default = _default;
_pnpm().PnpmAspect.addRuntime(PnpmUI);

//# sourceMappingURL=pnpm.ui.runtime.js.map