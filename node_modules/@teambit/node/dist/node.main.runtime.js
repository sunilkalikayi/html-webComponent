"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NodeMain = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _mergeDeepLeft() {
  const data = _interopRequireDefault(require("ramda/src/mergeDeepLeft"));
  _mergeDeepLeft = function () {
    return data;
  };
  return data;
}
function _typescript() {
  const data = require("@teambit/typescript");
  _typescript = function () {
    return data;
  };
  return data;
}
function _application() {
  const data = require("@teambit/application");
  _application = function () {
    return data;
  };
  return data;
}
function _logger() {
  const data = require("@teambit/logger");
  _logger = function () {
    return data;
  };
  return data;
}
function _cli() {
  const data = require("@teambit/cli");
  _cli = function () {
    return data;
  };
  return data;
}
function _generator() {
  const data = require("@teambit/generator");
  _generator = function () {
    return data;
  };
  return data;
}
function _envs() {
  const data = require("@teambit/envs");
  _envs = function () {
    return data;
  };
  return data;
}
function _react() {
  const data = require("@teambit/react");
  _react = function () {
    return data;
  };
  return data;
}
function _node() {
  const data = require("./node.aspect");
  _node = function () {
    return data;
  };
  return data;
}
function _node2() {
  const data = require("./node.env");
  _node2 = function () {
    return data;
  };
  return data;
}
function _nodeEnv() {
  const data = require("./templates/node-env");
  _nodeEnv = function () {
    return data;
  };
  return data;
}
function _node3() {
  const data = require("./templates/node");
  _node3 = function () {
    return data;
  };
  return data;
}
function _node4() {
  const data = require("./node.app-type");
  _node4 = function () {
    return data;
  };
  return data;
}
function _expressApp() {
  const data = require("./templates/express-app");
  _expressApp = function () {
    return data;
  };
  return data;
}
function _expressRoute() {
  const data = require("./templates/express-route");
  _expressRoute = function () {
    return data;
  };
  return data;
}
class NodeMain {
  constructor(react, tsAspect, nodeEnv, envs) {
    this.react = react;
    this.tsAspect = tsAspect;
    this.nodeEnv = nodeEnv;
    this.envs = envs;
    (0, _defineProperty2().default)(this, "overrideTsConfig", this.react.overrideTsConfig.bind(this.react));
    (0, _defineProperty2().default)(this, "overrideJestConfig", this.react.overrideJestConfig.bind(this.react));
    (0, _defineProperty2().default)(this, "overrideBuildPipe", this.react.overrideBuildPipe.bind(this.react));
    (0, _defineProperty2().default)(this, "overrideCompiler", this.react.overrideCompiler.bind(this.react));
    (0, _defineProperty2().default)(this, "overrideCompilerTasks", this.react.overrideCompilerTasks.bind(this.react));
    (0, _defineProperty2().default)(this, "overrideBuildTsConfig", this.react.overrideBuildTsConfig.bind(this.react));
    (0, _defineProperty2().default)(this, "overridePackageJsonProps", this.react.overridePackageJsonProps.bind(this.react));
    (0, _defineProperty2().default)(this, "overridePreviewConfig", this.react.overridePreviewConfig.bind(this.react));
    (0, _defineProperty2().default)(this, "overrideDevServerConfig", this.react.overrideDevServerConfig.bind(this.react));
    (0, _defineProperty2().default)(this, "useWebpack", this.react.useWebpack.bind(this.react));
    (0, _defineProperty2().default)(this, "usePrettier", this.react.usePrettier.bind(this.react));
    (0, _defineProperty2().default)(this, "useEslint", this.react.useEslint.bind(this.react));
    (0, _defineProperty2().default)(this, "overrideMounter", this.react.overrideMounter.bind(this.react));
  }
  icon() {
    return 'https://static.bit.dev/extensions-icons/nodejs.svg';
  }

  /**
   * @deprecated use useTypescript()
   * override the TS config of the environment.
   */

  /**
   * override the env's typescript config for both dev and build time.
   * Replaces both overrideTsConfig (devConfig) and overrideBuildTsConfig (buildConfig)
   */
  useTypescript(modifiers, tsModule) {
    const overrides = {};
    const devTransformers = modifiers === null || modifiers === void 0 ? void 0 : modifiers.devConfig;
    if (devTransformers) {
      overrides.getCompiler = () => this.nodeEnv.getCompiler(devTransformers, tsModule);
    }
    const buildTransformers = modifiers === null || modifiers === void 0 ? void 0 : modifiers.buildConfig;
    if (buildTransformers) {
      const buildPipeModifiers = {
        tsModifier: {
          transformers: buildTransformers,
          module: tsModule
        }
      };
      overrides.getBuildPipe = () => this.nodeEnv.getBuildPipe(buildPipeModifiers);
    }
    return this.envs.override(overrides);
  }

  /**
   * override the env's dev server and preview webpack configurations.
   * Replaces both overrideDevServerConfig and overridePreviewConfig
   */

  /**
   * override the dependency configuration of the component environment.
   */
  overrideDependencies(dependencyPolicy) {
    return this.envs.override({
      getDependencies: () => (0, _mergeDeepLeft().default)(dependencyPolicy, this.nodeEnv.getDependencies())
    });
  }
  /**
   * create a new composition of the node environment.
   */
  compose(transformers, targetEnv = {}) {
    return this.envs.compose(this.envs.merge(targetEnv, this.nodeEnv), transformers);
  }
  static async provider([loggerAspect, envs, application, react, generator, tsAspect]) {
    const logger = loggerAspect.createLogger(_node().NodeAspect.id);
    const nodeEnv = envs.merge(new (_node2().NodeEnv)(tsAspect, react), react.reactEnv);
    envs.registerEnv(nodeEnv);
    const nodeAppType = new (_node4().NodeAppType)('node-app', nodeEnv, logger);
    application.registerAppType(nodeAppType);
    generator.registerComponentTemplate([_nodeEnv().nodeEnvTemplate, _node3().nodeTemplate, _expressApp().expressAppTemplate, _expressRoute().expressRouteTemplate]);
    return new NodeMain(react, tsAspect, nodeEnv, envs);
  }
}
exports.NodeMain = NodeMain;
(0, _defineProperty2().default)(NodeMain, "runtime", _cli().MainRuntime);
(0, _defineProperty2().default)(NodeMain, "dependencies", [_logger().LoggerAspect, _envs().EnvsAspect, _application().ApplicationAspect, _react().ReactAspect, _generator().GeneratorAspect, _typescript().TypescriptAspect]);
_node().NodeAspect.addRuntime(NodeMain);

//# sourceMappingURL=node.main.runtime.js.map