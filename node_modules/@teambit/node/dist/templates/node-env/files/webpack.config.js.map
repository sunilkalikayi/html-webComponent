{"version":3,"names":["webpackConfigFile"],"sources":["webpack.config.ts"],"sourcesContent":["export function webpackConfigFile() {\n  return `\n  import { WebpackConfigTransformer, WebpackConfigMutator, WebpackConfigTransformContext } from '@teambit/webpack';\n\n  /**\n   * Transformation to apply for both preview and dev server\n   * @param config\n   * @param _context\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function commonTransformation(config: WebpackConfigMutator, _context: WebpackConfigTransformContext) {\n    // Merge config with the webpack.config.js file if you choose to import a module export format config.\n    // config.merge([webpackConfig]);\n    // config.addAliases({});\n    // config.addModuleRule(youRuleHere);\n    return config;\n  }\n\n  /**\n   * Transformation for the preview only\n   * @param config\n   * @param context\n   * @returns\n   */\n  export const previewConfigTransformer: WebpackConfigTransformer = (\n    config: WebpackConfigMutator,\n    context: WebpackConfigTransformContext\n  ) => {\n    const newConfig = commonTransformation(config, context);\n    return newConfig;\n  };\n\n  /**\n   * Transformation for the dev server only\n   * @param config\n   * @param context\n   * @returns\n   */\n  export const devServerConfigTransformer: WebpackConfigTransformer = (\n    config: WebpackConfigMutator,\n    context: WebpackConfigTransformContext\n  ) => {\n    const newConfig = commonTransformation(config, context);\n    return newConfig;\n  };\n\n`;\n}\n"],"mappings":";;;;;;AAAO,SAASA,iBAAiB,GAAG;EAClC,OAAQ;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD"}