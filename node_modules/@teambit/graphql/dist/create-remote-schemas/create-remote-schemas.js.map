{"version":3,"names":["getRemoteSchema","uri","subscriptionsUri","wrappingLink","ApolloLink","operation","forward","map","response","context","getContext","headers","get","graphqlContext","res","setHeader","http","HttpLink","fetch","httpLink","setContext","request","previousContext","concat","makeRemoteExecutableSchema","schema","introspectSchema","link","client","SubscriptionClient","reconnect","ws","wsLink","WebSocketLink","split","definition","getMainDefinition","query","kind","createRemoteSchemas","servers","schemasP","server","Promise","all"],"sources":["create-remote-schemas.ts"],"sourcesContent":["import fetch from 'node-fetch';\nimport { setContext } from 'apollo-link-context';\nimport { HttpLink } from 'apollo-link-http';\nimport { makeRemoteExecutableSchema, introspectSchema } from 'apollo-server';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { split, ApolloLink } from 'apollo-link';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport ws from 'ws';\nimport { GraphQLServer } from '../graphql-server';\n\nasync function getRemoteSchema({ uri, subscriptionsUri }) {\n  const wrappingLink = new ApolloLink((operation, forward) => {\n    return forward(operation).map((response) => {\n      const context = operation.getContext();\n      if (context?.response?.headers?.get('set-cookie')) {\n        context?.graphqlContext?.res?.setHeader('set-cookie', context?.response?.headers?.get('set-cookie'));\n      }\n      return response;\n    });\n  });\n  // @ts-ignore\n  const http = new HttpLink({ uri, fetch });\n  const httpLink = setContext((request, previousContext) => {\n    return {\n      headers: previousContext?.graphqlContext?.headers,\n    };\n  })\n    .concat(wrappingLink)\n    .concat(http);\n\n  if (!subscriptionsUri) {\n    return makeRemoteExecutableSchema({\n      schema: await introspectSchema(httpLink),\n      link: httpLink,\n    });\n  }\n\n  // Create WebSocket link with custom client\n  const client = new SubscriptionClient(subscriptionsUri, { reconnect: true }, ws);\n  const wsLink = new WebSocketLink(client);\n\n  // Using the ability to split links, we can send data to each link\n  // depending on what kind of operation is being sent\n  const link = split(\n    (operation) => {\n      const definition = getMainDefinition(operation.query);\n      return definition.kind === 'OperationDefinition' && definition.operation === 'subscription';\n    },\n    wsLink,\n    httpLink\n  );\n\n  return makeRemoteExecutableSchema({\n    schema: await introspectSchema(httpLink),\n    link,\n  });\n}\n\nexport async function createRemoteSchemas(servers: GraphQLServer[]) {\n  const schemasP = servers.map(async (server) => {\n    return getRemoteSchema({\n      uri: server.uri,\n      subscriptionsUri: server.subscriptionsUri,\n    });\n  });\n\n  return Promise.all(schemasP);\n}\n"],"mappings":"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"}