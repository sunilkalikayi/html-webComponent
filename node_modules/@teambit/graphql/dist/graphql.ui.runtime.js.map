{"version":3,"names":["GraphqlUI","client","children","GraphqlRenderPlugins","createClient","uri","state","subscriptionUri","ApolloClient","link","createLink","cache","createCache","createSsrClient","serverUrl","headers","ApolloLink","from","onError","logError","createHttpLink","credentials","fetch","crossFetch","ssrMode","InMemoryCache","restore","httpLink","HttpLink","subsLink","WebSocketLink","options","reconnect","undefined","hybridLink","createSplitLink","errorLogger","provider","graphqlUI","UIRuntime","GraphqlAspect","addRuntime"],"sources":["graphql.ui.runtime.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport { UIRuntime } from '@teambit/ui';\n\nimport { InMemoryCache, ApolloClient, ApolloLink, HttpLink, createHttpLink } from '@apollo/client';\nimport type { NormalizedCacheObject } from '@apollo/client';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { onError } from '@apollo/client/link/error';\n\nimport crossFetch from 'cross-fetch';\n\nimport { createSplitLink } from './create-link';\nimport { GraphQLProvider } from './graphql-provider';\nimport { GraphqlAspect } from './graphql.aspect';\nimport { GraphqlRenderPlugins } from './render-lifecycle';\nimport { logError } from './logging';\n\n/**\n * Type of gql client.\n * Used to abstract Apollo client, so consumers could import the type from graphql.ui, and not have to depend on @apollo/client directly\n * */\nexport type GraphQLClient<T> = ApolloClient<T>;\n\ntype ClientOptions = {\n  /** Preset in-memory cache with state (e.g. continue state from SSR) */\n  state?: NormalizedCacheObject;\n  /** endpoint for websocket connections */\n  subscriptionUri?: string;\n};\n\nexport class GraphqlUI {\n  createClient(uri: string, { state, subscriptionUri }: ClientOptions = {}) {\n    const client = new ApolloClient({\n      link: this.createLink(uri, { subscriptionUri }),\n      cache: this.createCache({ state }),\n    });\n\n    return client;\n  }\n\n  createSsrClient({ serverUrl, headers }: { serverUrl: string; headers: any }) {\n    const link = ApolloLink.from([\n      onError(logError),\n      createHttpLink({\n        credentials: 'include',\n        uri: serverUrl,\n        headers,\n        fetch: crossFetch,\n      }),\n    ]);\n\n    const client = new ApolloClient({\n      ssrMode: true,\n      link,\n      cache: this.createCache(),\n    });\n\n    return client;\n  }\n\n  private createCache({ state }: { state?: NormalizedCacheObject } = {}) {\n    const cache = new InMemoryCache();\n\n    if (state) cache.restore(state);\n\n    return cache;\n  }\n\n  private createLink(uri: string, { subscriptionUri }: { subscriptionUri?: string } = {}) {\n    const httpLink = new HttpLink({ credentials: 'include', uri });\n    const subsLink = subscriptionUri\n      ? new WebSocketLink({\n          uri: subscriptionUri,\n          options: { reconnect: true },\n        })\n      : undefined;\n\n    const hybridLink = subsLink ? createSplitLink(httpLink, subsLink) : httpLink;\n    const errorLogger = onError(logError);\n\n    return ApolloLink.from([errorLogger, hybridLink]);\n  }\n\n  /**\n   * get the graphQL provider\n   */\n  getProvider = ({ client, children }: { client: GraphQLClient<any>; children: ReactNode }) => {\n    return <GraphQLProvider client={client}>{children}</GraphQLProvider>;\n  };\n\n  readonly renderPlugins = new GraphqlRenderPlugins(this);\n\n  static runtime = UIRuntime;\n  static dependencies = [];\n  static slots = [];\n\n  static async provider() {\n    const graphqlUI = new GraphqlUI();\n\n    return graphqlUI;\n  }\n}\n\nGraphqlAspect.addRuntime(GraphqlUI);\n"],"mappings":";;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAeO,MAAMA,SAAS,CAAC;EAAA;IAAA,qDAwDP,CAAC;MAAEC,MAAM;MAAEC;IAA8D,CAAC,KAAK;MAC3F,oBAAO,+BAAC,kCAAe;QAAC,MAAM,EAAED;MAAO,GAAEC,QAAQ,CAAmB;IACtE,CAAC;IAAA,uDAEwB,KAAIC,uCAAoB,EAAC,IAAI,CAAC;EAAA;EA3DvDC,YAAY,CAACC,GAAW,EAAE;IAAEC,KAAK;IAAEC;EAA+B,CAAC,GAAG,CAAC,CAAC,EAAE;IACxE,MAAMN,MAAM,GAAG,KAAIO,sBAAY,EAAC;MAC9BC,IAAI,EAAE,IAAI,CAACC,UAAU,CAACL,GAAG,EAAE;QAAEE;MAAgB,CAAC,CAAC;MAC/CI,KAAK,EAAE,IAAI,CAACC,WAAW,CAAC;QAAEN;MAAM,CAAC;IACnC,CAAC,CAAC;IAEF,OAAOL,MAAM;EACf;EAEAY,eAAe,CAAC;IAAEC,SAAS;IAAEC;EAA6C,CAAC,EAAE;IAC3E,MAAMN,IAAI,GAAGO,oBAAU,CAACC,IAAI,CAAC,CAC3B,IAAAC,gBAAO,EAACC,mBAAQ,CAAC,EACjB,IAAAC,wBAAc,EAAC;MACbC,WAAW,EAAE,SAAS;MACtBhB,GAAG,EAAES,SAAS;MACdC,OAAO;MACPO,KAAK,EAAEC;IACT,CAAC,CAAC,CACH,CAAC;IAEF,MAAMtB,MAAM,GAAG,KAAIO,sBAAY,EAAC;MAC9BgB,OAAO,EAAE,IAAI;MACbf,IAAI;MACJE,KAAK,EAAE,IAAI,CAACC,WAAW;IACzB,CAAC,CAAC;IAEF,OAAOX,MAAM;EACf;EAEQW,WAAW,CAAC;IAAEN;EAAyC,CAAC,GAAG,CAAC,CAAC,EAAE;IACrE,MAAMK,KAAK,GAAG,KAAIc,uBAAa,GAAE;IAEjC,IAAInB,KAAK,EAAEK,KAAK,CAACe,OAAO,CAACpB,KAAK,CAAC;IAE/B,OAAOK,KAAK;EACd;EAEQD,UAAU,CAACL,GAAW,EAAE;IAAEE;EAA8C,CAAC,GAAG,CAAC,CAAC,EAAE;IACtF,MAAMoB,QAAQ,GAAG,KAAIC,kBAAQ,EAAC;MAAEP,WAAW,EAAE,SAAS;MAAEhB;IAAI,CAAC,CAAC;IAC9D,MAAMwB,QAAQ,GAAGtB,eAAe,GAC5B,KAAIuB,mBAAa,EAAC;MAChBzB,GAAG,EAAEE,eAAe;MACpBwB,OAAO,EAAE;QAAEC,SAAS,EAAE;MAAK;IAC7B,CAAC,CAAC,GACFC,SAAS;IAEb,MAAMC,UAAU,GAAGL,QAAQ,GAAG,IAAAM,6BAAe,EAACR,QAAQ,EAAEE,QAAQ,CAAC,GAAGF,QAAQ;IAC5E,MAAMS,WAAW,GAAG,IAAAlB,gBAAO,EAACC,mBAAQ,CAAC;IAErC,OAAOH,oBAAU,CAACC,IAAI,CAAC,CAACmB,WAAW,EAAEF,UAAU,CAAC,CAAC;EACnD;;EAEA;AACF;AACA;;EAWE,aAAaG,QAAQ,GAAG;IACtB,MAAMC,SAAS,GAAG,IAAItC,SAAS,EAAE;IAEjC,OAAOsC,SAAS;EAClB;AACF;AAAC;AAAA,gCAvEYtC,SAAS,aA8DHuC,eAAS;AAAA,gCA9DfvC,SAAS,kBA+DE,EAAE;AAAA,gCA/DbA,SAAS,WAgEL,EAAE;AASnBwC,wBAAa,CAACC,UAAU,CAACzC,SAAS,CAAC"}