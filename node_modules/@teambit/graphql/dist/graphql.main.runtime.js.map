{"version":3,"names":["Verb","GraphqlMain","constructor","config","moduleSlot","context","logger","graphQLServerSlot","pubSubSlot","Map","pubsub","pubSubSlots","values","length","PubSub","getSchema","aspectId","get","getSchemas","aspectIds","toArray","filter","includes","map","schema","createServer","options","graphiql","localSchema","createRootModule","schemaSlot","remoteSchemas","createRemoteSchemas","schemas","concat","x","mergeSchemas","app","express","use","cors","origin","callback","credentials","graphqlHTTP","request","res","params","customFormatErrorFn","err","error","Object","assign","ERR_CODE","originalError","errors","name","HTTP_CODE","code","rootValue","server","subscriptionsPort","subscriptionsPortRange","subscriptionServerPort","getPort","port","createSubscription","proxySubscription","registerServer","register","registerPubSub","Error","listen","serverPort","subServer","info","subscriptionsPath","range","from","to","Port","websocketServer","response","writeHead","end","debug","SubscriptionServer","execute","subscribe","onConnect","onWsConnect","path","proxServer","httpProxy","createProxyServer","on","req","socket","head","url","ws","target","host","modules","buildModules","GraphQLModule","imports","schemaSlots","extensionId","moduleDeps","getModuleDependencies","module","typeDefs","resolvers","schemaDirectives","session","verb","headers","READ","set","extension","extensions","deps","getDependencies","ids","dep","id","Array","entries","depId","undefined","provider","loggerFactory","createLogger","GraphqlAspect","graphqlMain","Slot","withType","MainRuntime","LoggerAspect","addRuntime"],"sources":["graphql.main.runtime.ts"],"sourcesContent":["import { mergeSchemas } from 'graphql-tools';\nimport { GraphQLModule } from '@graphql-modules/core';\nimport { MainRuntime } from '@teambit/cli';\nimport { Harmony, Slot, SlotRegistry } from '@teambit/harmony';\nimport { Logger, LoggerAspect, LoggerMain } from '@teambit/logger';\nimport express, { Express } from 'express';\nimport { graphqlHTTP } from 'express-graphql';\nimport { Port } from '@teambit/toolbox.network.get-port';\nimport { execute, subscribe } from 'graphql';\nimport { PubSubEngine, PubSub } from 'graphql-subscriptions';\nimport { createServer, Server } from 'http';\nimport httpProxy from 'http-proxy';\nimport { SubscriptionServer } from 'subscriptions-transport-ws';\nimport cors from 'cors';\nimport { GraphQLServer } from './graphql-server';\nimport { createRemoteSchemas } from './create-remote-schemas';\nimport { GraphqlAspect } from './graphql.aspect';\nimport { Schema } from './schema';\n\nexport enum Verb {\n  WRITE = 'write',\n  READ = 'read',\n}\n\nexport type GraphQLConfig = {\n  port: number;\n  subscriptionsPortRange: number[];\n  subscriptionsPath: string;\n};\n\nexport type GraphQLServerSlot = SlotRegistry<GraphQLServer>;\n\nexport type SchemaSlot = SlotRegistry<Schema>;\n\nexport type PubSubSlot = SlotRegistry<PubSubEngine>;\n\nexport type GraphQLServerOptions = {\n  schemaSlot?: SchemaSlot;\n  app?: Express;\n  graphiql?: boolean;\n  remoteSchemas?: GraphQLServer[];\n  subscriptionsPortRange?: number[];\n  onWsConnect?: Function;\n};\n\nexport class GraphqlMain {\n  constructor(\n    /**\n     * extension config\n     */\n    readonly config: GraphQLConfig,\n\n    /**\n     * slot for registering graphql modules\n     */\n    private moduleSlot: SchemaSlot,\n\n    /**\n     * harmony context.\n     */\n    private context: Harmony,\n\n    /**\n     * logger extension.\n     */\n    readonly logger: Logger,\n\n    private graphQLServerSlot: GraphQLServerSlot,\n\n    /**\n     * graphql pubsub. allows to emit events to clients.\n     */\n    private pubSubSlot: PubSubSlot\n  ) {}\n\n  get pubsub(): PubSubEngine {\n    const pubSubSlots = this.pubSubSlot.values();\n    if (pubSubSlots.length) return pubSubSlots[0];\n    return new PubSub();\n  }\n\n  private modules = new Map<string, GraphQLModule>();\n\n  /**\n   * returns the schema for a specific aspect by its id.\n   */\n  getSchema(aspectId: string) {\n    return this.moduleSlot.get(aspectId);\n  }\n\n  /**\n   * get multiple schema by aspect ids.\n   */\n  getSchemas(aspectIds: string[]) {\n    return this.moduleSlot\n      .toArray()\n      .filter(([aspectId]) => {\n        return aspectIds.includes(aspectId);\n      })\n      .map(([, schema]) => {\n        return schema;\n      });\n  }\n\n  async createServer(options: GraphQLServerOptions) {\n    const { graphiql = true } = options;\n    const localSchema = this.createRootModule(options.schemaSlot);\n    const remoteSchemas = await createRemoteSchemas(options.remoteSchemas || this.graphQLServerSlot.values());\n    const schemas = [localSchema.schema].concat(remoteSchemas).filter((x) => x);\n    const schema = mergeSchemas({\n      schemas,\n    });\n\n    // TODO: @guy please consider to refactor to express extension.\n    const app = options.app || express();\n    app.use(\n      // @ts-ignore todo: it's not clear what's the issue.\n      cors({\n        origin(origin, callback) {\n          callback(null, true);\n        },\n        credentials: true,\n      })\n    );\n\n    app.use(\n      '/graphql',\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      graphqlHTTP((request, res, params) => ({\n        customFormatErrorFn: (err) => {\n          this.logger.error('graphql got an error during running the following query:', params);\n          this.logger.error('graphql error ', err);\n          return Object.assign(err, {\n            // @ts-ignore\n            ERR_CODE: err?.originalError?.errors?.[0].ERR_CODE || err.originalError?.constructor?.name,\n            // @ts-ignore\n            HTTP_CODE: err?.originalError?.errors?.[0].HTTP_CODE || err.originalError?.code,\n          });\n        },\n        schema,\n        rootValue: request,\n        graphiql,\n      }))\n    );\n\n    const server = createServer(app);\n    const subscriptionsPort = options.subscriptionsPortRange || this.config.subscriptionsPortRange;\n    const subscriptionServerPort = await this.getPort(subscriptionsPort);\n    const { port } = await this.createSubscription(options, subscriptionServerPort);\n    this.proxySubscription(server, port);\n\n    return server;\n  }\n\n  /**\n   * register a new graphql server.\n   */\n  registerServer(server: GraphQLServer) {\n    this.graphQLServerSlot.register(server);\n    return this;\n  }\n\n  /**\n   * register a pubsub client\n   */\n  registerPubSub(pubsub: PubSubEngine) {\n    const pubSubSlots = this.pubSubSlot.toArray();\n    if (pubSubSlots.length) throw new Error('can not register more then one pubsub provider');\n    this.pubSubSlot.register(pubsub);\n    return this;\n  }\n\n  /**\n   * start a graphql server.\n   */\n  async listen(port?: number, server?: Server, app?: Express) {\n    const serverPort = port || this.config.port;\n    const subServer = server || (await this.createServer({ app }));\n\n    subServer.listen(serverPort, () => {\n      this.logger.info(`API Server over HTTP is now running on http://localhost:${serverPort}`);\n      this.logger.info(\n        `API Server over web socket with subscriptions is now running on ws://localhost:${serverPort}/${this.config.subscriptionsPath}`\n      );\n    });\n  }\n\n  /**\n   * register a new graphql module.\n   */\n  register(schema: Schema) {\n    // const module = new GraphQLModule(schema);\n    this.moduleSlot.register(schema);\n    return this;\n  }\n\n  private async getPort(range: number[]) {\n    const [from, to] = range;\n    return Port.getPort(from, to);\n  }\n\n  /** create Subscription server with different port */\n\n  private async createSubscription(options: GraphQLServerOptions, port: number) {\n    // Create WebSocket listener server\n    const websocketServer = createServer((request, response) => {\n      response.writeHead(404);\n      response.end();\n    });\n\n    // Bind it to port and start listening\n    websocketServer.listen(port, () =>\n      this.logger.debug(`Websocket Server is now running on http://localhost:${port}`)\n    );\n\n    const localSchema = this.createRootModule(options.schemaSlot);\n    const remoteSchemas = await createRemoteSchemas(options.remoteSchemas || this.graphQLServerSlot.values());\n    const schemas = [localSchema.schema].concat(remoteSchemas).filter((x) => x);\n    const schema = mergeSchemas({\n      schemas,\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const subServer = new SubscriptionServer(\n      {\n        execute,\n        subscribe,\n        schema,\n        onConnect: options.onWsConnect,\n      },\n      {\n        server: websocketServer,\n        path: this.config.subscriptionsPath,\n      }\n    );\n    return { subServer, port };\n  }\n  /** proxy ws Subscription server to avoid conflict with different websocket connections */\n\n  private proxySubscription(server: Server, port: number) {\n    const proxServer = httpProxy.createProxyServer();\n    const subscriptionsPath = this.config.subscriptionsPath;\n    server.on('upgrade', function (req, socket, head) {\n      if (req.url === subscriptionsPath) {\n        proxServer.ws(req, socket, head, { target: { host: 'localhost', port } });\n      }\n    });\n  }\n\n  private createRootModule(schemaSlot?: SchemaSlot) {\n    const modules = this.buildModules(schemaSlot);\n\n    return new GraphQLModule({\n      imports: modules,\n    });\n  }\n\n  private buildModules(schemaSlot?: SchemaSlot) {\n    const schemaSlots = schemaSlot ? schemaSlot.toArray() : this.moduleSlot.toArray();\n    return schemaSlots.map(([extensionId, schema]) => {\n      const moduleDeps = this.getModuleDependencies(extensionId);\n\n      const module = new GraphQLModule({\n        typeDefs: schema.typeDefs,\n        resolvers: schema.resolvers,\n        schemaDirectives: schema.schemaDirectives,\n        imports: moduleDeps,\n        context: (session) => {\n          return {\n            ...session,\n            verb: session?.headers?.['x-verb'] || Verb.READ,\n          };\n        },\n      });\n\n      this.modules.set(extensionId, module);\n\n      return module;\n    });\n  }\n\n  private getModuleDependencies(extensionId: string): GraphQLModule[] {\n    const extension = this.context.extensions.get(extensionId);\n    if (!extension) throw new Error(`aspect ${extensionId} was not found`);\n    const deps = this.context.getDependencies(extension);\n    const ids = deps.map((dep) => dep.id);\n\n    // @ts-ignore check :TODO why types are breaking here.\n    return Array.from(this.modules.entries())\n      .map(([depId, module]) => {\n        const dep = ids.includes(depId);\n        if (!dep) return undefined;\n        return module;\n      })\n      .filter((module) => !!module);\n  }\n\n  static slots = [Slot.withType<Schema>(), Slot.withType<GraphQLServer>(), Slot.withType<PubSubSlot>()];\n\n  static defaultConfig = {\n    port: 4000,\n    subscriptionsPortRange: [2000, 2100],\n    subscriptionsPath: '/subscriptions',\n  };\n\n  static runtime = MainRuntime;\n  static dependencies = [LoggerAspect];\n\n  static async provider(\n    [loggerFactory]: [LoggerMain],\n    config: GraphQLConfig,\n    [moduleSlot, graphQLServerSlot, pubSubSlot]: [SchemaSlot, GraphQLServerSlot, PubSubSlot],\n    context: Harmony\n  ) {\n    const logger = loggerFactory.createLogger(GraphqlAspect.id);\n    const graphqlMain = new GraphqlMain(config, moduleSlot, context, logger, graphQLServerSlot, pubSubSlot);\n    return graphqlMain;\n  }\n}\n\nGraphqlAspect.addRuntime(GraphqlMain);\n"],"mappings":"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"}