{"version":3,"names":["ALLOWED_HEADERS","GraphqlRenderPlugins","constructor","graphqlUI","GraphqlAspect","id","browser","port","location","serverUrl","client","createSsrClient","headers","pick","ctx","app","getMarkupFromTree","tree","renderFunction","ReactDOMServer","renderToStaticMarkup","undefined","json","JSON","stringify","extract","raw","state","parse","e","console","error","window","isInsecure","protocol","wsUrl","host","createClient","subscriptionUri","_client","renderCtx","children","TypeError","isBrowser","BrowserGqlProvider","ServerGqlProvider","getClient","browserInit"],"sources":["render-lifecycle.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\n// Calling getMarkupFromTree instead of getDataFromTree so we can control the render function\n// This is required since upgrade to @apollo/client v3.6.9 because otherwise the ssr is not working since\n// webpack is not bundling the react-dom/server\nimport { getMarkupFromTree } from '@apollo/client/react/ssr';\nimport ReactDOMServer from 'react-dom/server';\nimport type { ApolloClient, NormalizedCacheObject } from '@apollo/client';\nimport pick from 'lodash.pick';\n\nimport { isBrowser } from '@teambit/ui-foundation.ui.is-browser';\nimport type { SSR } from '@teambit/ui';\n\nimport type { GraphqlUI, GraphQLClient } from './graphql.ui.runtime';\nimport { GraphQLProvider } from './graphql-provider';\nimport { GraphqlAspect } from './graphql.aspect';\n\ntype RenderContext = {\n  client: GraphQLClient<any>;\n};\n\nconst ALLOWED_HEADERS = ['cookie'];\n\nexport class GraphqlRenderPlugins implements SSR.RenderPlugin<RenderContext, { state?: NormalizedCacheObject }> {\n  constructor(private graphqlUI: GraphqlUI) {}\n\n  key = GraphqlAspect.id;\n\n  serverInit = ({ browser }: SSR.SsrSession) => {\n    const port = browser?.location.port || 3000;\n    const serverUrl = `http://localhost:${port}/graphql`;\n\n    const client = this.graphqlUI.createSsrClient({\n      serverUrl,\n      headers: pick(browser?.headers, ALLOWED_HEADERS),\n    });\n\n    const ctx: RenderContext = { client };\n    return ctx;\n  };\n\n  /**\n   * Eagerly and recursively execute all gql queries in the app.\n   * Data will be available in gqlClient.extract()\n   */\n  onBeforeRender = async (ctx: RenderContext, app: ReactNode) => {\n    await getMarkupFromTree({ tree: app, renderFunction: ReactDOMServer.renderToStaticMarkup });\n  };\n\n  serialize = (ctx?: RenderContext) => {\n    const client = ctx?.client;\n    if (!client) return undefined;\n\n    return {\n      json: JSON.stringify(client.extract()),\n    };\n  };\n\n  deserialize = (raw?: string) => {\n    if (!raw) return { state: undefined };\n    let state: NormalizedCacheObject | undefined;\n    try {\n      state = JSON.parse(raw);\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error('[GraphQL] failed deserializing state from DOM', e);\n    }\n\n    return { state };\n  };\n\n  private _client: ApolloClient<NormalizedCacheObject> | undefined = undefined;\n\n  browserInit = ({ state }: { state?: NormalizedCacheObject } = {}) => {\n    const { location } = window;\n    const isInsecure = location.protocol === 'http:';\n    const wsUrl = `${isInsecure ? 'ws:' : 'wss:'}//${location.host}/subscriptions`;\n\n    const client = this.graphqlUI.createClient('/graphql', { state, subscriptionUri: wsUrl });\n    this._client = client;\n\n    return { client };\n  };\n\n  getClient() {\n    if (!this._client) return this.browserInit().client;\n    return this._client;\n  }\n\n  private BrowserGqlProvider = ({ renderCtx, children }: { renderCtx?: RenderContext; children: ReactNode }) => {\n    if (!renderCtx?.client) throw new TypeError('GQL client is not initialized, make sure `.browserInit()` executes');\n\n    return <this.graphqlUI.getProvider client={renderCtx?.client}>{children}</this.graphqlUI.getProvider>;\n  };\n\n  reactContext = isBrowser ? this.BrowserGqlProvider : ServerGqlProvider;\n}\n\nfunction ServerGqlProvider({ renderCtx, children }: { renderCtx?: RenderContext; children: ReactNode }) {\n  if (!renderCtx?.client)\n    throw new TypeError('GQL client has not been initialized during SSR, make sure `.serverInit()` executes');\n\n  const { client } = renderCtx;\n  return <GraphQLProvider client={client}>{children}</GraphQLProvider>;\n}\n"],"mappings":"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"}