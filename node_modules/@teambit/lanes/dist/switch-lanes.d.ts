import { BitId } from '@teambit/legacy-bit-id';
import { Lane } from '@teambit/legacy/dist/scope/models';
import { CheckoutProps } from '@teambit/legacy/dist/consumer/versions-ops/checkout-version';
import { ApplyVersionResults } from '@teambit/legacy/dist/consumer/versions-ops/merge-version';
import { Workspace } from '@teambit/workspace';
import { Logger } from '@teambit/logger';
import { LanesMain } from './lanes.main.runtime';
export declare type SwitchProps = {
    laneName: string;
    ids?: BitId[];
    existingOnWorkspaceOnly: boolean;
    remoteLane?: Lane;
    localTrackedLane?: string;
    alias?: string;
};
export declare class LaneSwitcher {
    private workspace;
    private logger;
    private switchProps;
    private checkoutProps;
    private Lanes;
    private consumer;
    private laneIdToSwitch;
    private laneToSwitchTo;
    constructor(workspace: Workspace, logger: Logger, switchProps: SwitchProps, checkoutProps: CheckoutProps, Lanes: LanesMain);
    switch(): Promise<ApplyVersionResults>;
    private populateSwitchProps;
    private populatePropsAccordingToRemoteLane;
    private populatePropsAccordingToDefaultLane;
    private populatePropsAccordingToLocalLane;
    private getAllComponentsStatus;
    private saveLanesData;
}
