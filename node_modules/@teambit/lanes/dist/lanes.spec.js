"use strict";

require("core-js/modules/es.promise.js");
function _harmonyTesting() {
  const data = require("@teambit/harmony.testing.load-aspect");
  _harmonyTesting = function () {
    return data;
  };
  return data;
}
function _workspaceTesting() {
  const data = require("@teambit/workspace.testing.mock-workspace");
  _workspaceTesting = function () {
    return data;
  };
  return data;
}
function _componentTesting() {
  const data = require("@teambit/component.testing.mock-components");
  _componentTesting = function () {
    return data;
  };
  return data;
}
function _lanes() {
  const data = require("./lanes.aspect");
  _lanes = function () {
    return data;
  };
  return data;
}
describe('LanesAspect', function () {
  let lanes;
  let workspaceData;
  beforeAll(async () => {
    workspaceData = (0, _workspaceTesting().mockWorkspace)();
    const {
      workspacePath
    } = workspaceData;
    await (0, _componentTesting().mockComponents)(workspacePath);
    lanes = await (0, _harmonyTesting().loadAspect)(_lanes().LanesAspect, workspacePath);
    await lanes.createLane('stage');
  });
  afterAll(async () => {
    await (0, _workspaceTesting().destroyWorkspace)(workspaceData);
  });
  describe('getLanes()', () => {
    it('should list all lanes', async () => {
      const currentLanes = await lanes.getLanes({});
      expect(currentLanes).toBeDefined();
      expect(currentLanes[0].name).toEqual('stage');
    });
  });
});

//# sourceMappingURL=lanes.spec.js.map