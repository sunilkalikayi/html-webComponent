import { IBitLogger } from '@teambit/legacy/dist/logger/logger';
import { LongProcessLogger } from './long-process-logger';
export declare class Logger implements IBitLogger {
    private extensionName;
    constructor(extensionName: string);
    trace(message: string, ...meta: any[]): void;
    debug(message: string, ...meta: any[]): void;
    info(message: string, ...meta: any[]): void;
    warn(message: string, ...meta: any[]): void;
    error(message: string, ...meta: any[]): void;
    fatal(message: string, ...meta: any[]): void;
    get isLoaderStarted(): boolean;
    /**
     * use it for a long running process. upon creation it logs the `processDescription`.
     * if the process involves iteration over a list of items, such as running tag on a list of
     * components, then pass the `totalItems` as the total of the total components in the list.
     * later, during the iteration, call `LongProcessLogger.logProgress(componentName)`.
     * once done, call `LongProcessLogger.end()`
     * the status-line will show all messages in the terminal.
     */
    createLongProcessLogger(processDescription: string, totalItems?: number): LongProcessLogger;
    /**
     * single status-line on the bottom of the screen.
     * the text is replaced every time this method is called.
     */
    setStatusLine(text: string): void;
    /**
     * remove the text from the last line on the screen.
     */
    clearStatusLine(): void;
    /**
     * print to the screen. if message is empty, print the last logged message.
     */
    console(message?: string, ...meta: any[]): void;
    consoleWarn(message?: string, ...meta: any[]): void;
    consoleError(message?: string, ...meta: any[]): void;
    /**
     * print to the screen as a title, with bold text.
     */
    consoleTitle(message: string): void;
    /**
     * print to the screen with a green `✔` prefix. if message is empty, print the last logged message.
     */
    consoleSuccess(message?: string): void;
    /**
     * turn off the logger.
     */
    off(): import("@teambit/legacy/dist/cli/loader/loader").Loader;
    on(): import("@teambit/legacy/dist/cli/loader/loader").Loader;
    profile(id: string, console?: boolean): void;
    /**
     * print to the screen with a red `✖` prefix. if message is empty, print the last logged message.
     */
    consoleFailure(message?: string): void;
    /**
     * print to the screen with a red `⚠` prefix. if message is empty, print the last logged message.
     */
    consoleWarning(message?: string): void;
    private colorMessage;
}
