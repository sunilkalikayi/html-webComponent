import type { Logger } from './logger';
/**
 * use it for a long running process. upon creation it logs the `processDescription`.
 * if the process involves iteration over a list of items, such as running tag on a list of
 * components, then pass the `totalItems` as the total components in the list.
 * later, during the iteration, call `logProgress(componentName)`.
 * once done, call `end()`.
 * the status-line will show all messages in the terminal.
 * see README for more data.
 */
export declare class LongProcessLogger {
    private logPublisher;
    private extensionName;
    private processDescription;
    private totalItems?;
    private currentItem;
    private startTime;
    constructor(logPublisher: Logger, extensionName: string, processDescription: string, totalItems?: number | undefined, currentItem?: number, startTime?: [number, number]);
    logProgress(itemName?: string): void;
    end(): void;
    private start;
    private logAndConsole;
}
