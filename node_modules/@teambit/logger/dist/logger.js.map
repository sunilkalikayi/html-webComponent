{"version":3,"names":["Logger","constructor","extensionName","trace","message","meta","logger","colorMessage","debug","info","warn","error","fatal","isLoaderStarted","loader","isStarted","createLongProcessLogger","processDescription","totalItems","LongProcessLogger","setStatusLine","text","setTextAndRestart","clearStatusLine","stop","console","shouldWriteToConsole","log","stopAndPersist","consoleWarn","consoleError","consoleTitle","chalk","bold","consoleSuccess","succeed","off","on","profile","id","consoleFailure","fail","consoleWarning","yellow","isJsonFormat"],"sources":["logger.ts"],"sourcesContent":["import loader from '@teambit/legacy/dist/cli/loader';\nimport logger, { IBitLogger } from '@teambit/legacy/dist/logger/logger';\nimport chalk from 'chalk';\n\nimport { LongProcessLogger } from './long-process-logger';\n\nexport class Logger implements IBitLogger {\n  constructor(private extensionName: string) {}\n\n  trace(message: string, ...meta: any[]) {\n    logger.trace(this.colorMessage(message), ...meta);\n  }\n  debug(message: string, ...meta: any[]) {\n    logger.debug(this.colorMessage(message), ...meta);\n  }\n  info(message: string, ...meta: any[]) {\n    logger.info(this.colorMessage(message), ...meta);\n  }\n  warn(message: string, ...meta: any[]) {\n    logger.warn(this.colorMessage(message), ...meta);\n  }\n  error(message: string, ...meta: any[]) {\n    logger.error(this.colorMessage(message), ...meta);\n  }\n  fatal(message: string, ...meta: any[]) {\n    logger.fatal(this.colorMessage(message), ...meta);\n  }\n\n  get isLoaderStarted() {\n    return loader.isStarted;\n  }\n  /**\n   * use it for a long running process. upon creation it logs the `processDescription`.\n   * if the process involves iteration over a list of items, such as running tag on a list of\n   * components, then pass the `totalItems` as the total of the total components in the list.\n   * later, during the iteration, call `LongProcessLogger.logProgress(componentName)`.\n   * once done, call `LongProcessLogger.end()`\n   * the status-line will show all messages in the terminal.\n   */\n  createLongProcessLogger(processDescription: string, totalItems?: number): LongProcessLogger {\n    return new LongProcessLogger(this, this.extensionName, processDescription, totalItems);\n  }\n  /**\n   * single status-line on the bottom of the screen.\n   * the text is replaced every time this method is called.\n   */\n  setStatusLine(text: string) {\n    loader.setTextAndRestart(text);\n  }\n  /**\n   * remove the text from the last line on the screen.\n   */\n  clearStatusLine() {\n    loader.stop();\n  }\n  /**\n   * print to the screen. if message is empty, print the last logged message.\n   */\n  console(message?: string, ...meta: any[]) {\n    if (message) this.info(message, meta);\n    if (!loader.isStarted && logger.shouldWriteToConsole) {\n      // eslint-disable-next-line no-console\n      console.log(message, ...meta);\n    } else {\n      loader.stopAndPersist({ text: message });\n    }\n  }\n\n  consoleWarn(message?: string, ...meta: any[]) {\n    if (message) this.warn(message, ...meta);\n    if (!loader.isStarted && logger.shouldWriteToConsole) {\n      // eslint-disable-next-line no-console\n      console.warn(message, ...meta);\n    } else {\n      loader.stopAndPersist({ text: message });\n    }\n  }\n\n  consoleError(message?: string, ...meta: any[]) {\n    if (message) this.error(message, ...meta);\n    if (!loader.isStarted && logger.shouldWriteToConsole) {\n      // eslint-disable-next-line no-console\n      console.error(message, ...meta);\n    } else {\n      loader.stopAndPersist({ text: message });\n    }\n  }\n\n  /**\n   * print to the screen as a title, with bold text.\n   */\n  consoleTitle(message: string) {\n    this.info(message);\n    loader.stopAndPersist({ text: chalk.bold(message) });\n  }\n  /**\n   * print to the screen with a green `✔` prefix. if message is empty, print the last logged message.\n   */\n  consoleSuccess(message?: string) {\n    if (message) this.info(message);\n    loader.succeed(message);\n  }\n\n  /**\n   * turn off the logger.\n   */\n  off() {\n    return loader.off();\n  }\n\n  on() {\n    return loader.on();\n  }\n\n  profile(id: string, console?: boolean) {\n    logger.profile(id, console);\n  }\n\n  /**\n   * print to the screen with a red `✖` prefix. if message is empty, print the last logged message.\n   */\n  consoleFailure(message?: string) {\n    if (message) this.error(message);\n    loader.fail(message);\n  }\n  /**\n   * print to the screen with a red `⚠` prefix. if message is empty, print the last logged message.\n   */\n  consoleWarning(message?: string) {\n    if (message) {\n      this.warn(message);\n      message = chalk.yellow(message);\n    }\n    loader.warn(message);\n  }\n\n  private colorMessage(message: string) {\n    if (logger.isJsonFormat) return `${this.extensionName}, ${message}`;\n    return `${chalk.bold(this.extensionName)}, ${message}`;\n  }\n}\n"],"mappings":"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"}