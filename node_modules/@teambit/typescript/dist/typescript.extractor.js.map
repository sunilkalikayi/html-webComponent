{"version":3,"names":["TypeScriptExtractor","constructor","tsconfig","schemaTransformerSlot","tsMain","rootPath","depResolver","workspace","undefined","parseSourceFile","file","sourceFile","ts","createSourceFile","path","contents","toString","ScriptTarget","Latest","extract","component","tsserver","getTsServer","mainFile","mainAst","context","createContext","exportNames","computeExportedIdentifiers","setExports","ExportList","moduleSchema","computeSchema","flatExportsRecursively","apiScheme","location","getLocation","APISchema","id","node","transformer","getTransformer","getIdentifiers","TransformerNotFound","componentDeps","getComponentDeps","SchemaExtractorContext","deps","getDependencies","getComponentDependencies","getTsserverClient","initTsserverClient","transform","getComponentIDByPath","getComponentIdByPath","transformers","flatten","values","find","singleTransformer","predicate"],"sources":["typescript.extractor.ts"],"sourcesContent":["import ts, { Node, SourceFile } from 'typescript';\nimport { SchemaExtractor } from '@teambit/schema';\nimport { TsserverClient } from '@teambit/ts-server';\nimport type { Workspace } from '@teambit/workspace';\nimport { ComponentDependency, DependencyResolverMain } from '@teambit/dependency-resolver';\nimport { SchemaNode, APISchema, Module } from '@teambit/semantics.entities.semantic-schema';\nimport { Component } from '@teambit/component';\nimport { AbstractVinyl } from '@teambit/legacy/dist/consumer/component/sources';\nimport { flatten } from 'lodash';\nimport { TypescriptMain, SchemaTransformerSlot } from './typescript.main.runtime';\nimport { TransformerNotFound } from './exceptions';\nimport { SchemaExtractorContext } from './schema-extractor-context';\nimport { ExportList } from './export-list';\n\nexport class TypeScriptExtractor implements SchemaExtractor {\n  constructor(\n    private tsconfig: any,\n    private schemaTransformerSlot: SchemaTransformerSlot,\n    private tsMain: TypescriptMain,\n    private rootPath: string,\n    private depResolver: DependencyResolverMain,\n    private workspace: Workspace | undefined\n  ) {}\n\n  parseSourceFile(file: AbstractVinyl): SourceFile {\n    const sourceFile = ts.createSourceFile(\n      file.path,\n      file.contents.toString('utf8'),\n      ts.ScriptTarget.Latest,\n      true\n      /** don't pass the scriptKind, it'll be determined automatically by typescript by the filepath */\n    );\n    // leave this commented out, it's helpful when there are issues with ASTs. consider throwing in this case.\n    // console.log(\"sourceFile Errors\", file.path, sourceFile.parseDiagnostics);\n    return sourceFile;\n  }\n\n  /**\n   * extract a component schema.\n   */\n  async extract(component: Component): Promise<APISchema> {\n    const tsserver = await this.getTsServer();\n    const mainFile = component.mainFile;\n    const mainAst = this.parseSourceFile(mainFile);\n    const context = await this.createContext(tsserver, component);\n    const exportNames = await this.computeExportedIdentifiers(mainAst, context);\n    context.setExports(new ExportList(exportNames));\n    const moduleSchema = (await this.computeSchema(mainAst, context)) as Module;\n    moduleSchema.flatExportsRecursively();\n    const apiScheme = moduleSchema;\n    const location = context.getLocation(mainAst);\n\n    return new APISchema(location, apiScheme, component.id);\n  }\n\n  async computeExportedIdentifiers(node: Node, context: SchemaExtractorContext) {\n    const transformer = this.getTransformer(node, context);\n    if (!transformer || !transformer.getIdentifiers) {\n      throw new TransformerNotFound(node, context.component, context.getLocation(node));\n    }\n    return transformer.getIdentifiers(node, context);\n  }\n\n  private async createContext(tsserver: TsserverClient, component: Component): Promise<SchemaExtractorContext> {\n    const componentDeps = await this.getComponentDeps(component);\n    return new SchemaExtractorContext(tsserver, component, this, componentDeps);\n  }\n\n  private async getComponentDeps(component: Component): Promise<ComponentDependency[]> {\n    const deps = await this.depResolver.getDependencies(component);\n    const componentDeps = deps.getComponentDependencies();\n    return componentDeps;\n  }\n\n  private tsserver: TsserverClient | undefined = undefined;\n\n  private async getTsServer() {\n    if (!this.tsserver) {\n      const tsserver = this.tsMain.getTsserverClient();\n      if (tsserver) {\n        this.tsserver = tsserver;\n        return tsserver;\n      }\n\n      this.tsserver = await this.tsMain.initTsserverClient(this.rootPath);\n      return this.tsserver;\n    }\n\n    return this.tsserver;\n  }\n\n  async computeSchema(node: Node, context: SchemaExtractorContext): Promise<SchemaNode> {\n    const transformer = this.getTransformer(node, context);\n    // leave the next line commented out, it is used for debugging\n    // console.log('transformer', transformer.constructor.name, node.getText());\n    return transformer.transform(node, context);\n  }\n\n  async getComponentIDByPath(file: string) {\n    if (!this.workspace) {\n      return null;\n    }\n    return this.workspace.getComponentIdByPath(file);\n  }\n\n  /**\n   * select the correct transformer for a node.\n   */\n  private getTransformer(node: Node, context: SchemaExtractorContext) {\n    const transformers = flatten(this.schemaTransformerSlot.values());\n    const transformer = transformers.find((singleTransformer) => singleTransformer.predicate(node));\n\n    if (!transformer) throw new TransformerNotFound(node, context.component, context.getLocation(node));\n\n    return transformer;\n  }\n}\n"],"mappings":"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"}