{"version":3,"names":["describe","exampleArrowFunction","exampleFunction","exampleClass","it","ast","ts","createSourceFile","ScriptTarget","Latest","exports","TypeScriptParser","getExports","exportArrow","find","x","identifier","expect","to","exist","exportFunction","exportClass","staticProperties","get","equal","exampleFile","parseStaticProperties","exportHello","undefined","has","be","false"],"sources":["typescript.parser.spec.ts"],"sourcesContent":["import ts from 'typescript';\nimport { expect } from 'chai';\n\nimport { TypeScriptParser } from './typescript.parser';\n\ndescribe('TypescriptParser', () => {\n  describe('getExports', () => {\n    const exampleArrowFunction = `\n      export const arrow = () => { return 3; }\n      arrow.textProperty = \"propertyValue\";\n    `;\n\n    const exampleFunction = `\n      export function func() { return 3; }\n      func.textProperty = \"propertyValue\";\n    `;\n\n    const exampleClass = `\n      export class classy{ render() { return 3; } }\n      classy.textProperty = \"propertyValue\";\n    `;\n\n    it('should parse arrowFunctions', () => {\n      const ast = ts.createSourceFile('example.tsx', exampleArrowFunction, ts.ScriptTarget.Latest);\n      const exports = new TypeScriptParser().getExports(ast);\n\n      const exportArrow = exports.find((x) => x.identifier === 'arrow');\n\n      expect(exportArrow).to.exist;\n    });\n\n    it('should parse function exports', () => {\n      const ast = ts.createSourceFile('example.tsx', exampleFunction, ts.ScriptTarget.Latest);\n      const exports = new TypeScriptParser().getExports(ast);\n\n      const exportFunction = exports.find((x) => x.identifier === 'func');\n\n      expect(exportFunction).to.exist;\n    });\n\n    it('should parse classes', () => {\n      const ast = ts.createSourceFile('example.tsx', exampleClass, ts.ScriptTarget.Latest);\n      const exports = new TypeScriptParser().getExports(ast);\n\n      const exportClass = exports.find((x) => x.identifier === 'classy');\n\n      expect(exportClass).to.exist;\n    });\n\n    describe('staticProperties', () => {\n      it('should include staticProperties, when on arrowFunctions', () => {\n        const ast = ts.createSourceFile('example.tsx', exampleArrowFunction, ts.ScriptTarget.Latest);\n        const exports = new TypeScriptParser().getExports(ast);\n\n        const exportArrow = exports.find((x) => x.identifier === 'arrow');\n\n        expect(exportArrow?.staticProperties?.get('textProperty')).to.equal('propertyValue');\n      });\n\n      it('should include staticProperties, when on regular functions', () => {\n        const ast = ts.createSourceFile('example.tsx', exampleFunction, ts.ScriptTarget.Latest);\n        const exports = new TypeScriptParser().getExports(ast);\n\n        const exportClass = exports.find((x) => x.identifier === 'func');\n\n        expect(exportClass?.staticProperties?.get('textProperty')).to.equal('propertyValue');\n      });\n\n      it('should include staticProperties, when on classes', () => {\n        const ast = ts.createSourceFile('example.tsx', exampleClass, ts.ScriptTarget.Latest);\n        const exports = new TypeScriptParser().getExports(ast);\n\n        const exportClass = exports.find((x) => x.identifier === 'classy');\n\n        expect(exportClass?.staticProperties?.get('textProperty')).to.equal('propertyValue');\n      });\n    });\n  });\n\n  describe('collectStaticProperties', () => {\n    const exampleFile = `\n      export const hello = () => { return 3; }\n\n      hello.text = \"is\";\n      hello.count = 3;\n      hello.nullish = null;\n      hello.undef = undefined;\n      hello.disable = false;\n      hello.enable = true;\n      hello.complextLiteral = \\`what \\${hello.text} it?\\`;\n      hello.nonAssignedProperty += 'value';\n    `;\n\n    it('should parse all primitive values', () => {\n      const ast = ts.createSourceFile('example.tsx', exampleFile, ts.ScriptTarget.Latest);\n      const staticProperties = new TypeScriptParser().parseStaticProperties(ast);\n\n      expect(staticProperties).to.exist;\n\n      const exportHello = staticProperties.get('hello');\n      expect(exportHello).to.exist;\n\n      expect(exportHello?.get('text')).to.equal('is');\n      expect(exportHello?.get('count')).to.equal(3);\n      expect(exportHello?.get('nullish')).to.equal(null);\n      expect(exportHello?.get('undef')).to.equal(undefined);\n      expect(exportHello?.get('disable')).to.equal(false);\n      expect(exportHello?.get('enable')).to.equal(true);\n\n      expect(exportHello?.has('complextLiteral')).to.be.false;\n    });\n\n    it('should skip non primitive values', () => {\n      const ast = ts.createSourceFile('example.tsx', exampleFile, ts.ScriptTarget.Latest);\n      const staticProperties = new TypeScriptParser().parseStaticProperties(ast);\n      const exportHello = staticProperties.get('hello');\n\n      expect(exportHello?.has('complextLiteral')).to.be.false;\n    });\n\n    it('should skip non assignment statements', () => {\n      const ast = ts.createSourceFile('example.tsx', exampleFile, ts.ScriptTarget.Latest);\n      const staticProperties = new TypeScriptParser().parseStaticProperties(ast);\n      const exportHello = staticProperties.get('hello');\n\n      expect(exportHello?.has('nonAssignedProperty')).to.be.false;\n    });\n  });\n});\n"],"mappings":"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"}