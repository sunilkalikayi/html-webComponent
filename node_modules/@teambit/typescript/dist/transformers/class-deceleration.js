"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ClassDecelerationTransformer = void 0;
function _pMapSeries() {
  const data = _interopRequireDefault(require("p-map-series"));
  _pMapSeries = function () {
    return data;
  };
  return data;
}
function _lodash() {
  const data = require("lodash");
  _lodash = function () {
    return data;
  };
  return data;
}
function _semanticsEntities() {
  const data = require("@teambit/semantics.entities.semantic-schema");
  _semanticsEntities = function () {
    return data;
  };
  return data;
}
function _typescript() {
  const data = _interopRequireDefault(require("typescript"));
  _typescript = function () {
    return data;
  };
  return data;
}
function _exportIdentifier() {
  const data = require("../export-identifier");
  _exportIdentifier = function () {
    return data;
  };
  return data;
}
function _jsdocToDocSchema() {
  const data = require("./utils/jsdoc-to-doc-schema");
  _jsdocToDocSchema = function () {
    return data;
  };
  return data;
}
function _classElementToSchema() {
  const data = require("./utils/class-element-to-schema");
  _classElementToSchema = function () {
    return data;
  };
  return data;
}
class ClassDecelerationTransformer {
  predicate(node) {
    return node.kind === _typescript().default.SyntaxKind.ClassDeclaration;
  }

  // @todo: in case of `export default class` the class has no name.
  getName(node) {
    var _node$name;
    return ((_node$name = node.name) === null || _node$name === void 0 ? void 0 : _node$name.getText()) || 'default';
  }
  async getIdentifiers(node) {
    return [new (_exportIdentifier().ExportIdentifier)(this.getName(node), node.getSourceFile().fileName)];
  }
  async transform(node, context) {
    const className = this.getName(node);
    const members = await (0, _pMapSeries().default)(node.members, async member => {
      var _member$modifiers;
      const isPrivate = (_member$modifiers = member.modifiers) === null || _member$modifiers === void 0 ? void 0 : _member$modifiers.some(modifier => modifier.kind === _typescript().default.SyntaxKind.PrivateKeyword);
      if (isPrivate) {
        return null;
      }
      return (0, _classElementToSchema().classElementToSchema)(member, context);
    });
    const doc = await (0, _jsdocToDocSchema().jsDocToDocSchema)(node, context);
    return new (_semanticsEntities().ClassSchema)(className, (0, _lodash().compact)(members), context.getLocation(node), doc);
  }
}
exports.ClassDecelerationTransformer = ClassDecelerationTransformer;

//# sourceMappingURL=class-deceleration.js.map