{"version":3,"names":["ClassDecelerationTransformer","predicate","node","kind","ts","SyntaxKind","ClassDeclaration","getName","name","getText","getIdentifiers","ExportIdentifier","getSourceFile","fileName","transform","context","className","members","pMapSeries","member","isPrivate","modifiers","some","modifier","PrivateKeyword","classElementToSchema","doc","jsDocToDocSchema","ClassSchema","compact","getLocation"],"sources":["class-deceleration.ts"],"sourcesContent":["import pMapSeries from 'p-map-series';\nimport { compact } from 'lodash';\nimport { ClassSchema } from '@teambit/semantics.entities.semantic-schema';\nimport ts, { Node, ClassDeclaration } from 'typescript';\nimport { SchemaTransformer } from '../schema-transformer';\nimport { SchemaExtractorContext } from '../schema-extractor-context';\nimport { ExportIdentifier } from '../export-identifier';\nimport { jsDocToDocSchema } from './utils/jsdoc-to-doc-schema';\nimport { classElementToSchema } from './utils/class-element-to-schema';\n\nexport class ClassDecelerationTransformer implements SchemaTransformer {\n  predicate(node: Node) {\n    return node.kind === ts.SyntaxKind.ClassDeclaration;\n  }\n\n  // @todo: in case of `export default class` the class has no name.\n  private getName(node: ClassDeclaration) {\n    return node.name?.getText() || 'default';\n  }\n\n  async getIdentifiers(node: ClassDeclaration) {\n    return [new ExportIdentifier(this.getName(node), node.getSourceFile().fileName)];\n  }\n\n  async transform(node: ClassDeclaration, context: SchemaExtractorContext) {\n    const className = this.getName(node);\n    const members = await pMapSeries(node.members, async (member) => {\n      const isPrivate = member.modifiers?.some((modifier) => modifier.kind === ts.SyntaxKind.PrivateKeyword);\n      if (isPrivate) {\n        return null;\n      }\n      return classElementToSchema(member, context);\n    });\n    const doc = await jsDocToDocSchema(node, context);\n    return new ClassSchema(className, compact(members), context.getLocation(node), doc);\n  }\n}\n"],"mappings":";;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEO,MAAMA,4BAA4B,CAA8B;EACrEC,SAAS,CAACC,IAAU,EAAE;IACpB,OAAOA,IAAI,CAACC,IAAI,KAAKC,qBAAE,CAACC,UAAU,CAACC,gBAAgB;EACrD;;EAEA;EACQC,OAAO,CAACL,IAAsB,EAAE;IAAA;IACtC,OAAO,eAAAA,IAAI,CAACM,IAAI,+CAAT,WAAWC,OAAO,EAAE,KAAI,SAAS;EAC1C;EAEA,MAAMC,cAAc,CAACR,IAAsB,EAAE;IAC3C,OAAO,CAAC,KAAIS,oCAAgB,EAAC,IAAI,CAACJ,OAAO,CAACL,IAAI,CAAC,EAAEA,IAAI,CAACU,aAAa,EAAE,CAACC,QAAQ,CAAC,CAAC;EAClF;EAEA,MAAMC,SAAS,CAACZ,IAAsB,EAAEa,OAA+B,EAAE;IACvE,MAAMC,SAAS,GAAG,IAAI,CAACT,OAAO,CAACL,IAAI,CAAC;IACpC,MAAMe,OAAO,GAAG,MAAM,IAAAC,qBAAU,EAAChB,IAAI,CAACe,OAAO,EAAE,MAAOE,MAAM,IAAK;MAAA;MAC/D,MAAMC,SAAS,wBAAGD,MAAM,CAACE,SAAS,sDAAhB,kBAAkBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACpB,IAAI,KAAKC,qBAAE,CAACC,UAAU,CAACmB,cAAc,CAAC;MACtG,IAAIJ,SAAS,EAAE;QACb,OAAO,IAAI;MACb;MACA,OAAO,IAAAK,4CAAoB,EAACN,MAAM,EAAEJ,OAAO,CAAC;IAC9C,CAAC,CAAC;IACF,MAAMW,GAAG,GAAG,MAAM,IAAAC,oCAAgB,EAACzB,IAAI,EAAEa,OAAO,CAAC;IACjD,OAAO,KAAIa,gCAAW,EAACZ,SAAS,EAAE,IAAAa,iBAAO,EAACZ,OAAO,CAAC,EAAEF,OAAO,CAACe,WAAW,CAAC5B,IAAI,CAAC,EAAEwB,GAAG,CAAC;EACrF;AACF;AAAC"}