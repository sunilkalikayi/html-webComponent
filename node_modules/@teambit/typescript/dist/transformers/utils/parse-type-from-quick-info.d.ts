import protocol from 'typescript/lib/protocol';
export declare const UNRESOLVED = "<<unresolved>>";
/**
 * try to parse the type from the quickinfo.
 * this is an error-prone process, we do our best here.
 *
 * an example of a function with many ":"
 * `export function getObj(a: string, func: (b: number) => {}) { return { a: 1, b: 2 } };`
 * which produce the following quickinfo:
 * ```ts
 * function getObj(a: string, func: (b: number) => {}): {
 *   a: number;
 *   b: number;
 * }
 * ```
 *
 * some examples of quickinfo:
 *
 * function ts.signatureToDisplayParts(typechecker: TypeChecker, signature: Signature, enclosingDeclaration?: Node | undefined, flags?: TypeFormatFlags): SymbolDisplayPart[]
 *
 * const enum ts.TypeFormatFlags
 *
 * (method) ts.TypeChecker.writeSignature(signature: Signature, enclosingDeclaration?: Node | undefined, flags?: TypeFormatFlags | undefined, kind?: SignatureKind | undefined, writer?: EmitTextWriter | undefined): string
 *
 * const obj: {
 *   a: number;
 *   b: number;
 *  }
 *
 * function getObj(a: string): {
 *     a: number;
 *     b: number;
 * }
 */
export declare function parseTypeFromQuickInfo(quickInfo: protocol.QuickInfoResponse | undefined): string;
export declare function parseReturnTypeFromQuickInfo(quickInfo: protocol.QuickInfoResponse | undefined): string;
