import { BindingElement, Node } from 'typescript';
import { VariableLikeSchema } from '@teambit/semantics.entities.semantic-schema';
import { SchemaTransformer } from '../schema-transformer';
import { SchemaExtractorContext } from '../schema-extractor-context';
import { ExportIdentifier } from '../export-identifier';
/**
 * for example:
 *
 * const objBindingElem = { elem1: 1, elem2: 2 };
 * const { elem1 } = objBindingElem;
 * export { elem1 };
 */
export declare class BindingElementTransformer implements SchemaTransformer {
    predicate(node: Node): boolean;
    getIdentifiers(node: BindingElement): Promise<ExportIdentifier[]>;
    transform(node: BindingElement, context: SchemaExtractorContext): Promise<VariableLikeSchema>;
}
