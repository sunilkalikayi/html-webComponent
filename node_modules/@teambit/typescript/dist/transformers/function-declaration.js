"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FunctionDeclaration = void 0;
function _typescript() {
  const data = _interopRequireDefault(require("typescript"));
  _typescript = function () {
    return data;
  };
  return data;
}
function _exportIdentifier() {
  const data = require("../export-identifier");
  _exportIdentifier = function () {
    return data;
  };
  return data;
}
function _toFunctionLikeSchema() {
  const data = require("./utils/to-function-like-schema");
  _toFunctionLikeSchema = function () {
    return data;
  };
  return data;
}
class FunctionDeclaration {
  predicate(node) {
    return node.kind === _typescript().default.SyntaxKind.FunctionDeclaration;
  }

  // need to check for anonymous functions assigned for vars, const and let.
  async getIdentifiers(funcDec) {
    return [new (_exportIdentifier().ExportIdentifier)(this.getName(funcDec), funcDec.getSourceFile().fileName)];
  }
  getName(funcDec) {
    var _funcDec$name;
    return ((_funcDec$name = funcDec.name) === null || _funcDec$name === void 0 ? void 0 : _funcDec$name.getText()) || '';
  }
  async transform(funcDec, context) {
    return (0, _toFunctionLikeSchema().toFunctionLikeSchema)(funcDec, context);
  }
}
exports.FunctionDeclaration = FunctionDeclaration;

//# sourceMappingURL=function-declaration.js.map