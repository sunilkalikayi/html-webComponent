{"version":3,"names":["TypeScriptParser","getExports","sourceFile","staticProperties","parseStaticProperties","exports","statements","filter","statement","modifiers","find","modifier","kind","ts","SyntaxKind","ExportKeyword","exportModels","map","isVariableStatement","child","declarationList","declarations","name","text","Export","get","isFunctionDeclaration","undefined","isClassDeclaration","withoutEmpty","exportModel","parseModule","modulePath","ast","createSourceFile","readFileSync","ScriptTarget","Latest","moduleExports","exportStaticProperties","Map","forEach","isExpressionStatement","isBinaryExpression","expression","operatorToken","EqualsToken","isPropertyAccessExpression","left","isIdentifier","targetName","propertyName","has","set","existingProperties","isStringLiteral","right","isNumericLiteral","UndefinedKeyword","NullKeyword","TrueKeyword","FalseKeyword","err","logger","error","constructor"],"sources":["typescript.parser.ts"],"sourcesContent":["import { Parser } from '@teambit/schema';\nimport { Export, StaticProperties } from '@teambit/semantics.entities.semantic-schema';\nimport { Logger } from '@teambit/logger';\nimport { readFileSync } from 'fs-extra';\nimport ts, {\n  isClassDeclaration,\n  isFunctionDeclaration,\n  isVariableStatement,\n  SourceFile,\n  VariableStatement,\n} from 'typescript';\n\nexport class TypeScriptParser implements Parser {\n  public extension = /^.*\\.(js|jsx|ts|tsx)$/;\n\n  getExports(sourceFile: SourceFile): Export[] {\n    const staticProperties = this.parseStaticProperties(sourceFile);\n\n    const exports = sourceFile.statements.filter((statement) => {\n      if (!statement.modifiers) return false;\n      return statement.modifiers.find((modifier) => {\n        return modifier.kind === ts.SyntaxKind.ExportKeyword;\n      });\n    });\n\n    const exportModels = exports.map((statement) => {\n      // todo refactor to a registry of variable statements.\n      if (isVariableStatement(statement)) {\n        const child = (statement as VariableStatement).declarationList.declarations[0];\n        const name = (child as any).name.text;\n        return new Export(name, staticProperties.get(name));\n      }\n\n      if (isFunctionDeclaration(statement)) {\n        if (!statement.name) return undefined;\n        const name = statement.name.text;\n        return new Export(name, staticProperties.get(name));\n      }\n\n      if (isClassDeclaration(statement)) {\n        if (!statement.name) return undefined;\n        const name = statement.name.text;\n        return new Export(name, staticProperties.get(name));\n      }\n\n      return undefined;\n    });\n    const withoutEmpty = exportModels.filter((exportModel) => exportModel !== undefined);\n    // @ts-ignore\n    return withoutEmpty;\n  }\n\n  parseModule(modulePath: string) {\n    const ast = ts.createSourceFile(modulePath, readFileSync(modulePath, 'utf8'), ts.ScriptTarget.Latest);\n\n    const moduleExports = this.getExports(ast);\n    return moduleExports;\n  }\n\n  parseStaticProperties(sourceFile: SourceFile) {\n    // TODO - should we also parse staticProperties inside classes / objects?\n\n    const exportStaticProperties = new Map<string, StaticProperties>();\n\n    sourceFile.statements.forEach((statement) => {\n      try {\n        if (!ts.isExpressionStatement(statement)) return;\n        if (!ts.isBinaryExpression(statement.expression)) return;\n        if (statement.expression.operatorToken.kind !== ts.SyntaxKind.EqualsToken) return;\n        if (!ts.isPropertyAccessExpression(statement.expression.left)) return;\n        if (!ts.isIdentifier(statement.expression.left.expression)) return;\n\n        const targetName = statement.expression.left.expression.text;\n        const propertyName = statement.expression.left.name.text;\n\n        if (!exportStaticProperties.has(targetName)) exportStaticProperties.set(targetName, new Map());\n\n        const existingProperties = exportStaticProperties.get(targetName);\n\n        if (ts.isStringLiteral(statement.expression.right)) {\n          existingProperties?.set(propertyName, statement.expression.right.text);\n        } else if (ts.isNumericLiteral(statement.expression.right)) {\n          existingProperties?.set(propertyName, +statement.expression.right.text);\n        } else if (statement.expression.right.kind === ts.SyntaxKind.UndefinedKeyword) {\n          existingProperties?.set(propertyName, undefined);\n        } else if (statement.expression.right.kind === ts.SyntaxKind.NullKeyword) {\n          existingProperties?.set(propertyName, null);\n        } else if (statement.expression.right.kind === ts.SyntaxKind.TrueKeyword) {\n          existingProperties?.set(propertyName, true);\n        } else if (statement.expression.right.kind === ts.SyntaxKind.FalseKeyword) {\n          existingProperties?.set(propertyName, false);\n        }\n      } catch (err) {\n        this.logger?.error('failed parsing static properties', err);\n      }\n    });\n\n    return exportStaticProperties;\n  }\n\n  constructor(private logger?: Logger | undefined) {}\n}\n"],"mappings":"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"}