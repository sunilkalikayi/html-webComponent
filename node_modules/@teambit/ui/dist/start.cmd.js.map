{"version":3,"names":["StartCmd","constructor","ui","logger","render","uiRootName","userPattern","dev","port","rebuild","verbose","noBrowser","skipCompilation","off","isHostAvailable","BitError","appName","getUiName","invokePreStart","uiServer","createRuntime","pattern","then","server","buildOptions","launchBrowserOnStart","undefined","whenReady","openBrowser","publicUrl","fullUrl","catch","error","invokeOnStart","clearConsole"],"sources":["start.cmd.tsx"],"sourcesContent":["import React from 'react';\nimport openBrowser from 'react-dev-utils/openBrowser';\nimport { Command, CommandOptions } from '@teambit/cli';\nimport { Logger } from '@teambit/logger';\nimport { BitError } from '@teambit/bit-error';\nimport { UIServerConsole } from '@teambit/ui-foundation.cli.ui-server-console';\nimport type { UiMain } from './ui.main.runtime';\n\ntype StartArgs = [uiName: string, userPattern: string];\ntype StartFlags = {\n  dev: boolean;\n  port: string;\n  rebuild: boolean;\n  verbose: boolean;\n  noBrowser: boolean;\n  skipCompilation: boolean;\n};\n\nexport class StartCmd implements Command {\n  name = 'start [type] [pattern]';\n  description = 'run the ui/development server';\n  alias = 'c';\n  group = 'development';\n  options = [\n    ['d', 'dev', 'start UI server in dev mode.'],\n    ['p', 'port [port-number]', 'port of the UI server.'],\n    ['r', 'rebuild', 'rebuild the UI'],\n    ['v', 'verbose', 'show verbose output for inspection and prints stack trace'],\n    ['', 'no-browser', 'do not automatically open browser when ready'],\n    ['', 'skip-compilation', 'skip the auto-compilation before starting the web-server'],\n  ] as CommandOptions;\n\n  constructor(\n    /**\n     * access to the extension instance.\n     */\n    private ui: UiMain,\n\n    private logger: Logger\n  ) {}\n\n  // async report([uiRootName, userPattern]: StartArgs, { dev, port, rebuild, verbose }: StartFlags): Promise<string> {\n  //   this.logger.off();\n  //   const pattern = userPattern && userPattern.toString();\n\n  //   const uiServer = await this.ui.createRuntime({\n  //     uiRootName,\n  //     pattern,\n  //     dev,\n  //     port: port ? parseInt(port) : undefined,\n  //     rebuild,\n  //     verbose,\n  //   });\n\n  //   return `Bit server has started on port ${uiServer.port}`;\n  // }\n\n  async render(\n    [uiRootName, userPattern]: StartArgs,\n    { dev, port, rebuild, verbose, noBrowser, skipCompilation }: StartFlags\n  ): Promise<React.ReactElement> {\n    this.logger.off();\n    if (!this.ui.isHostAvailable()) {\n      throw new BitError(\n        `bit start can only be run inside a bit workspace or a bit scope - please ensure you are running the command in the correct directory`\n      );\n    }\n    const appName = this.ui.getUiName(uiRootName);\n    await this.ui.invokePreStart({ skipCompilation });\n    const uiServer = this.ui.createRuntime({\n      uiRootName,\n      pattern: userPattern,\n      dev,\n      port: +port,\n      rebuild,\n      verbose,\n    });\n\n    if (!noBrowser) {\n      uiServer\n        .then(async (server) => {\n          if (!server.buildOptions?.launchBrowserOnStart) return undefined;\n\n          await server.whenReady;\n\n          return openBrowser(this.ui.publicUrl || server.fullUrl);\n        })\n        .catch((error) => this.logger.error(error));\n    }\n\n    // DO NOT CHANGE THIS - this meant to be an async hook.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.ui.invokeOnStart();\n    this.ui.clearConsole();\n\n    return <UIServerConsole appName={appName} futureUiServer={uiServer} url={this.ui.publicUrl} />;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAaO,MAAMA,QAAQ,CAAoB;EAcvCC,WAAW;EACT;AACJ;AACA;EACYC,EAAU,EAEVC,MAAc,EACtB;IAAA,KAHQD,EAAU,GAAVA,EAAU;IAAA,KAEVC,MAAc,GAAdA,MAAc;IAAA,8CAnBjB,wBAAwB;IAAA,qDACjB,+BAA+B;IAAA,+CACrC,GAAG;IAAA,+CACH,aAAa;IAAA,iDACX,CACR,CAAC,GAAG,EAAE,KAAK,EAAE,8BAA8B,CAAC,EAC5C,CAAC,GAAG,EAAE,oBAAoB,EAAE,wBAAwB,CAAC,EACrD,CAAC,GAAG,EAAE,SAAS,EAAE,gBAAgB,CAAC,EAClC,CAAC,GAAG,EAAE,SAAS,EAAE,2DAA2D,CAAC,EAC7E,CAAC,EAAE,EAAE,YAAY,EAAE,8CAA8C,CAAC,EAClE,CAAC,EAAE,EAAE,kBAAkB,EAAE,0DAA0D,CAAC,CACrF;EASE;;EAEH;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,MAAMC,MAAM,CACV,CAACC,UAAU,EAAEC,WAAW,CAAY,EACpC;IAAEC,GAAG;IAAEC,IAAI;IAAEC,OAAO;IAAEC,OAAO;IAAEC,SAAS;IAAEC;EAA4B,CAAC,EAC1C;IAC7B,IAAI,CAACT,MAAM,CAACU,GAAG,EAAE;IACjB,IAAI,CAAC,IAAI,CAACX,EAAE,CAACY,eAAe,EAAE,EAAE;MAC9B,MAAM,KAAIC,oBAAQ,EACf,sIAAqI,CACvI;IACH;IACA,MAAMC,OAAO,GAAG,IAAI,CAACd,EAAE,CAACe,SAAS,CAACZ,UAAU,CAAC;IAC7C,MAAM,IAAI,CAACH,EAAE,CAACgB,cAAc,CAAC;MAAEN;IAAgB,CAAC,CAAC;IACjD,MAAMO,QAAQ,GAAG,IAAI,CAACjB,EAAE,CAACkB,aAAa,CAAC;MACrCf,UAAU;MACVgB,OAAO,EAAEf,WAAW;MACpBC,GAAG;MACHC,IAAI,EAAE,CAACA,IAAI;MACXC,OAAO;MACPC;IACF,CAAC,CAAC;IAEF,IAAI,CAACC,SAAS,EAAE;MACdQ,QAAQ,CACLG,IAAI,CAAC,MAAOC,MAAM,IAAK;QAAA;QACtB,IAAI,0BAACA,MAAM,CAACC,YAAY,iDAAnB,qBAAqBC,oBAAoB,GAAE,OAAOC,SAAS;QAEhE,MAAMH,MAAM,CAACI,SAAS;QAEtB,OAAO,IAAAC,sBAAW,EAAC,IAAI,CAAC1B,EAAE,CAAC2B,SAAS,IAAIN,MAAM,CAACO,OAAO,CAAC;MACzD,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK,IAAI,CAAC7B,MAAM,CAAC6B,KAAK,CAACA,KAAK,CAAC,CAAC;IAC/C;;IAEA;IACA;IACA,IAAI,CAAC9B,EAAE,CAAC+B,aAAa,EAAE;IACvB,IAAI,CAAC/B,EAAE,CAACgC,YAAY,EAAE;IAEtB,oBAAO,+BAAC,kCAAe;MAAC,OAAO,EAAElB,OAAQ;MAAC,cAAc,EAAEG,QAAS;MAAC,GAAG,EAAE,IAAI,CAACjB,EAAE,CAAC2B;IAAU,EAAG;EAChG;AACF;AAAC"}