
import { Harmony } from '@teambit/harmony';
import previewAspect from 'C:\\Users\\sunil\\AppData\\Local\\.bvm\\versions\\0.0.888\\bit-0.0.888\\node_modules\\@teambit\\preview';
import docsAspect from 'C:\\Users\\sunil\\AppData\\Local\\.bvm\\versions\\0.0.888\\bit-0.0.888\\node_modules\\@teambit\\docs';
import compositionsAspect from 'C:\\Users\\sunil\\AppData\\Local\\.bvm\\versions\\0.0.888\\bit-0.0.888\\node_modules\\@teambit\\compositions';
import pubsubAspect from 'C:\\Users\\sunil\\AppData\\Local\\.bvm\\versions\\0.0.888\\bit-0.0.888\\node_modules\\@teambit\\pubsub';
import reactAspect from 'C:\\Users\\sunil\\AppData\\Local\\.bvm\\versions\\0.0.888\\bit-0.0.888\\node_modules\\@teambit\\react';
import reactNativeAspect from 'C:\\Users\\sunil\\AppData\\Local\\.bvm\\versions\\0.0.888\\bit-0.0.888\\node_modules\\@teambit\\react-native';
import commandBarAspect from 'C:\\Users\\sunil\\AppData\\Local\\.bvm\\versions\\0.0.888\\bit-0.0.888\\node_modules\\@teambit\\command-bar';
import previewRuntime from 'C:\\Users\\sunil\\AppData\\Local\\.bvm\\versions\\0.0.888\\bit-0.0.888\\node_modules\\@teambit\\preview\\dist\\preview.preview.runtime.js';
import docsRuntime from 'C:\\Users\\sunil\\AppData\\Local\\.bvm\\versions\\0.0.888\\bit-0.0.888\\node_modules\\@teambit\\docs\\dist\\docs.preview.runtime.js';
import compositionsRuntime from 'C:\\Users\\sunil\\AppData\\Local\\.bvm\\versions\\0.0.888\\bit-0.0.888\\node_modules\\@teambit\\compositions\\dist\\compositions.preview.runtime.js';
import pubsubRuntime from 'C:\\Users\\sunil\\AppData\\Local\\.bvm\\versions\\0.0.888\\bit-0.0.888\\node_modules\\@teambit\\pubsub\\dist\\pubsub.preview.runtime.js';
import reactRuntime from 'C:\\Users\\sunil\\AppData\\Local\\.bvm\\versions\\0.0.888\\bit-0.0.888\\node_modules\\@teambit\\react\\dist\\react.preview.runtime.js';
import reactNativeRuntime from 'C:\\Users\\sunil\\AppData\\Local\\.bvm\\versions\\0.0.888\\bit-0.0.888\\node_modules\\@teambit\\react-native\\dist\\react-native.preview.runtime.js';
import commandBarRuntime from 'C:\\Users\\sunil\\AppData\\Local\\.bvm\\versions\\0.0.888\\bit-0.0.888\\node_modules\\@teambit\\command-bar\\dist\\command-bar.preview.runtime.js';

const isBrowser = typeof window !== "undefined";
const config = JSON.parse('{"teambit.workspace/workspace":{"name":"my-workspace-name","icon":"https://static.bit.dev/bit-logo.svg","defaultDirectory":"{scope}/{name}","defaultScope":"my-scope"},"teambit.dependencies/dependency-resolver":{"packageManager":"teambit.dependencies/pnpm","policy":{"dependencies":{},"peerDependencies":{}}},"teambit.workspace/variants":{"*":{}},"teambit.harmony/bit":"teambit.workspace/workspace"}');
previewAspect.id = 'teambit.preview/preview';
docsAspect.id = 'teambit.docs/docs';
compositionsAspect.id = 'teambit.compositions/compositions';
pubsubAspect.id = 'teambit.harmony/pubsub';
reactAspect.id = 'teambit.react/react';
reactNativeAspect.id = 'teambit.react/react-native';
commandBarAspect.id = 'teambit.explorer/command-bar';
export default function render(...props){
  return Harmony.load([previewAspect, docsAspect, compositionsAspect, pubsubAspect, reactAspect, reactNativeAspect, commandBarAspect], 'preview', config)
    .then((harmony) => {
      return harmony
      .run()
      .then(() => harmony.get('teambit.preview/preview'))
      .then((rootExtension) => {
        const ssrSetup = !isBrowser && rootExtension.setupSsr;
        const setup = rootExtension.setup;
        const setupFunc = (ssrSetup || setup || function noop(){}).bind(rootExtension);

        return (
          Promise.resolve(setupFunc())
            .then(() => rootExtension)
        );
      })
      .then((rootExtension) => {
        if (isBrowser) {
          return rootExtension.render('teambit.workspace/workspace', ...props);
        } else {
          return rootExtension.renderSsr('teambit.workspace/workspace', ...props);
        }
      })
      .catch((err) => {
        throw err;
      });
    });
}

if (isBrowser) render();
