{"version":3,"names":["MergeLaneFromScopeCmd","constructor","mergeLanes","name","description","report","pattern","push","keepReadme","noSquash","includeDeps","BitError","mergedNow","mergedPreviously","exportedIds","mergeFromScope","mergedTitle","chalk","green","length","mergedOutput","join","nonMergedTitle","bold","nonMergedOutput","exportedTitle","exportedOutput"],"sources":["merge-lane-from-scope.cmd.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { Command, CommandOptions } from '@teambit/cli';\nimport { BitError } from '@teambit/bit-error';\nimport { MergeLanesMain } from './merge-lanes.main.runtime';\n\n/**\n * private command. the underscore prefix is intended.\n */\nexport class MergeLaneFromScopeCmd implements Command {\n  name = '_merge-lane <lane> [pattern]';\n  description = `merge a remote lane into main via a bare-scope (not workspace)`;\n  extendedDescription = `to merge from a workspace, use \"bit lane merge\" command.\nthis is intended to use from the UI, which will have a button to merge an existing lane into main.\nthe lane must be up-to-date with main, otherwise, conflicts might occur which are not handled in this command`;\n  arguments = [\n    {\n      name: 'lane',\n      description: 'lane-id to merge to main',\n    },\n    {\n      name: 'pattern',\n      description: 'EXPERIMENTAL. partially merge the lane with the specified component-pattern',\n    },\n  ];\n  alias = '';\n  options = [\n    ['', 'push', 'export the updated objects to the original scopes once done'],\n    ['', 'keep-readme', 'skip deleting the lane readme component after merging'],\n    ['', 'no-squash', 'EXPERIMENTAL. relevant for merging lanes into main, which by default squash.'],\n    // ['', 'verbose', 'show details of components that were not merged legitimately'],\n    ['', 'include-deps', 'EXPERIMENTAL. relevant for \"--pattern\". merge also dependencies of the given components'],\n  ] as CommandOptions;\n  loader = true;\n  private = true;\n  migration = true;\n  remoteOp = true;\n\n  constructor(private mergeLanes: MergeLanesMain) {}\n\n  async report(\n    [name, pattern]: [string, string],\n    {\n      push = false,\n      keepReadme = false,\n      noSquash = false,\n      includeDeps = false,\n    }: // verbose = false,\n    {\n      push?: boolean;\n      keepReadme?: boolean;\n      noSquash: boolean;\n      includeDeps?: boolean;\n      // verbose?: boolean;\n    }\n  ): Promise<string> {\n    if (includeDeps && !pattern) {\n      throw new BitError(`\"--include-deps\" flag is relevant only for --pattern flag`);\n    }\n    const { mergedNow, mergedPreviously, exportedIds } = await this.mergeLanes.mergeFromScope(name, {\n      push,\n      keepReadme,\n      noSquash,\n      pattern,\n      includeDeps,\n    });\n\n    const mergedTitle = chalk.green(`successfully merged ${mergedNow.length} components from ${name} to main`);\n    const mergedOutput = mergedNow.length ? `${mergedTitle}\\n${mergedNow.join('\\n')}` : '';\n\n    const nonMergedTitle = chalk.bold(\n      `the following ${mergedPreviously.length} components were already merged before, they were left intact`\n    );\n    const nonMergedOutput = mergedPreviously.length ? `\\n${nonMergedTitle}\\n${mergedPreviously.join('\\n')}` : '';\n\n    const exportedTitle = chalk.green(`successfully exported ${exportedIds.length} components`);\n    const exportedOutput = exportedIds.length ? `\\n${exportedTitle}\\n${exportedIds.join('\\n')}` : '';\n\n    return mergedOutput + nonMergedOutput + exportedOutput;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;AACA;AACA;AACO,MAAMA,qBAAqB,CAAoB;EA6BpDC,WAAW,CAASC,UAA0B,EAAE;IAAA,KAA5BA,UAA0B,GAA1BA,UAA0B;IAAA,8CA5BvC,8BAA8B;IAAA,qDACtB,gEAA+D;IAAA,6DACvD;AACzB;AACA,8GAA8G;IAAA,mDAChG,CACV;MACEC,IAAI,EAAE,MAAM;MACZC,WAAW,EAAE;IACf,CAAC,EACD;MACED,IAAI,EAAE,SAAS;MACfC,WAAW,EAAE;IACf,CAAC,CACF;IAAA,+CACO,EAAE;IAAA,iDACA,CACR,CAAC,EAAE,EAAE,MAAM,EAAE,6DAA6D,CAAC,EAC3E,CAAC,EAAE,EAAE,aAAa,EAAE,uDAAuD,CAAC,EAC5E,CAAC,EAAE,EAAE,WAAW,EAAE,8EAA8E,CAAC;IACjG;IACA,CAAC,EAAE,EAAE,cAAc,EAAE,yFAAyF,CAAC,CAChH;IAAA,gDACQ,IAAI;IAAA,iDACH,IAAI;IAAA,mDACF,IAAI;IAAA,kDACL,IAAI;EAEkC;EAEjD,MAAMC,MAAM,CACV,CAACF,IAAI,EAAEG,OAAO,CAAmB,EACjC;IACEC,IAAI,GAAG,KAAK;IACZC,UAAU,GAAG,KAAK;IAClBC,QAAQ,GAAG,KAAK;IAChBC,WAAW,GAAG;EAQhB,CAAC,EACgB;IACjB,IAAIA,WAAW,IAAI,CAACJ,OAAO,EAAE;MAC3B,MAAM,KAAIK,oBAAQ,EAAE,2DAA0D,CAAC;IACjF;IACA,MAAM;MAAEC,SAAS;MAAEC,gBAAgB;MAAEC;IAAY,CAAC,GAAG,MAAM,IAAI,CAACZ,UAAU,CAACa,cAAc,CAACZ,IAAI,EAAE;MAC9FI,IAAI;MACJC,UAAU;MACVC,QAAQ;MACRH,OAAO;MACPI;IACF,CAAC,CAAC;IAEF,MAAMM,WAAW,GAAGC,gBAAK,CAACC,KAAK,CAAE,uBAAsBN,SAAS,CAACO,MAAO,oBAAmBhB,IAAK,UAAS,CAAC;IAC1G,MAAMiB,YAAY,GAAGR,SAAS,CAACO,MAAM,GAAI,GAAEH,WAAY,KAAIJ,SAAS,CAACS,IAAI,CAAC,IAAI,CAAE,EAAC,GAAG,EAAE;IAEtF,MAAMC,cAAc,GAAGL,gBAAK,CAACM,IAAI,CAC9B,iBAAgBV,gBAAgB,CAACM,MAAO,+DAA8D,CACxG;IACD,MAAMK,eAAe,GAAGX,gBAAgB,CAACM,MAAM,GAAI,KAAIG,cAAe,KAAIT,gBAAgB,CAACQ,IAAI,CAAC,IAAI,CAAE,EAAC,GAAG,EAAE;IAE5G,MAAMI,aAAa,GAAGR,gBAAK,CAACC,KAAK,CAAE,yBAAwBJ,WAAW,CAACK,MAAO,aAAY,CAAC;IAC3F,MAAMO,cAAc,GAAGZ,WAAW,CAACK,MAAM,GAAI,KAAIM,aAAc,KAAIX,WAAW,CAACO,IAAI,CAAC,IAAI,CAAE,EAAC,GAAG,EAAE;IAEhG,OAAOD,YAAY,GAAGI,eAAe,GAAGE,cAAc;EACxD;AACF;AAAC"}