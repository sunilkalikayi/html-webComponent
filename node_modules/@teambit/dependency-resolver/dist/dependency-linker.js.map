{"version":3,"names":["DEFAULT_LINKING_OPTIONS","legacyLink","rewire","linkTeambitBit","linkCoreAspects","linkDepsResolvedFromEnv","linkNestedDepsInNM","DependencyLinker","constructor","dependencyResolver","aspectLoader","componentAspect","envs","logger","rootDir","linkingOptions","link","rootPolicy","componentDirectoryMap","options","setStatusLine","debug","omit","result","finalRootDir","linkingOpts","Object","assign","RootDirNotDefined","linkToDir","components","toArray","map","component","linkToDirResults","bitIds","id","_legacy","consumer","Error","legacyResults","legacyLinkResults","linksResults","legacyLinkCodemodResults","codemodResults","resolvedFromEnvLinks","nestedDepsInNmLinks","addSymlinkFromComponentDirNMToWorkspaceDirNM","componentIds","_dir","comp","push","undefined","linkCoreAspectsAndLegacy","consoleSuccess","componentIdsWithoutVersions","toString","ignoreVersion","isBitRepoWorkspace","bitLink","linkBitAspectIfNotExist","path","join","teambitBitLink","hasLocalInstallation","coreAspectsLinks","linkNonExistingCoreAspects","teambitLegacyLink","linkTeambitLegacy","harmonyLink","linkHarmony","targetDir","results","componentPackageName","componentIdToPackageName","state","_consumer","componentId","linksDetail","from","to","forEach","createSymlinkOrCopy","rootNodeModules","getPackagesFoldersToLink","dir","parent","folders","fs","readdirSync","withFileTypes","filter","dirent","name","startsWith","isDirectory","isSymbolicLink","dirPath","moduleName","moduleNameToResolve","isBuiltinModule","resolvedModuleFrom","resolveModuleFromDir","origPath","resolveModuleDirFromFile","flatten","linksOfAllComponents","compDirNM","existsSync","innerNMofComponentInNM","isPathSymlink","packagesFoldersToLink","ensureDirSync","oneComponentLinks","folderEntry","linkTarget","linkSrc","linkDetail","linkTargetParent","resolve","relativeSrc","relative","symlink","Symlink","info","write","filteredLinks","compact","componentsNeedLinks","componentsNeedLinksP","policy","getPolicy","resolvedFromEnv","getResolvedFromEnv","length","env","getEnv","componentNeedLink","Promise","all","envsStringIds","obj","uniqEnvIds","uniq","host","getHost","resolvedEnvIds","resolveMultipleComponentIds","resolvedAspects","resolveAspects","resolvedAspectsIndex","reduce","acc","curr","getId","allLinksP","entry","oneComponentLinksP","entries","depEntry","dependencyId","envDir","aspectPath","resolvedModule","console","removeSync","depsLinkedToEnvResult","mainAspect","mainAspectId","existing","find","linkBit","aspectId","packageName","MainAspectNotLinkable","target","shouldSymlink","removeSymlinkTarget","src","ensureDir","dirname","coreAspectsIds","getCoreAspectIds","coreAspectsIdsWithoutMain","linkCoreAspect","getCoreAspectName","getCoreAspectPackageName","filtered","mainAspectPath","aspectDir","isAspectDirExist","pathExistsSync","getAspectDir","module","require","err","CoreAspectLinkError","targetPath","targetStat","lstatSync","e","linkNonAspectCorePackages","skipExisting","distDir","isTargetExisting","isDistDirExist","newDir","getDistDirForDevEnv","resolvedPath","NonAspectCorePackageLinkError","moduleDirectory","includes","nmDir","__dirname","substring","indexOf","paths","BitError","fromDir","moduleId","silent","resolveFrom","resolvedModulePath","NM","slice","lastIndexOf","start","end","split","basename","versionStr","head","folderPath","stat"],"sources":["dependency-linker.ts"],"sourcesContent":["import isBuiltinModule from 'is-builtin-module';\nimport path from 'path';\nimport { uniq, compact, flatten, head, omit } from 'lodash';\nimport { Stats } from 'fs';\nimport fs from 'fs-extra';\nimport resolveFrom from 'resolve-from';\nimport { link as legacyLink } from '@teambit/legacy/dist/api/consumer/lib/link';\nimport { ComponentMap, Component, ComponentID, ComponentMain } from '@teambit/component';\nimport { Logger } from '@teambit/logger';\nimport { PathAbsolute } from '@teambit/legacy/dist/utils/path';\nimport { BitError } from '@teambit/bit-error';\nimport { createSymlinkOrCopy } from '@teambit/legacy/dist/utils';\nimport { LinksResult as LegacyLinksResult } from '@teambit/legacy/dist/links/node-modules-linker';\nimport { CodemodResult } from '@teambit/legacy/dist/consumer/component-ops/codemod-components';\nimport componentIdToPackageName from '@teambit/legacy/dist/utils/bit/component-id-to-package-name';\nimport Symlink from '@teambit/legacy/dist/links/symlink';\nimport { Consumer } from '@teambit/legacy/dist/consumer';\nimport { EnvsMain } from '@teambit/envs';\nimport { AspectLoaderMain, getCoreAspectName, getCoreAspectPackageName, getAspectDir } from '@teambit/aspect-loader';\nimport {\n  MainAspectNotLinkable,\n  RootDirNotDefined,\n  CoreAspectLinkError,\n  NonAspectCorePackageLinkError,\n} from './exceptions';\nimport { WorkspacePolicy } from './policy';\nimport { DependencyResolverMain } from './dependency-resolver.main.runtime';\n\nexport type LinkingOptions = {\n  rewire?: boolean;\n  /**\n   * Whether to create link to @teambit/bit in the root node modules\n   */\n  linkTeambitBit?: boolean;\n  /**\n   * Whether to create links in the root dir node modules to all core aspects\n   */\n  linkCoreAspects?: boolean;\n\n  linkNestedDepsInNM?: boolean;\n\n  /**\n   * link to another project, so that project could use components from this workspace.\n   * similar to npm/yarn link\n   */\n  linkToDir?: string;\n\n  /**\n   * whether link should import objects before linking\n   */\n  fetchObject?: boolean;\n\n  /**\n   * make sure to provide the consumer\n   */\n  legacyLink?: boolean;\n\n  /**\n   * consumer is required for the legacyLink\n   */\n  consumer?: Consumer;\n\n  /**\n   * Link deps which should be linked to the env\n   */\n  linkDepsResolvedFromEnv?: boolean;\n};\n\nconst DEFAULT_LINKING_OPTIONS: LinkingOptions = {\n  legacyLink: true,\n  rewire: false,\n  linkTeambitBit: true,\n  linkCoreAspects: true,\n  linkDepsResolvedFromEnv: true,\n  linkNestedDepsInNM: true,\n};\n\nexport type LinkDetail = { from: string; to: string };\n\nexport type CoreAspectLinkResult = {\n  aspectId: string;\n  linkDetail: LinkDetail;\n};\n\nexport type DepsLinkedToEnvResult = {\n  componentId: string;\n  linksDetail: LinkDetail[];\n};\n\nexport type NestedNMDepsLinksResult = {\n  componentId: string;\n  linksDetail: LinkDetail[];\n};\n\nexport type LinkToDirResult = {\n  componentId: string;\n  linksDetail: LinkDetail;\n};\n\nexport type LinkResults = {\n  legacyLinkResults?: LegacyLinksResult[];\n  legacyLinkCodemodResults?: CodemodResult[];\n  teambitBitLink?: CoreAspectLinkResult;\n  coreAspectsLinks?: CoreAspectLinkResult[];\n  harmonyLink?: LinkDetail;\n  teambitLegacyLink?: LinkDetail;\n  resolvedFromEnvLinks?: DepsLinkedToEnvResult[];\n  nestedDepsInNmLinks?: NestedNMDepsLinksResult[];\n  linkToDirResults?: LinkToDirResult[];\n};\n\ntype NestedModuleFolderEntry = {\n  moduleName: string;\n  path: string;\n  origPath?: string;\n};\n\nexport class DependencyLinker {\n  constructor(\n    private dependencyResolver: DependencyResolverMain,\n\n    private aspectLoader: AspectLoaderMain,\n\n    private componentAspect: ComponentMain,\n\n    private envs: EnvsMain,\n\n    private logger: Logger,\n\n    private rootDir?: string | PathAbsolute,\n\n    private linkingOptions?: LinkingOptions\n  ) {}\n\n  async link(\n    rootDir: string | undefined,\n    rootPolicy: WorkspacePolicy,\n    componentDirectoryMap: ComponentMap<string>,\n    options: LinkingOptions = {}\n  ): Promise<LinkResults> {\n    this.logger.setStatusLine('linking components');\n    this.logger.debug('linking components with options', omit(options, ['consumer']));\n    let result: LinkResults = {};\n    const finalRootDir = rootDir || this.rootDir;\n    const linkingOpts = Object.assign({}, DEFAULT_LINKING_OPTIONS, this.linkingOptions || {}, options || {});\n    if (!finalRootDir) {\n      throw new RootDirNotDefined();\n    }\n    if (options.linkToDir) {\n      const components = componentDirectoryMap.toArray().map(([component]) => component);\n      const linkToDirResults = await this.linkToDir(finalRootDir, options.linkToDir, components);\n      result.linkToDirResults = linkToDirResults;\n      return result;\n    }\n    if (linkingOpts.legacyLink) {\n      const bitIds = componentDirectoryMap.toArray().map(([component]) => component.id._legacy);\n      if (!linkingOpts.consumer) throw new Error(`the consumer is needed to legacy-link`);\n      const legacyResults = await legacyLink(linkingOpts.consumer, bitIds, linkingOpts.rewire ?? false);\n      result.legacyLinkResults = legacyResults.linksResults;\n      result.legacyLinkCodemodResults = legacyResults.codemodResults;\n    }\n\n    // Link deps which should be linked to the env\n    if (linkingOpts.linkDepsResolvedFromEnv) {\n      result.resolvedFromEnvLinks = await this.linkDepsResolvedFromEnv(componentDirectoryMap);\n    }\n    if (linkingOpts.linkNestedDepsInNM) {\n      result.nestedDepsInNmLinks = this.addSymlinkFromComponentDirNMToWorkspaceDirNM(\n        finalRootDir,\n        componentDirectoryMap\n      );\n    }\n\n    // We remove the version since it used in order to check if it's core aspects, and the core aspects arrived from aspect loader without versions\n    const componentIds: ComponentID[] = [];\n    componentDirectoryMap.map((_dir, comp) => {\n      componentIds.push(comp.id);\n      return undefined;\n    });\n    result = {\n      ...result,\n      ...(await this.linkCoreAspectsAndLegacy(rootDir, componentIds, linkingOpts)),\n    };\n    this.logger.consoleSuccess('linking components');\n    return result;\n  }\n\n  public async linkCoreAspectsAndLegacy(\n    rootDir: string | undefined,\n    componentIds: ComponentID[] = [],\n    options: Pick<LinkingOptions, 'linkTeambitBit' | 'linkCoreAspects'> = {}\n  ) {\n    const result: LinkResults = {};\n    const componentIdsWithoutVersions: string[] = [];\n    componentIds.map((id) => {\n      componentIdsWithoutVersions.push(id.toString({ ignoreVersion: true }));\n      return undefined;\n    });\n    const finalRootDir = rootDir || this.rootDir;\n    if (!finalRootDir) {\n      throw new RootDirNotDefined();\n    }\n    const linkingOpts = Object.assign({}, DEFAULT_LINKING_OPTIONS, this.linkingOptions || {}, options || {});\n    if (linkingOpts.linkTeambitBit && !this.isBitRepoWorkspace(finalRootDir)) {\n      const bitLink = await this.linkBitAspectIfNotExist(\n        path.join(finalRootDir, 'node_modules'),\n        componentIdsWithoutVersions\n      );\n      result.teambitBitLink = bitLink;\n    }\n\n    if (linkingOpts.linkCoreAspects && !this.isBitRepoWorkspace(finalRootDir)) {\n      const hasLocalInstallation = !linkingOpts.linkTeambitBit;\n      const coreAspectsLinks = await this.linkNonExistingCoreAspects(\n        path.join(finalRootDir, 'node_modules'),\n        componentIdsWithoutVersions,\n        hasLocalInstallation\n      );\n      result.coreAspectsLinks = coreAspectsLinks;\n    }\n\n    const teambitLegacyLink = this.linkTeambitLegacy(finalRootDir);\n    result.teambitLegacyLink = teambitLegacyLink;\n    const harmonyLink = this.linkHarmony(finalRootDir);\n    result.harmonyLink = harmonyLink;\n    return result;\n  }\n\n  private async linkToDir(rootDir: string, targetDir: string, components: Component[]): Promise<LinkToDirResult[]> {\n    const results: LinkToDirResult[] = components.map((component) => {\n      const componentPackageName = componentIdToPackageName(component.state._consumer);\n      return {\n        componentId: component.id.toString(),\n        linksDetail: {\n          from: path.join(rootDir, 'node_modules', componentPackageName),\n          to: path.join(targetDir, 'node_modules', componentPackageName),\n        },\n      };\n    });\n    results.forEach(({ componentId, linksDetail }) => {\n      createSymlinkOrCopy(linksDetail.from, linksDetail.to, componentId);\n    });\n\n    return results;\n  }\n\n  /**\n   * Add symlinks from the node_modules in the component's root-dir to the workspace node_modules\n   * of the component. e.g.\n   * <ws-root>/node_modules/comp1/node_modules/<dep> -> <ws-root>/components/comp1/node_modules/<dep>\n   * This is needed because the component is compiled into the dist folder at <ws-root>/node_modules/comp1/dist,\n   * so the files in the dist folder need to find the right dependencies of comp1.\n   */\n  private addSymlinkFromComponentDirNMToWorkspaceDirNM(\n    rootDir: string,\n    componentDirectoryMap: ComponentMap<string>\n  ): NestedNMDepsLinksResult[] {\n    const rootNodeModules = path.join(rootDir, 'node_modules');\n    const getPackagesFoldersToLink = (dir: string, parent?: string): NestedModuleFolderEntry[] => {\n      const folders = fs\n        .readdirSync(dir, { withFileTypes: true })\n        .filter((dirent) => {\n          if (dirent.name.startsWith('.')) {\n            return false;\n          }\n          return dirent.isDirectory() || dirent.isSymbolicLink();\n        })\n        .map((dirent) => {\n          const dirPath = path.join(dir, dirent.name);\n          const moduleName = parent ? `${parent}/${dirent.name}` : dirent.name;\n          // If we have a folder with a name of built in module (like events)\n          // the resolve from will resolve it from the core, so it will return something like 'events'\n          // instead of the path.\n          // adding a '/' at the end solve this\n          const moduleNameToResolve = isBuiltinModule(moduleName) ? `${moduleName}/` : moduleName;\n          // This is a scoped package, need to go inside\n          if (dirent.name.startsWith('@')) {\n            return getPackagesFoldersToLink(dirPath, dirent.name);\n          }\n\n          if (dirent.isSymbolicLink()) {\n            const resolvedModuleFrom = resolveModuleFromDir(dir, moduleNameToResolve);\n            if (!resolvedModuleFrom) {\n              return {\n                moduleName,\n                path: dirPath,\n              };\n            }\n            return {\n              origPath: dirPath,\n              moduleName,\n              path: resolveModuleDirFromFile(resolvedModuleFrom, moduleName),\n            };\n          }\n          return {\n            moduleName,\n            path: dirPath,\n          };\n        });\n      return flatten(folders);\n    };\n    const linksOfAllComponents = componentDirectoryMap.toArray().map(([component, dir]) => {\n      const compDirNM = path.join(dir, 'node_modules');\n      if (!fs.existsSync(compDirNM)) return undefined;\n      // TODO: support modules with scoped packages (start with @) - we need to make this logic 2 levels\n\n      const componentPackageName = componentIdToPackageName(component.state._consumer);\n      const innerNMofComponentInNM = path.join(rootNodeModules, componentPackageName);\n      // If the folder itself is a symlink, do not try to symlink inside it\n      if (isPathSymlink(innerNMofComponentInNM)) {\n        return undefined;\n      }\n      const packagesFoldersToLink: NestedModuleFolderEntry[] = getPackagesFoldersToLink(compDirNM);\n      fs.ensureDirSync(innerNMofComponentInNM);\n\n      const oneComponentLinks: LinkDetail[] = packagesFoldersToLink.map((folderEntry: NestedModuleFolderEntry) => {\n        const linkTarget = path.join(innerNMofComponentInNM, 'node_modules', folderEntry?.moduleName);\n        const linkSrc = folderEntry.path;\n        // This works as well, consider using it instead\n        // const linkSrc = folderEntry.origPath || folderEntry.path;\n        const origPath = folderEntry.origPath ? `(${folderEntry.origPath})` : '';\n        const linkDetail: LinkDetail = {\n          from: `${linkSrc} ${origPath}`,\n          to: linkTarget,\n        };\n        const linkTargetParent = path.resolve(linkTarget, '..');\n        const relativeSrc = path.relative(linkTargetParent, linkSrc);\n        const symlink = new Symlink(relativeSrc, linkTarget, component.id._legacy, false);\n        this.logger.info(\n          `linking nested dependency ${folderEntry.moduleName} for component ${component}. link src: ${linkSrc} link target: ${linkTarget}`\n        );\n        symlink.write();\n        return linkDetail;\n      });\n\n      const filteredLinks = compact(oneComponentLinks);\n      return {\n        componentId: component.id.toString(),\n        linksDetail: filteredLinks,\n      };\n    });\n    const filteredLinks = compact(linksOfAllComponents);\n    return filteredLinks;\n  }\n\n  private async linkDepsResolvedFromEnv(\n    componentDirectoryMap: ComponentMap<string>\n  ): Promise<Array<DepsLinkedToEnvResult>> {\n    const componentsNeedLinks: {\n      component: Component;\n      dir: string;\n      env;\n      resolvedFromEnv;\n      envId?: string;\n      envDir?: string;\n    }[] = [];\n\n    const componentsNeedLinksP = componentDirectoryMap.toArray().map(async ([component, dir]) => {\n      const policy = await this.dependencyResolver.getPolicy(component);\n      const resolvedFromEnv = policy.getResolvedFromEnv();\n      // Nothing should be resolved from env, do nothing\n      if (!resolvedFromEnv.length) {\n        return;\n      }\n      const env = this.envs.getEnv(component);\n      const componentNeedLink = {\n        component,\n        dir,\n        env,\n        resolvedFromEnv,\n      };\n      componentsNeedLinks.push(componentNeedLink);\n    });\n\n    await Promise.all(componentsNeedLinksP);\n    // Stop if there are not components needs to be linked\n    if (!componentsNeedLinks || !componentsNeedLinks.length) return [];\n    const envsStringIds = componentsNeedLinks.map((obj) => obj.env.id);\n    const uniqEnvIds = uniq(envsStringIds);\n    const host = this.componentAspect.getHost();\n    const resolvedEnvIds = await host.resolveMultipleComponentIds(uniqEnvIds);\n    const resolvedAspects = await host.resolveAspects(undefined, resolvedEnvIds);\n    const resolvedAspectsIndex = resolvedAspects.reduce((acc, curr) => {\n      if (curr.getId) {\n        acc[curr.getId] = curr;\n      }\n      return acc;\n    }, {});\n    const allLinksP = componentsNeedLinks.map(async (entry) => {\n      const oneComponentLinksP: Array<LinkDetail | undefined> = entry.resolvedFromEnv.entries.map(async (depEntry) => {\n        const linkTarget = path.join(entry.dir, 'node_modules', depEntry.dependencyId);\n        const envDir = resolvedAspectsIndex[entry.env.id].aspectPath;\n        const resolvedModule = resolveModuleFromDir(envDir, depEntry.dependencyId);\n        if (!resolvedModule) {\n          this.logger.console(`could not resolve ${depEntry.dependencyId} from env directory ${envDir}`);\n          return undefined;\n        }\n        const linkSrc = resolveModuleDirFromFile(resolvedModule, depEntry.dependencyId);\n        const linkDetail: LinkDetail = {\n          from: linkSrc,\n          to: linkTarget,\n        };\n        fs.removeSync(linkTarget);\n        this.logger.info(\n          `linking dependency ${depEntry.dependencyId} from env directory ${envDir}. link src: ${linkSrc} link target: ${linkTarget}`\n        );\n\n        createSymlinkOrCopy(linkSrc, linkTarget);\n        return linkDetail;\n      });\n      const oneComponentLinks = await Promise.all(oneComponentLinksP);\n      const filteredLinks = compact(oneComponentLinks);\n      const depsLinkedToEnvResult: DepsLinkedToEnvResult = {\n        componentId: entry.component.id.toString(),\n        linksDetail: filteredLinks,\n      };\n      return depsLinkedToEnvResult;\n    });\n    return Promise.all(allLinksP);\n  }\n\n  private async linkBitAspectIfNotExist(\n    dir: string,\n    componentIds: string[]\n  ): Promise<CoreAspectLinkResult | undefined> {\n    if (!this.aspectLoader.mainAspect) return undefined;\n    const mainAspectId = this.aspectLoader.mainAspect.id;\n    const existing = componentIds.find((id) => {\n      return id === mainAspectId;\n    });\n\n    if (existing) {\n      return undefined;\n    }\n    const linkDetail = await this.linkBit(dir);\n    if (!linkDetail) return undefined;\n    return {\n      aspectId: mainAspectId,\n      linkDetail,\n    };\n  }\n\n  async linkBit(dir: string): Promise<LinkDetail | undefined> {\n    if (!this.aspectLoader.mainAspect.packageName) {\n      throw new MainAspectNotLinkable();\n    }\n    const target = path.join(dir, this.aspectLoader.mainAspect.packageName);\n    const shouldSymlink = this.removeSymlinkTarget(target);\n    if (!shouldSymlink) return undefined;\n    const src = this.aspectLoader.mainAspect.path;\n    await fs.ensureDir(path.dirname(target));\n    createSymlinkOrCopy(src, target);\n    return { from: src, to: target };\n  }\n\n  async linkCoreAspects(dir: string): Promise<Array<CoreAspectLinkResult | undefined>> {\n    const coreAspectsIds = this.aspectLoader.getCoreAspectIds();\n    const coreAspectsIdsWithoutMain = coreAspectsIds.filter((id) => id !== this.aspectLoader.mainAspect.id);\n    return coreAspectsIdsWithoutMain.map((id) => {\n      return this.linkCoreAspect(dir, id, getCoreAspectName(id), getCoreAspectPackageName(id));\n    });\n  }\n\n  private async linkNonExistingCoreAspects(\n    dir: string,\n    componentIds: string[],\n    hasLocalInstallation = false\n  ): Promise<CoreAspectLinkResult[]> {\n    const coreAspectsIds = this.aspectLoader.getCoreAspectIds();\n    const filtered = coreAspectsIds.filter((aspectId) => {\n      // Remove bit aspect\n      if (aspectId === this.aspectLoader.mainAspect?.id) {\n        return false;\n      }\n      // TODO: use the aspect id once default scope is resolved and the component dir map has the id with scope\n      const name = getCoreAspectName(aspectId);\n      const existing = componentIds.find((componentId) => {\n        return componentId === name || componentId === aspectId;\n      });\n      if (existing) {\n        return false;\n      }\n      return true;\n    });\n\n    this.logger.debug(`linkNonExistingCoreAspects: linking the following core aspects ${filtered.join()}`);\n\n    const results = filtered.map((id) => {\n      return this.linkCoreAspect(dir, id, getCoreAspectName(id), getCoreAspectPackageName(id), hasLocalInstallation);\n    });\n    return compact(results);\n  }\n\n  private isBitRepoWorkspace(dir: string) {\n    // A special condition to not link core aspects in bit workspace itself\n    if (this.aspectLoader.mainAspect?.path.startsWith(dir)) {\n      return true;\n    }\n    return false;\n  }\n\n  private linkCoreAspect(\n    dir: string,\n    id: string,\n    name: string,\n    packageName: string,\n    hasLocalInstallation = false\n  ): CoreAspectLinkResult | undefined {\n    if (!this.aspectLoader.mainAspect) return undefined;\n    if (!this.aspectLoader.mainAspect.packageName) {\n      throw new MainAspectNotLinkable();\n    }\n\n    const mainAspectPath = path.join(dir, this.aspectLoader.mainAspect.packageName);\n    let aspectDir = path.join(mainAspectPath, 'dist', name);\n    const target = path.join(dir, packageName);\n    const shouldSymlink = this.removeSymlinkTarget(target, hasLocalInstallation);\n    if (!shouldSymlink) return undefined;\n    const isAspectDirExist = fs.pathExistsSync(aspectDir);\n    if (!isAspectDirExist) {\n      this.logger.debug(`linkCoreAspect: aspectDir ${aspectDir} does not exist, linking it to ${target}`);\n      aspectDir = getAspectDir(id);\n      createSymlinkOrCopy(aspectDir, target);\n      return { aspectId: id, linkDetail: { from: aspectDir, to: target } };\n    }\n\n    try {\n      // eslint-disable-next-line global-require, import/no-dynamic-require\n      const module = require(aspectDir);\n      const aspectPath = path.resolve(path.join(module.path, '..', '..'));\n      // in this case we want the symlinks to be relative links\n      // Using the fs module to make sure it is relative to the target\n      if (fs.existsSync(target)) {\n        this.logger.debug(`linkCoreAspect: aspectPath ${aspectPath} skip linking`);\n        return undefined;\n      }\n      this.logger.debug(`linkCoreAspect: linking aspectPath ${aspectPath} to ${target}`);\n      createSymlinkOrCopy(aspectPath, target);\n      return { aspectId: id, linkDetail: { from: aspectPath, to: target } };\n    } catch (err: any) {\n      throw new CoreAspectLinkError(id, err);\n    }\n  }\n\n  /**\n   * returns true if it's safe to symlink it later.\n   */\n  private removeSymlinkTarget(targetPath: string, hasLocalInstallation = false): boolean {\n    // TODO: change to fs.lstatSync(dest, {throwIfNoEntry: false});\n    // TODO: this requires to upgrade node to v15.3.0 to have the throwIfNoEntry property (maybe upgrade fs-extra will work as well)\n    // TODO: we don't use fs.pathExistsSync since it will return false in case the dest is a symlink which will result error on write\n    let targetStat: Stats | undefined;\n    try {\n      targetStat = fs.lstatSync(targetPath);\n      // eslint-disable-next-line no-empty\n    } catch (e: any) {}\n    if (targetStat && !hasLocalInstallation) {\n      // Do not override links created by other means\n      if (!targetStat.isSymbolicLink()) {\n        this.logger.debug(`removing link target, target ${targetPath} already exist. skipping it`);\n        return false;\n      }\n      // it's a symlink, remove is as it might point to an older version\n      fs.removeSync(targetPath);\n      return true;\n    }\n    return true;\n  }\n\n  private linkNonAspectCorePackages(\n    rootDir: string,\n    name: string,\n    packageName = `@teambit/${name}`,\n    skipExisting = false\n  ): LinkDetail | undefined {\n    if (!this.aspectLoader.mainAspect) return undefined;\n    if (!this.aspectLoader.mainAspect.packageName) {\n      throw new MainAspectNotLinkable();\n    }\n    const mainAspectPath = path.join(rootDir, this.aspectLoader.mainAspect.packageName);\n    const distDir = path.join(mainAspectPath, 'dist', name);\n\n    const target = path.join(rootDir, 'node_modules', packageName);\n    const isTargetExisting = fs.pathExistsSync(target);\n    if (skipExisting && isTargetExisting) {\n      return undefined;\n    }\n    const shouldSymlink = this.removeSymlinkTarget(target);\n    if (!shouldSymlink) return undefined;\n    const isDistDirExist = fs.pathExistsSync(distDir);\n    if (!isDistDirExist) {\n      const newDir = getDistDirForDevEnv(packageName);\n      createSymlinkOrCopy(newDir, target);\n      return { from: newDir, to: target };\n    }\n\n    try {\n      // eslint-disable-next-line global-require, import/no-dynamic-require\n      const module = require(distDir);\n      const resolvedPath = path.resolve(path.join(module.path, '..', '..'));\n      // in this case we want the symlinks to be relative links\n      // Using the fs module to make sure it is relative to the target\n      if (fs.existsSync(target)) {\n        return undefined;\n      }\n      createSymlinkOrCopy(resolvedPath, target);\n      return { from: resolvedPath, to: target };\n    } catch (err: any) {\n      throw new NonAspectCorePackageLinkError(err, packageName);\n    }\n  }\n\n  private linkHarmony(rootDir: string): LinkDetail | undefined {\n    const name = 'harmony';\n    return this.linkNonAspectCorePackages(rootDir, name);\n  }\n\n  private linkTeambitLegacy(rootDir: string): LinkDetail | undefined {\n    const name = 'legacy';\n    return this.linkNonAspectCorePackages(rootDir, name);\n  }\n}\n\n/**\n * When running dev env (bd) we need to get the harmony/legacy folder from the node_modules of the clone\n */\nfunction getDistDirForDevEnv(packageName: string): string {\n  let moduleDirectory = require.resolve(packageName);\n  let dirPath;\n  if (moduleDirectory.includes(packageName)) {\n    dirPath = path.join(moduleDirectory, '../..'); // to remove the \"index.js\" at the end\n  } else {\n    // This is usually required for the @teambit/legacy, as we re inside the nm so we can't find it in the other way\n    const nmDir = __dirname.substring(0, __dirname.indexOf('@teambit'));\n    dirPath = path.join(nmDir, packageName);\n    moduleDirectory = require.resolve(packageName, { paths: [nmDir] });\n  }\n  if (!fs.existsSync(dirPath)) {\n    throw new BitError(`unable to find ${packageName} in ${dirPath}`);\n  }\n\n  return dirPath;\n}\n\n// TODO: extract to new component\nfunction resolveModuleFromDir(fromDir: string, moduleId: string, silent = true): string | undefined {\n  if (silent) {\n    return resolveFrom.silent(fromDir, moduleId);\n  }\n  return resolveFrom(fromDir, moduleId);\n}\n\n// TODO: extract to new component\nfunction resolveModuleDirFromFile(resolvedModulePath: string, moduleId: string): string {\n  const NM = 'node_modules';\n  if (resolvedModulePath.includes(NM)) {\n    return path.join(resolvedModulePath.slice(0, resolvedModulePath.lastIndexOf(NM) + NM.length), moduleId);\n  }\n\n  const [start, end] = resolvedModulePath.split('@');\n  if (!end) return path.basename(resolvedModulePath);\n  const versionStr = head(end.split('/'));\n  return `${start}@${versionStr}`;\n}\n\nfunction isPathSymlink(folderPath: string): boolean | undefined {\n  // TODO: change to fs.lstatSync(dest, {throwIfNoEntry: false}); once upgrade fs-extra\n  try {\n    const stat = fs.lstatSync(folderPath);\n    return stat.isSymbolicLink();\n  } catch (e: any) {\n    return undefined;\n  }\n}\n"],"mappings":"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"}