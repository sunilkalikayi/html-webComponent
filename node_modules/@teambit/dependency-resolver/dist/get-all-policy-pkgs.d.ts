import { ManifestDependenciesKeysNames } from './manifest';
import { VariantPolicyConfigObject, WorkspacePolicy } from './policy';
import { DependencyLifecycleType } from './dependencies/dependency';
declare type CurrentPkg = {
    name: string;
    currentRange: string;
    source: 'variants' | 'component' | 'rootPolicy' | 'component-model';
    variantPattern?: string | null;
    componentId?: string;
    targetField: ManifestDependenciesKeysNames;
};
export declare type OutdatedPkg = CurrentPkg & {
    latestRange: string;
};
export declare type ComponentModelVersion = {
    name: string;
    version: string;
    componentId: string;
    lifecycleType: DependencyLifecycleType;
};
/**
 * Get packages from root policy, variants, and component config files (component.json files).
 */
export declare function getAllPolicyPkgs({ rootPolicy, variantPoliciesByPatterns, componentPoliciesById, componentModelVersions, }: {
    rootPolicy: WorkspacePolicy;
    variantPoliciesByPatterns: Record<string, VariantPolicyConfigObject>;
    componentPoliciesById: Record<string, VariantPolicyConfigObject>;
    componentModelVersions: ComponentModelVersion[];
}): CurrentPkg[];
export {};
