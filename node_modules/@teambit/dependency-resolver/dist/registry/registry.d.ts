export declare class Registry {
    /**
     * uri of the registry.
     */
    readonly uri: string;
    /**
     * always authenticate.
     */
    readonly alwaysAuth: boolean;
    /**
     * authentication header.
     */
    readonly authHeaderValue?: string | undefined;
    /**
     * Type of auth as it appears in the npmrc file
     * authToken
     * auth
     * user-pass
     */
    readonly originalAuthType?: string | undefined;
    /**
     * original auth value as it appears in npmrc file
     * for user/pass it will appear as user:pass
     */
    readonly originalAuthValue?: string | undefined;
    constructor(
    /**
     * uri of the registry.
     */
    uri: string, 
    /**
     * always authenticate.
     */
    alwaysAuth: boolean, 
    /**
     * authentication header.
     */
    authHeaderValue?: string | undefined, 
    /**
     * Type of auth as it appears in the npmrc file
     * authToken
     * auth
     * user-pass
     */
    originalAuthType?: string | undefined, 
    /**
     * original auth value as it appears in npmrc file
     * for user/pass it will appear as user:pass
     */
    originalAuthValue?: string | undefined);
    get token(): string | undefined;
    /**
     * Support for basic token or user/pass
     */
    get baseToken(): string | undefined;
}
