{"version":3,"names":["DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX","generateItemsFromArrays","dependentComponentNamePrefix","ranges","lifecycleTypes","size","Array","isArray","length","items","i","item","range","origin","lifecycleType","push","generateItems","numOfItems","RUNTIME_DEP_LIFECYCLE_TYPE","fill","expectAllComponentsDependenciesMapToBeEmpty","dedupedDependencies","expect","componentDependenciesMap","to","be","empty","expectComponentDependenciesMapToBeEmpty","dependentName","get","undefined","expectComponentDependenciesMapToHave","dependecyKeyName","dependencyName","dependencyVersion","comp","Error","have","property","expectRootToHave","rootDependencies","expectRootToNotHaveDependency","dependencies","not","devDependencies","peerDependencies","expectPeerIssuesToBeEmpty","issus","peerConflicts","describe","index","dependentComponentName","preservedVersion","depKeyName","KEY_NAME_BY_LIFECYCLE_TYPE","beforeEach","Map","metadata","preservedLifecycleType","set","componentItems","hoistDependencies","it","PEER_DEP_LIFECYCLE_TYPE","equal","dependencyName1","dependencyName2","items1","items2","lengthOf","packageName","conflictedComponents","DEV_DEP_LIFECYCLE_TYPE"],"sources":["hoist-dependencies.spec.ts"],"sourcesContent":["import { expect } from 'chai';\n\nimport {\n  DEV_DEP_LIFECYCLE_TYPE,\n  KEY_NAME_BY_LIFECYCLE_TYPE,\n  PEER_DEP_LIFECYCLE_TYPE,\n  RUNTIME_DEP_LIFECYCLE_TYPE,\n} from '../../dependencies/constants';\nimport { DependencyLifecycleType, SemverVersion } from '../../dependencies';\nimport { DedupedDependencies } from './dedupe-dependencies';\nimport { hoistDependencies } from './hoist-dependencies';\nimport { PackageNameIndex, PackageNameIndexComponentItem, PackageNameIndexItemMetadata } from './index-by-dep-id';\n\nconst DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX = 'dependent-component';\n\nconst generateItemsFromArrays = (\n  dependentComponentNamePrefix = 'dependent-component',\n  ranges: SemverVersion | SemverVersion[],\n  lifecycleTypes: DependencyLifecycleType | DependencyLifecycleType[]\n): PackageNameIndexComponentItem[] => {\n  let size = 1;\n  if (Array.isArray(ranges)) {\n    size = ranges.length;\n  } else if (Array.isArray(lifecycleTypes)) {\n    size = lifecycleTypes.length;\n  }\n  const items: PackageNameIndexComponentItem[] = [];\n  for (let i = 0; i <= size - 1; i += 1) {\n    const item: PackageNameIndexComponentItem = {\n      range: Array.isArray(ranges) ? ranges[i] : ranges,\n      origin: `${dependentComponentNamePrefix}-${i}`,\n      lifecycleType: Array.isArray(lifecycleTypes) ? lifecycleTypes[i] : lifecycleTypes,\n    };\n    items.push(item);\n  }\n  return items;\n};\n\nconst generateItems = (\n  numOfItems = 3,\n  dependentComponentNamePrefix = DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX,\n  range: SemverVersion = '1.0.0',\n  lifecycleType: DependencyLifecycleType = RUNTIME_DEP_LIFECYCLE_TYPE\n): PackageNameIndexComponentItem[] => {\n  const ranges = Array(numOfItems).fill(range);\n  const lifecycleTypes = Array(numOfItems).fill(lifecycleType);\n  return generateItemsFromArrays(dependentComponentNamePrefix, ranges, lifecycleTypes);\n};\n\nconst expectAllComponentsDependenciesMapToBeEmpty = (dedupedDependencies: DedupedDependencies) => {\n  expect(dedupedDependencies.componentDependenciesMap).to.be.empty;\n};\n\nconst expectComponentDependenciesMapToBeEmpty = (dependentName: string, dedupedDependencies: DedupedDependencies) => {\n  expect(dedupedDependencies.componentDependenciesMap.get(dependentName)).to.be.undefined;\n};\n\nconst expectComponentDependenciesMapToHave = (\n  dedupedDependencies: DedupedDependencies,\n  dependentName: string,\n  dependecyKeyName: string,\n  dependencyName: string,\n  dependencyVersion: SemverVersion\n) => {\n  const comp = dedupedDependencies.componentDependenciesMap.get(dependentName);\n  if (!comp) {\n    throw new Error(`component ${dependentName} does not found on dedupedDependencies components map`);\n  }\n  expect(comp[dependecyKeyName]).to.have.property(dependencyName, dependencyVersion);\n};\n\nconst expectRootToHave = (\n  dedupedDependencies: DedupedDependencies,\n  dependecyKeyName: string,\n  dependencyName: string,\n  dependencyVersion: SemverVersion\n) => {\n  expect(dedupedDependencies.rootDependencies[dependecyKeyName]).to.have.property(dependencyName, dependencyVersion);\n};\n\nconst expectRootToNotHaveDependency = (dedupedDependencies: DedupedDependencies, dependencyName: string) => {\n  expect(dedupedDependencies.rootDependencies.dependencies).to.not.have.property(dependencyName);\n  expect(dedupedDependencies.rootDependencies.devDependencies).to.not.have.property(dependencyName);\n  expect(dedupedDependencies.rootDependencies.peerDependencies).to.not.have.property(dependencyName);\n};\n\nconst expectPeerIssuesToBeEmpty = (dedupedDependencies: DedupedDependencies) => {\n  expect(dedupedDependencies.issus?.peerConflicts).to.be.empty;\n};\n\ndescribe('hoistDependencies', () => {\n  let index: PackageNameIndex;\n  const dependentComponentName = 'dependent-component';\n  let dedupedDependencies: DedupedDependencies;\n  describe('preserved dependency', () => {\n    describe('some component versions are intersect and some not', () => {\n      const dependencyName = 'package-dependency';\n      const preservedVersion = '^4.0.0';\n      const depKeyName = KEY_NAME_BY_LIFECYCLE_TYPE[RUNTIME_DEP_LIFECYCLE_TYPE];\n      beforeEach(() => {\n        index = new Map();\n        const metadata: PackageNameIndexItemMetadata = {\n          preservedLifecycleType: RUNTIME_DEP_LIFECYCLE_TYPE,\n          preservedVersion,\n        };\n        const items = generateItemsFromArrays(undefined, ['4.0.1', '5.0.0'], RUNTIME_DEP_LIFECYCLE_TYPE);\n        index.set(dependencyName, { metadata, componentItems: items });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('the root manifest should have the preserved version', () => {\n        expectRootToHave(dedupedDependencies, depKeyName, dependencyName, preservedVersion);\n      });\n\n      it('the component dependencies which intersects with the preserved should be empty', () => {\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-0`, dedupedDependencies);\n      });\n      it('the component dependencies which not intersects with the preserved to have a proper version', () => {\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-1`,\n          depKeyName,\n          dependencyName,\n          '5.0.0'\n        );\n      });\n    });\n  });\n\n  describe('dependency that appears only once', () => {\n    describe('item is exact version', () => {\n      const dependencyName = 'package-dependency';\n      const dependencyVersion = '1.0.0';\n      beforeEach(() => {\n        index = new Map();\n        const item: PackageNameIndexComponentItem = {\n          range: dependencyVersion,\n          origin: dependentComponentName,\n          lifecycleType: RUNTIME_DEP_LIFECYCLE_TYPE,\n        };\n        index.set(dependencyName, { metadata: {}, componentItems: [item] });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('the component dependencies should be empty', () => {\n        expectAllComponentsDependenciesMapToBeEmpty(dedupedDependencies);\n      });\n      it('should hoist the dependency to the root', () => {\n        expectRootToHave(\n          dedupedDependencies,\n          KEY_NAME_BY_LIFECYCLE_TYPE[RUNTIME_DEP_LIFECYCLE_TYPE],\n          dependencyName,\n          dependencyVersion\n        );\n      });\n    });\n    describe('item is range', () => {\n      const dependencyName = 'package-dependency';\n      const dependencyVersion = '^1.0.0';\n      beforeEach(() => {\n        index = new Map();\n        const item: PackageNameIndexComponentItem = {\n          range: dependencyVersion,\n          origin: dependentComponentName,\n          lifecycleType: RUNTIME_DEP_LIFECYCLE_TYPE,\n        };\n        index.set(dependencyName, { metadata: {}, componentItems: [item] });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('the component dependencies should be empty', () => {\n        expectAllComponentsDependenciesMapToBeEmpty(dedupedDependencies);\n      });\n      it('should hoist the dependency to the root', () => {\n        expectRootToHave(\n          dedupedDependencies,\n          KEY_NAME_BY_LIFECYCLE_TYPE[RUNTIME_DEP_LIFECYCLE_TYPE],\n          dependencyName,\n          dependencyVersion\n        );\n      });\n    });\n    describe('item is peer dependency with one version only', () => {\n      const dependencyName = 'package-dependency';\n      const dependencyVersion = '1.0.0';\n      const depKeyName = KEY_NAME_BY_LIFECYCLE_TYPE[PEER_DEP_LIFECYCLE_TYPE];\n\n      beforeEach(() => {\n        index = new Map();\n        const item: PackageNameIndexComponentItem = {\n          range: dependencyVersion,\n          origin: dependentComponentName,\n          lifecycleType: PEER_DEP_LIFECYCLE_TYPE,\n        };\n        index.set(dependencyName, { metadata: {}, componentItems: [item] });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('the component dependencies should be empty', () => {\n        expectAllComponentsDependenciesMapToBeEmpty(dedupedDependencies);\n      });\n      it('should not hoist the dependency to the root', () => {\n        // Behavior was changed to hoist peers as well in case they are appear only with one version\n        // expectRootToNotHaveDependency(dedupedDependencies, dependencyName);\n        expectRootToHave(dedupedDependencies, depKeyName, dependencyName, '1.0.0');\n      });\n    });\n  });\n\n  describe('dependency that appears only as peer (in many components) with same version', () => {\n    const dependencyName = 'package-dependency';\n    const depKeyName = KEY_NAME_BY_LIFECYCLE_TYPE[PEER_DEP_LIFECYCLE_TYPE];\n\n    describe('when there are no conflicts between versions', () => {\n      beforeEach(() => {\n        index = new Map();\n        const items = generateItems(3, undefined, undefined, PEER_DEP_LIFECYCLE_TYPE);\n        index.set(dependencyName, { metadata: {}, componentItems: items });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('should have the peers in each component', () => {\n        expect(dedupedDependencies.componentDependenciesMap.size).to.equal(0);\n      });\n      it('should not hoist the dependency to the root', () => {\n        expectRootToHave(dedupedDependencies, depKeyName, dependencyName, '1.0.0');\n      });\n      it('should not report about peer conflicts', () => {\n        expectPeerIssuesToBeEmpty(dedupedDependencies);\n      });\n    });\n    describe('when there conflicts between versions for few dependencies', () => {\n      const dependencyName1 = 'package-dependency-1';\n      const dependencyName2 = 'package-dependency-2';\n\n      beforeEach(() => {\n        index = new Map();\n        const items1 = generateItemsFromArrays(undefined, ['4.0.0', '5.0.0'], PEER_DEP_LIFECYCLE_TYPE);\n        const items2 = generateItemsFromArrays(undefined, ['^4.0.0', '^5.0.0'], PEER_DEP_LIFECYCLE_TYPE);\n        index.set(dependencyName1, { metadata: {}, componentItems: items1 });\n        index.set(dependencyName2, { metadata: {}, componentItems: items2 });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('should have the peers in each component', () => {\n        expect(dedupedDependencies.componentDependenciesMap.size).to.equal(2);\n      });\n      it('should not hoist the dependency to the root', () => {\n        expectRootToNotHaveDependency(dedupedDependencies, dependencyName);\n      });\n      it('should report about peer conflicts', () => {\n        expect(dedupedDependencies.issus?.peerConflicts).to.have.lengthOf(2);\n        expect(dedupedDependencies.issus?.peerConflicts[0].packageName).to.equal(dependencyName1);\n        expect(dedupedDependencies.issus?.peerConflicts[0].conflictedComponents).to.have.lengthOf(2);\n        expect(dedupedDependencies.issus?.peerConflicts[1].packageName).to.equal(dependencyName2);\n        expect(dedupedDependencies.issus?.peerConflicts[1].conflictedComponents).to.have.lengthOf(2);\n      });\n    });\n  });\n\n  describe('dependency that appears only with exact versions', () => {\n    const dependencyName = 'package-dependency';\n    const depKeyName = KEY_NAME_BY_LIFECYCLE_TYPE[DEV_DEP_LIFECYCLE_TYPE];\n    beforeEach(() => {\n      index = new Map();\n      const items = generateItemsFromArrays(\n        undefined,\n        ['4.0.0', '5.0.0', '4.0.0', '5.0.0', '4.0.1', '4.0.0'],\n        DEV_DEP_LIFECYCLE_TYPE\n      );\n      index.set(dependencyName, { metadata: {}, componentItems: items });\n      dedupedDependencies = hoistDependencies(index);\n    });\n    it('should hoist the most common version to the root', () => {\n      expectRootToHave(dedupedDependencies, depKeyName, dependencyName, '4.0.0');\n    });\n    it('should not put the most common version in the components that has it', () => {\n      expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-0`, dedupedDependencies);\n      expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-2`, dedupedDependencies);\n      expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-5`, dedupedDependencies);\n    });\n    it('should put other versions in the components', () => {\n      expectComponentDependenciesMapToHave(\n        dedupedDependencies,\n        `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-1`,\n        depKeyName,\n        dependencyName,\n        '5.0.0'\n      );\n      expectComponentDependenciesMapToHave(\n        dedupedDependencies,\n        `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-3`,\n        depKeyName,\n        dependencyName,\n        '5.0.0'\n      );\n    });\n  });\n\n  describe('dependency that appears only with ranges', () => {\n    const dependencyName = 'package-dependency';\n    const depKeyName = KEY_NAME_BY_LIFECYCLE_TYPE[DEV_DEP_LIFECYCLE_TYPE];\n    beforeEach(() => {\n      index = new Map();\n      const items = generateItemsFromArrays(\n        undefined,\n        ['^4.0.0', '^5.0.0', '^4.0.0', '^5.0.0', '^5.0.1', '^4.0.1', '^4.0.4'],\n        DEV_DEP_LIFECYCLE_TYPE\n      );\n      index.set(dependencyName, { metadata: {}, componentItems: items });\n      dedupedDependencies = hoistDependencies(index);\n    });\n    it('should hoist the best range to the root', () => {\n      expectRootToHave(dedupedDependencies, depKeyName, dependencyName, '>=4.0.4 <5.0.0');\n    });\n    it('should not put the dependency in components that matches the best range', () => {\n      expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-0`, dedupedDependencies);\n      expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-2`, dedupedDependencies);\n      expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-5`, dedupedDependencies);\n      expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-6`, dedupedDependencies);\n    });\n    it('should put other ranges in the components', () => {\n      expectComponentDependenciesMapToHave(\n        dedupedDependencies,\n        `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-1`,\n        depKeyName,\n        dependencyName,\n        '^5.0.0'\n      );\n      expectComponentDependenciesMapToHave(\n        dedupedDependencies,\n        `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-3`,\n        depKeyName,\n        dependencyName,\n        '^5.0.0'\n      );\n      expectComponentDependenciesMapToHave(\n        dedupedDependencies,\n        `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-4`,\n        depKeyName,\n        dependencyName,\n        '^5.0.1'\n      );\n    });\n  });\n\n  describe('dependency that appears with both ranges and exact versions', () => {\n    const dependencyName = 'package-dependency';\n    const depKeyName = KEY_NAME_BY_LIFECYCLE_TYPE[DEV_DEP_LIFECYCLE_TYPE];\n    describe('when there is a version which satisfy more components than the best range', () => {\n      beforeEach(() => {\n        index = new Map();\n        const items = generateItemsFromArrays(\n          undefined,\n          ['^4.0.0', '5.0.0', '5.0.0', '5.0.0', '^4.0.4'],\n          DEV_DEP_LIFECYCLE_TYPE\n        );\n        index.set(dependencyName, { metadata: {}, componentItems: items });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('should hoist the best version to the root', () => {\n        expectRootToHave(dedupedDependencies, depKeyName, dependencyName, '5.0.0');\n      });\n      it('should not put the dependency in components that matches the best version', () => {\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-1`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-2`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-3`, dedupedDependencies);\n      });\n      it('should put other ranges in the components', () => {\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-0`,\n          depKeyName,\n          dependencyName,\n          '^4.0.0'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-4`,\n          depKeyName,\n          dependencyName,\n          '^4.0.4'\n        );\n      });\n    });\n    describe('when there is a best range which satisfy more components than the most common version', () => {\n      beforeEach(() => {\n        index = new Map();\n        const items = generateItemsFromArrays(\n          undefined,\n          ['^4.0.0', '^4.0.2', '5.0.0', '5.0.0', '^4.0.4'],\n          DEV_DEP_LIFECYCLE_TYPE\n        );\n        index.set(dependencyName, { metadata: {}, componentItems: items });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('should hoist the best range to the root', () => {\n        expectRootToHave(dedupedDependencies, depKeyName, dependencyName, '>=4.0.4 <5.0.0');\n      });\n      it('should not put the dependency in components that matches the best range', () => {\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-0`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-1`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-4`, dedupedDependencies);\n      });\n      it('should put other ranges in the components', () => {\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-2`,\n          depKeyName,\n          dependencyName,\n          '5.0.0'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-3`,\n          depKeyName,\n          dependencyName,\n          '5.0.0'\n        );\n      });\n    });\n    describe('when there is a best range which is not the best alone but combine with version its the best', () => {\n      // there is best version which matches 4 components (5.0.0)\n      // there is best range which intersect 4 ranges (^4.0.5)\n      // there is range that intersects 2 components and version that match 3 components (should return this version -\n      // that practically matches 5 components. (^6.0.2(3) + 6.0.4(2))\n      beforeEach(() => {\n        index = new Map();\n        const items = generateItemsFromArrays(\n          undefined,\n          [\n            '^4.0.0',\n            '^4.0.2',\n            '5.0.0',\n            '5.0.0',\n            '^4.0.4',\n            '^4.0.5',\n            '5.0.0',\n            '5.0.0',\n            '^6.0.0',\n            '^6.0.1',\n            '^6.0.2',\n            '6.0.4',\n            '6.0.4',\n          ],\n          DEV_DEP_LIFECYCLE_TYPE\n        );\n        index.set(dependencyName, { metadata: {}, componentItems: items });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('should hoist the best range to the root', () => {\n        expectRootToHave(dedupedDependencies, depKeyName, dependencyName, '6.0.4');\n      });\n      it('should not put the dependency in components that matches the best range or the combined version', () => {\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-8`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-9`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-10`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-11`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-12`, dedupedDependencies);\n      });\n      it('should put other ranges in the components', () => {\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-0`,\n          depKeyName,\n          dependencyName,\n          '^4.0.0'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-1`,\n          depKeyName,\n          dependencyName,\n          '^4.0.2'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-2`,\n          depKeyName,\n          dependencyName,\n          '5.0.0'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-3`,\n          depKeyName,\n          dependencyName,\n          '5.0.0'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-4`,\n          depKeyName,\n          dependencyName,\n          '^4.0.4'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-5`,\n          depKeyName,\n          dependencyName,\n          '^4.0.5'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-6`,\n          depKeyName,\n          dependencyName,\n          '5.0.0'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-7`,\n          depKeyName,\n          dependencyName,\n          '5.0.0'\n        );\n      });\n    });\n  });\n});\n"],"mappings":"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"}