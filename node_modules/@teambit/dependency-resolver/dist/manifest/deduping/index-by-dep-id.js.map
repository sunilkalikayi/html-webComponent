{"version":3,"names":["indexByDepId","rootPolicy","componentDependenciesMap","hoistedDepFields","result","Map","forEach","depsObject","compPackageName","pick","forEachObjIndexed","addSpecificLifeCycleDepsToIndex","addPreservedFromRoot","index","preserved","filter","entry","value","preserve","metadata","preservedVersion","version","preservedLifecycleType","lifecycleType","setMetadataToExistingIndexItem","dependencyId","depId","existingItem","get","origin","deps","depKeyName","LIFECYCLE_TYPE_BY_KEY_NAME","addComponentDepToDepIdIndex","range","componentItem","has","item","componentItems","set","push"],"sources":["index-by-dep-id.ts"],"sourcesContent":["import forEachObjIndexed from 'ramda/src/forEachObjIndexed';\nimport pick from 'ramda/src/pick';\nimport { LIFECYCLE_TYPE_BY_KEY_NAME } from '../../dependencies/constants';\nimport { ManifestDependenciesKeysNames, DepObjectValue } from '../manifest';\nimport { DependencyLifecycleType, SemverVersion, PackageName } from '../../dependencies';\nimport { ComponentDependenciesMap } from '../workspace-manifest-factory';\nimport { WorkspacePolicy } from '../../policy';\n\nexport type PackageNameIndexItem = {\n  metadata: PackageNameIndexItemMetadata;\n  componentItems: PackageNameIndexComponentItem[];\n};\n\nexport type PackageNameIndexItemMetadata = {\n  preservedVersion?: string;\n  preservedLifecycleType?: DependencyLifecycleType;\n};\n\nexport type PackageNameIndexComponentItem = {\n  range: SemverVersion;\n  origin: PackageName;\n  lifecycleType: DependencyLifecycleType;\n};\n\nexport type PackageNameIndex = Map<PackageName, PackageNameIndexItem>;\n\n/**\n * This will get the map of dependencies for each component and will create a new index with the dependencyId (package name) as key\n * and all components / ranges as value\n * It used as a pre processing as part of the deduping process\n *\n * @param {ComponentDependenciesMap} componentDependenciesMap\n * @returns {PackageNameIndex}\n */\nexport function indexByDepId(\n  rootPolicy: WorkspacePolicy,\n  componentDependenciesMap: ComponentDependenciesMap,\n  hoistedDepFields?: ManifestDependenciesKeysNames[]\n): PackageNameIndex {\n  const result: PackageNameIndex = new Map();\n  componentDependenciesMap.forEach((depsObject, compPackageName) => {\n    if (hoistedDepFields) {\n      depsObject = pick(hoistedDepFields, depsObject);\n    }\n    forEachObjIndexed(addSpecificLifeCycleDepsToIndex(result, compPackageName), depsObject);\n  });\n  addPreservedFromRoot(result, rootPolicy);\n  return result;\n}\n\nfunction addPreservedFromRoot(index: PackageNameIndex, rootPolicy: WorkspacePolicy): void {\n  const preserved = rootPolicy.filter((entry) => !!entry.value.preserve);\n  preserved.forEach((entry) => {\n    const metadata: PackageNameIndexItemMetadata = {\n      preservedVersion: entry.value.version,\n      preservedLifecycleType: entry.lifecycleType,\n    };\n    setMetadataToExistingIndexItem(index, entry.dependencyId, metadata);\n  });\n}\n\nfunction setMetadataToExistingIndexItem(\n  index: PackageNameIndex,\n  depId: PackageName,\n  metadata: PackageNameIndexItemMetadata\n): void {\n  const existingItem = index.get(depId);\n  // only change existing items\n  if (existingItem) {\n    existingItem.metadata = metadata;\n  }\n}\n\n/**\n * Mutate the index and add all deps from specific lifecycle type to the index\n *\n * @param {PackageNameIndex} index\n * @param {PackageName} origin\n * @returns\n */\nfunction addSpecificLifeCycleDepsToIndex(index: PackageNameIndex, origin: PackageName) {\n  return (deps: DepObjectValue, depKeyName: ManifestDependenciesKeysNames) => {\n    const lifecycleType = LIFECYCLE_TYPE_BY_KEY_NAME[depKeyName] as DependencyLifecycleType;\n    forEachObjIndexed(addComponentDepToDepIdIndex(index, origin, lifecycleType), deps);\n  };\n}\n\n/**\n * Mutate the index and add specific package into it\n *\n * @param {PackageNameIndex} index\n * @param {PackageName} origin\n * @param {DependencyLifecycleType} lifecycleType\n * @returns\n */\nfunction addComponentDepToDepIdIndex(\n  index: PackageNameIndex,\n  origin: PackageName,\n  lifecycleType: DependencyLifecycleType\n) {\n  return (range: SemverVersion, depId: PackageName) => {\n    const componentItem: PackageNameIndexComponentItem = {\n      origin,\n      range,\n      lifecycleType,\n    };\n    if (!index.has(depId)) {\n      const item: PackageNameIndexItem = {\n        componentItems: [componentItem],\n        metadata: {},\n      };\n      index.set(depId, item);\n      return;\n    }\n    index.get(depId)?.componentItems.push(componentItem);\n  };\n}\n"],"mappings":";;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,YAAY,CAC1BC,UAA2B,EAC3BC,wBAAkD,EAClDC,gBAAkD,EAChC;EAClB,MAAMC,MAAwB,GAAG,IAAIC,GAAG,EAAE;EAC1CH,wBAAwB,CAACI,OAAO,CAAC,CAACC,UAAU,EAAEC,eAAe,KAAK;IAChE,IAAIL,gBAAgB,EAAE;MACpBI,UAAU,GAAG,IAAAE,eAAI,EAACN,gBAAgB,EAAEI,UAAU,CAAC;IACjD;IACA,IAAAG,4BAAiB,EAACC,+BAA+B,CAACP,MAAM,EAAEI,eAAe,CAAC,EAAED,UAAU,CAAC;EACzF,CAAC,CAAC;EACFK,oBAAoB,CAACR,MAAM,EAAEH,UAAU,CAAC;EACxC,OAAOG,MAAM;AACf;AAEA,SAASQ,oBAAoB,CAACC,KAAuB,EAAEZ,UAA2B,EAAQ;EACxF,MAAMa,SAAS,GAAGb,UAAU,CAACc,MAAM,CAAEC,KAAK,IAAK,CAAC,CAACA,KAAK,CAACC,KAAK,CAACC,QAAQ,CAAC;EACtEJ,SAAS,CAACR,OAAO,CAAEU,KAAK,IAAK;IAC3B,MAAMG,QAAsC,GAAG;MAC7CC,gBAAgB,EAAEJ,KAAK,CAACC,KAAK,CAACI,OAAO;MACrCC,sBAAsB,EAAEN,KAAK,CAACO;IAChC,CAAC;IACDC,8BAA8B,CAACX,KAAK,EAAEG,KAAK,CAACS,YAAY,EAAEN,QAAQ,CAAC;EACrE,CAAC,CAAC;AACJ;AAEA,SAASK,8BAA8B,CACrCX,KAAuB,EACvBa,KAAkB,EAClBP,QAAsC,EAChC;EACN,MAAMQ,YAAY,GAAGd,KAAK,CAACe,GAAG,CAACF,KAAK,CAAC;EACrC;EACA,IAAIC,YAAY,EAAE;IAChBA,YAAY,CAACR,QAAQ,GAAGA,QAAQ;EAClC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASR,+BAA+B,CAACE,KAAuB,EAAEgB,MAAmB,EAAE;EACrF,OAAO,CAACC,IAAoB,EAAEC,UAAyC,KAAK;IAC1E,MAAMR,aAAa,GAAGS,uCAA0B,CAACD,UAAU,CAA4B;IACvF,IAAArB,4BAAiB,EAACuB,2BAA2B,CAACpB,KAAK,EAAEgB,MAAM,EAAEN,aAAa,CAAC,EAAEO,IAAI,CAAC;EACpF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,2BAA2B,CAClCpB,KAAuB,EACvBgB,MAAmB,EACnBN,aAAsC,EACtC;EACA,OAAO,CAACW,KAAoB,EAAER,KAAkB,KAAK;IAAA;IACnD,MAAMS,aAA4C,GAAG;MACnDN,MAAM;MACNK,KAAK;MACLX;IACF,CAAC;IACD,IAAI,CAACV,KAAK,CAACuB,GAAG,CAACV,KAAK,CAAC,EAAE;MACrB,MAAMW,IAA0B,GAAG;QACjCC,cAAc,EAAE,CAACH,aAAa,CAAC;QAC/BhB,QAAQ,EAAE,CAAC;MACb,CAAC;MACDN,KAAK,CAAC0B,GAAG,CAACb,KAAK,EAAEW,IAAI,CAAC;MACtB;IACF;IACA,cAAAxB,KAAK,CAACe,GAAG,CAACF,KAAK,CAAC,+CAAhB,WAAkBY,cAAc,CAACE,IAAI,CAACL,aAAa,CAAC;EACtD,CAAC;AACH"}