"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WorkspaceManifest = void 0;
function _manifest() {
  const data = require("./manifest");
  _manifest = function () {
    return data;
  };
  return data;
}
class WorkspaceManifest extends _manifest().Manifest {
  constructor(
  // TODO: please prefer readonly on public
  name, version, dependencies, envPeersAutoDetectPolicy, rootDir, componentsManifestsMap) {
    super(name, version, dependencies);
    this.name = name;
    this.version = version;
    this.dependencies = dependencies;
    this.envPeersAutoDetectPolicy = envPeersAutoDetectPolicy;
    this.rootDir = rootDir;
    this.componentsManifestsMap = componentsManifestsMap;
  }
  get dir() {
    return this.rootDir;
  }
  getComponentMap() {}
  toJson(options = {}) {
    const manifest = super.toJson(options);
    if (options.installPeersFromEnvs) {
      var _this$envPeersAutoDet;
      const peersManifest = (_this$envPeersAutoDet = this.envPeersAutoDetectPolicy) === null || _this$envPeersAutoDet === void 0 ? void 0 : _this$envPeersAutoDet.toVersionManifest();
      manifest.dependencies = manifest.dependencies || {};
      Object.assign(manifest.dependencies, peersManifest);
    }
    return manifest;
  }
  toJsonWithDir(options = {}) {
    return {
      manifest: this.toJson(options),
      rootDir: this.rootDir
    };
  }
}
exports.WorkspaceManifest = WorkspaceManifest;

//# sourceMappingURL=workspace-manifest.js.map