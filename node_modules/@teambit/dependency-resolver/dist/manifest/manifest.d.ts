import { SemVer } from 'semver';
import { PackageName, SemverVersion } from '../dependencies';
export declare type ManifestDependenciesKeys = {
    dependencies: 'dependencies';
    devDependencies: 'devDependencies';
    peerDependencies: 'peerDependencies';
};
export declare type ManifestDependenciesKeysNames = keyof ManifestDependenciesKeys;
export declare type ManifestDependenciesObject = Partial<Record<ManifestDependenciesKeysNames, DepObjectValue>>;
export declare type DepObjectValue = Record<PackageName, SemverVersion>;
export interface ManifestToJsonOptions {
    copyPeerToRuntime?: boolean;
}
export declare class Manifest {
    name: string;
    version: SemVer;
    dependencies: ManifestDependenciesObject;
    constructor(name: string, version: SemVer, dependencies: ManifestDependenciesObject);
    toJson(options?: ManifestToJsonOptions): Record<string, any>;
}
