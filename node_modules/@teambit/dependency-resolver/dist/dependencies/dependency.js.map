{"version":3,"names":[],"sources":["dependency.ts"],"sourcesContent":["import type { DependencySource } from '../policy/variant-policy/variant-policy';\n\nexport type WorkspaceDependencyLifecycleType = 'runtime' | 'peer';\n\nexport type DependencyLifecycleType = WorkspaceDependencyLifecycleType | 'dev';\n\nexport interface SerializedDependency {\n  id: string;\n  version: string;\n  __type: string;\n  lifecycle: string;\n  source?: DependencySource;\n}\n\n/**\n * Allowed values are valid semver values and the \"-\" sign.\n */\nexport type SemverVersion = string;\nexport type PackageName = string;\n\nexport type DependencyManifest = {\n  packageName: PackageName;\n  version: SemverVersion;\n};\n\nexport interface Dependency {\n  id: string;\n  version: string;\n  type: string;\n  lifecycle: DependencyLifecycleType;\n  source?: DependencySource;\n\n  serialize: <T extends SerializedDependency>() => T;\n  setVersion: (newVersion: string) => void;\n  toManifest: () => DependencyManifest;\n  getPackageName?: () => string;\n}\n"],"mappings":""}