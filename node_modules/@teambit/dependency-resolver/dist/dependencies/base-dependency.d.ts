import { DependencySource } from '../policy/variant-policy/variant-policy';
import { Dependency, DependencyLifecycleType, DependencyManifest } from './dependency';
export declare abstract class BaseDependency implements Dependency {
    private _id;
    private _version;
    private _lifecycle;
    private _source?;
    _type: string;
    constructor(_id: string, _version: string, _lifecycle: DependencyLifecycleType, _source?: DependencySource | undefined);
    get id(): string;
    set id(newId: string);
    get version(): string;
    get type(): string;
    get lifecycle(): DependencyLifecycleType;
    get source(): DependencySource | undefined;
    set source(source: DependencySource | undefined);
    serialize<SerializedDependency>(): SerializedDependency;
    setVersion(newVersion: string): void;
    getPackageName(): string;
    toManifest(): DependencyManifest;
}
