{"version":3,"names":["TYPE","ComponentDependency","BaseDependency","constructor","_componentId","_isExtension","_packageName","id","version","lifecycle","source","_type","componentId","isExtension","packageName","getPackageName","setVersion","newVersion","newComponentId","changeVersion","splittedId","split","length","newId","serialize","serialized","Object","assign","_legacy","toManifest"],"sources":["component-dependency.ts"],"sourcesContent":["import type { ComponentID } from '@teambit/component-id';\nimport type { BitIdProps } from '@teambit/legacy-bit-id';\n\nimport { SerializedDependency, DependencyLifecycleType, DependencyManifest } from '../dependency';\nimport { BaseDependency } from '../base-dependency';\nimport { DependencySource } from '../../policy/variant-policy/variant-policy';\n\nexport const TYPE = 'component';\n\nexport interface SerializedComponentDependency extends SerializedDependency {\n  componentId: BitIdProps;\n  isExtension: boolean;\n  packageName: string;\n}\n\n// TODO: think about where is the right place to put this\nexport class ComponentDependency extends BaseDependency {\n  constructor(\n    private _componentId: ComponentID,\n    private _isExtension: boolean,\n    private _packageName: string,\n    id: string,\n    version: string,\n    lifecycle: DependencyLifecycleType,\n    source?: DependencySource\n  ) {\n    super(id, version, lifecycle, source);\n    this._type = TYPE;\n  }\n\n  get componentId() {\n    return this._componentId;\n  }\n\n  get isExtension() {\n    return this._isExtension;\n  }\n\n  get packageName() {\n    return this._packageName;\n  }\n\n  getPackageName() {\n    return this.packageName;\n  }\n\n  setVersion(newVersion: string) {\n    super.setVersion(newVersion);\n    const newComponentId = this.componentId.changeVersion(newVersion);\n    this._componentId = newComponentId;\n    const splittedId = this.id.split('@');\n    if (splittedId.length === 2) {\n      const newId = `${splittedId[0]}@${newVersion}`;\n      this.id = newId;\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  serialize<SerializedComponentDependency>(): SerializedComponentDependency {\n    const serialized = Object.assign({}, super.serialize(), {\n      componentId: this.componentId._legacy.serialize(),\n      isExtension: this.isExtension,\n      packageName: this.packageName,\n    }) as unknown as SerializedComponentDependency;\n    return serialized;\n  }\n\n  toManifest(): DependencyManifest {\n    const packageName = this.getPackageName?.();\n    const version = this.version;\n    return {\n      packageName,\n      version,\n    };\n  }\n}\n"],"mappings":";;;;;;;AAIA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGO,MAAMA,IAAI,GAAG,WAAW;AAAC;AAQhC;AACO,MAAMC,mBAAmB,SAASC,gCAAc,CAAC;EACtDC,WAAW,CACDC,YAAyB,EACzBC,YAAqB,EACrBC,YAAoB,EAC5BC,EAAU,EACVC,OAAe,EACfC,SAAkC,EAClCC,MAAyB,EACzB;IACA,KAAK,CAACH,EAAE,EAAEC,OAAO,EAAEC,SAAS,EAAEC,MAAM,CAAC;IAAC,KAR9BN,YAAyB,GAAzBA,YAAyB;IAAA,KACzBC,YAAqB,GAArBA,YAAqB;IAAA,KACrBC,YAAoB,GAApBA,YAAoB;IAO5B,IAAI,CAACK,KAAK,GAAGX,IAAI;EACnB;EAEA,IAAIY,WAAW,GAAG;IAChB,OAAO,IAAI,CAACR,YAAY;EAC1B;EAEA,IAAIS,WAAW,GAAG;IAChB,OAAO,IAAI,CAACR,YAAY;EAC1B;EAEA,IAAIS,WAAW,GAAG;IAChB,OAAO,IAAI,CAACR,YAAY;EAC1B;EAEAS,cAAc,GAAG;IACf,OAAO,IAAI,CAACD,WAAW;EACzB;EAEAE,UAAU,CAACC,UAAkB,EAAE;IAC7B,KAAK,CAACD,UAAU,CAACC,UAAU,CAAC;IAC5B,MAAMC,cAAc,GAAG,IAAI,CAACN,WAAW,CAACO,aAAa,CAACF,UAAU,CAAC;IACjE,IAAI,CAACb,YAAY,GAAGc,cAAc;IAClC,MAAME,UAAU,GAAG,IAAI,CAACb,EAAE,CAACc,KAAK,CAAC,GAAG,CAAC;IACrC,IAAID,UAAU,CAACE,MAAM,KAAK,CAAC,EAAE;MAC3B,MAAMC,KAAK,GAAI,GAAEH,UAAU,CAAC,CAAC,CAAE,IAAGH,UAAW,EAAC;MAC9C,IAAI,CAACV,EAAE,GAAGgB,KAAK;IACjB;EACF;;EAEA;EACAC,SAAS,GAAiE;IACxE,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAACH,SAAS,EAAE,EAAE;MACtDZ,WAAW,EAAE,IAAI,CAACA,WAAW,CAACgB,OAAO,CAACJ,SAAS,EAAE;MACjDX,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,WAAW,EAAE,IAAI,CAACA;IACpB,CAAC,CAA6C;IAC9C,OAAOW,UAAU;EACnB;EAEAI,UAAU,GAAuB;IAAA;IAC/B,MAAMf,WAAW,2BAAG,IAAI,CAACC,cAAc,yDAAnB,8BAAI,CAAmB;IAC3C,MAAMP,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,OAAO;MACLM,WAAW;MACXN;IACF,CAAC;EACH;AACF;AAAC"}