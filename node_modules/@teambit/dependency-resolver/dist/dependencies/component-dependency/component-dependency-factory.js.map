{"version":3,"names":["ComponentDependencyFactory","constructor","componentAspect","type","TYPE","parse","serialized","id","componentId","scope","ComponentID","fromObject","getHost","resolveComponentId","ComponentDependency","isExtension","packageName","version","lifecycle","source","fromLegacyComponent","legacyComponent","runtimeDeps","mapSeries","dependencies","get","dep","transformLegacyComponentDepToSerializedDependency","devDeps","devDependencies","extensionDeps","extensions","extension","transformLegacyComponentExtensionToSerializedDependency","filteredExtensionDeps","compact","serializedComponentDeps","componentDeps","dependencyList","DependencyList","legacyDep","host","depComponent","componentIdToPackageName","state","_consumer","toString","serialize","getVersion","__type","extensionId","undefined","extComponent"],"sources":["component-dependency-factory.ts"],"sourcesContent":["import mapSeries from 'p-map-series';\nimport { ComponentMain } from '@teambit/component';\nimport { compact } from 'lodash';\nimport { ComponentID } from '@teambit/component-id';\nimport { Dependency as LegacyDependency } from '@teambit/legacy/dist/consumer/component/dependencies';\nimport LegacyComponent from '@teambit/legacy/dist/consumer/component';\nimport { ExtensionDataEntry } from '@teambit/legacy/dist/consumer/config';\nimport componentIdToPackageName from '@teambit/legacy/dist/utils/bit/component-id-to-package-name';\nimport { ComponentDependency, SerializedComponentDependency, TYPE } from './component-dependency';\nimport { DependencyLifecycleType } from '../dependency';\nimport { DependencyFactory } from '../dependency-factory';\nimport { DependencyList } from '../dependency-list';\n\n// TODO: think about where is the right place to put this\n// export class ComponentDependencyFactory implements DependencyFactory<ComponentDependency, SerializedComponentDependency> {\n//   parse(serialized: SerializedComponentDependency) {\n//     const id = ComponentID.fromObject(serialized.componentId);\n//     return new ComponentDependency(id, serialized.id, serialized.version, serialized.type, serialized.lifecycle as DependencyLifecycleType);\n//   }\n// }\n\nexport class ComponentDependencyFactory implements DependencyFactory {\n  type: string;\n\n  constructor(private componentAspect: ComponentMain) {\n    this.type = TYPE;\n  }\n\n  // TODO: solve this generics issue and remove the ts-ignore\n  // @ts-ignore\n  async parse<ComponentDependency, S extends SerializedComponentDependency>(\n    serialized: S\n  ): Promise<ComponentDependency> {\n    let id;\n\n    if (serialized.componentId.scope) {\n      // @ts-ignore - ts is saying scope is possibly missing, but just checked it is defined\n      id = ComponentID.fromObject(serialized.componentId);\n    } else {\n      id = await this.componentAspect.getHost().resolveComponentId(serialized.id);\n    }\n\n    return new ComponentDependency(\n      id,\n      serialized.isExtension,\n      serialized.packageName,\n      serialized.id,\n      serialized.version,\n      serialized.lifecycle as DependencyLifecycleType,\n      serialized.source\n    ) as unknown as ComponentDependency;\n  }\n\n  async fromLegacyComponent(legacyComponent: LegacyComponent): Promise<DependencyList> {\n    const runtimeDeps = await mapSeries(legacyComponent.dependencies.get(), (dep) =>\n      this.transformLegacyComponentDepToSerializedDependency(dep, 'runtime')\n    );\n    const devDeps = await mapSeries(legacyComponent.devDependencies.get(), (dep) =>\n      this.transformLegacyComponentDepToSerializedDependency(dep, 'dev')\n    );\n    const extensionDeps = await mapSeries(legacyComponent.extensions, (extension) =>\n      this.transformLegacyComponentExtensionToSerializedDependency(extension, 'dev')\n    );\n    const filteredExtensionDeps: SerializedComponentDependency[] = compact(extensionDeps);\n    const serializedComponentDeps = [...runtimeDeps, ...devDeps, ...filteredExtensionDeps];\n    const componentDeps: ComponentDependency[] = await mapSeries(serializedComponentDeps, (dep) => this.parse(dep));\n    const dependencyList = new DependencyList(componentDeps);\n    return dependencyList;\n  }\n\n  private async transformLegacyComponentDepToSerializedDependency(\n    legacyDep: LegacyDependency,\n    lifecycle: DependencyLifecycleType\n  ): Promise<SerializedComponentDependency> {\n    let packageName = legacyDep.packageName || '';\n    if (!packageName) {\n      const host = this.componentAspect.getHost();\n      const id = await host.resolveComponentId(legacyDep.id);\n      const depComponent = await host.get(id);\n      if (depComponent) {\n        packageName = componentIdToPackageName(depComponent.state._consumer);\n      }\n    }\n\n    return {\n      id: legacyDep.id.toString(),\n      isExtension: false,\n      packageName,\n      componentId: legacyDep.id.serialize(),\n      version: legacyDep.id.getVersion().toString(),\n      __type: TYPE,\n      lifecycle,\n    };\n  }\n\n  private async transformLegacyComponentExtensionToSerializedDependency(\n    extension: ExtensionDataEntry,\n    lifecycle: DependencyLifecycleType\n  ): Promise<SerializedComponentDependency | undefined> {\n    if (!extension.extensionId) {\n      return undefined;\n    }\n    const host = this.componentAspect.getHost();\n    const id = await host.resolveComponentId(extension.extensionId);\n    const extComponent = await host.get(id);\n    let packageName = '';\n    if (extComponent) {\n      packageName = componentIdToPackageName(extComponent.state._consumer);\n    }\n    return {\n      id: extension.extensionId.toString(),\n      isExtension: true,\n      packageName,\n      componentId: extension.extensionId.serialize(),\n      version: extension.extensionId.getVersion().toString(),\n      __type: TYPE,\n      lifecycle,\n    };\n  }\n}\n"],"mappings":"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"}