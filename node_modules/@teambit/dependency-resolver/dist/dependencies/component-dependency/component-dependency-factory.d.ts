import { ComponentMain } from '@teambit/component';
import LegacyComponent from '@teambit/legacy/dist/consumer/component';
import { SerializedComponentDependency } from './component-dependency';
import { DependencyFactory } from '../dependency-factory';
import { DependencyList } from '../dependency-list';
export declare class ComponentDependencyFactory implements DependencyFactory {
    private componentAspect;
    type: string;
    constructor(componentAspect: ComponentMain);
    parse<ComponentDependency, S extends SerializedComponentDependency>(serialized: S): Promise<ComponentDependency>;
    fromLegacyComponent(legacyComponent: LegacyComponent): Promise<DependencyList>;
    private transformLegacyComponentDepToSerializedDependency;
    private transformLegacyComponentExtensionToSerializedDependency;
}
