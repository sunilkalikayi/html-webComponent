{"version":3,"names":["DependencyList","constructor","_dependencies","uniqDeps","dependencies","sort","sorted","a","b","id","findDependency","componentIdStr","opts","ignoreVersion","find","dep","componentIdStrWithoutVersion","removeVersion","findByPkgNameOrCompId","version","found","getPackageName","undefined","forEach","predicate","map","filter","filtered","fromArray","toTypeArray","typeName","list","type","byTypeName","byLifecycle","lifecycle","serialize","serialized","getComponentDependencies","ComponentDependency","toDependenciesManifest","manifest","devDependencies","peerDependencies","keyName","KEY_NAME_BY_LIFECYCLE_TYPE","entry","toManifest","packageName","merge","lists","res","deps","reduce","acc","curr","concat","uniq","uniqBy","property","startsWith","split"],"sources":["dependency-list.ts"],"sourcesContent":["import { uniqBy, property } from 'lodash';\nimport { Dependency, DependencyLifecycleType, SerializedDependency, SemverVersion, PackageName } from './dependency';\nimport { KEY_NAME_BY_LIFECYCLE_TYPE } from './constants';\nimport { ComponentDependency } from './component-dependency';\n\nexport type LifecycleDependenciesManifest = Record<PackageName, SemverVersion>;\n\nexport interface DependenciesManifest {\n  dependencies?: LifecycleDependenciesManifest;\n  devDependencies?: LifecycleDependenciesManifest;\n  peerDependencies?: LifecycleDependenciesManifest;\n}\n\nexport type FindDependencyOptions = {\n  ignoreVersion?: boolean;\n};\nexport class DependencyList {\n  constructor(private _dependencies: Array<Dependency>) {\n    this._dependencies = uniqDeps(_dependencies);\n  }\n  // constructor(private _dependencies: Dependency[]){}\n\n  get dependencies(): Dependency[] {\n    return this._dependencies;\n  }\n\n  sort(): DependencyList {\n    const sorted = this.dependencies.sort((a, b) => {\n      if (a.id < b.id) {\n        return -1;\n      }\n      if (a.id > b.id) {\n        return 1;\n      }\n      return 0;\n    });\n    return new DependencyList(sorted);\n  }\n\n  /**\n   * @param componentIdStr complete string include the scope and the version\n   */\n  findDependency(componentIdStr: string, opts: FindDependencyOptions = {}): Dependency | undefined {\n    const ignoreVersion = opts.ignoreVersion;\n    if (!ignoreVersion) {\n      return this.dependencies.find((dep) => dep.id === componentIdStr);\n    }\n    const componentIdStrWithoutVersion = removeVersion(componentIdStr);\n    return this.dependencies.find((dep) => removeVersion(dep.id) === componentIdStrWithoutVersion);\n  }\n\n  findByPkgNameOrCompId(id: string, version?: string): Dependency | undefined {\n    const found = this.dependencies.find((dep) => dep.id === id || dep.getPackageName?.() === id);\n    if (!found) return undefined;\n    if (version) {\n      return found.version === version ? found : undefined;\n    }\n    return found;\n  }\n\n  forEach(predicate: (dep: Dependency, index?: number) => void): void {\n    this.dependencies.forEach(predicate);\n  }\n\n  map(predicate: (dep: Dependency, index?: number) => any) {\n    return this.dependencies.map(predicate);\n  }\n\n  filter(predicate: (dep: Dependency, index?: number) => boolean): DependencyList {\n    const filtered = this.dependencies.filter(predicate);\n    return DependencyList.fromArray(filtered);\n  }\n\n  toTypeArray<T extends Dependency>(typeName: string): T[] {\n    const list: T[] = this.dependencies.filter((dep) => dep.type === typeName) as any as T[];\n    return list;\n  }\n\n  byTypeName(typeName: string): DependencyList {\n    const filtered = this.dependencies.filter((dep) => dep.type === typeName);\n    return DependencyList.fromArray(filtered);\n  }\n\n  byLifecycle(lifecycle: DependencyLifecycleType): DependencyList {\n    const filtered = this.dependencies.filter((dep) => dep.lifecycle === lifecycle);\n    return DependencyList.fromArray(filtered);\n  }\n\n  serialize(): SerializedDependency[] {\n    const serialized = this.dependencies.map((dep) => {\n      return dep.serialize();\n    });\n    return serialized;\n  }\n\n  getComponentDependencies(): ComponentDependency[] {\n    return this.dependencies.filter((dep) => dep instanceof ComponentDependency) as ComponentDependency[];\n  }\n\n  toDependenciesManifest(): Required<DependenciesManifest> {\n    const manifest: Required<DependenciesManifest> = {\n      dependencies: {},\n      devDependencies: {},\n      peerDependencies: {},\n    };\n    this.forEach((dep) => {\n      const keyName = KEY_NAME_BY_LIFECYCLE_TYPE[dep.lifecycle];\n      const entry = dep.toManifest();\n      if (entry) {\n        manifest[keyName][entry.packageName] = entry.version;\n      }\n    });\n    return manifest;\n  }\n\n  static merge(lists: DependencyList[]): DependencyList {\n    const res: Dependency[] = [];\n    const deps = lists.reduce((acc, curr) => {\n      acc = acc.concat(curr.dependencies);\n      return acc;\n    }, res);\n    return new DependencyList(deps);\n  }\n\n  static fromArray(dependencies: Array<Dependency>) {\n    return new DependencyList(dependencies);\n  }\n}\n\nfunction uniqDeps(dependencies: Array<Dependency>): Array<Dependency> {\n  const uniq = uniqBy(dependencies, property('id'));\n  return uniq;\n}\n\nfunction removeVersion(id: string): string {\n  if (id.startsWith('@')) return id.split('@')[1]; // scoped package\n  return id.split('@')[0];\n}\n"],"mappings":"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"}