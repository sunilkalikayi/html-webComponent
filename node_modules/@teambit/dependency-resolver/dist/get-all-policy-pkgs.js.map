{"version":3,"names":["getAllPolicyPkgs","rootPolicy","variantPoliciesByPatterns","componentPoliciesById","componentModelVersions","pkgsFromPolicies","getPkgsFromRootPolicy","pkgsNamesFromPolicies","Set","map","name","getPkgsFromVariants","getPkgsFromComponents","filter","has","componentDep","currentRange","version","source","componentId","targetField","KEY_NAME_BY_LIFECYCLE_TYPE","lifecycleType","entries","entry","dependencyId","value","variantPattern","Object","variant","readAllDependenciesFromPolicyObject","flat","policy","context","pkgs","push"],"sources":["get-all-policy-pkgs.ts"],"sourcesContent":["import { ManifestDependenciesKeysNames } from './manifest';\nimport { VariantPolicyConfigObject, WorkspacePolicy } from './policy';\nimport { DependencyLifecycleType } from './dependencies/dependency';\nimport { KEY_NAME_BY_LIFECYCLE_TYPE } from './dependencies';\n\ntype CurrentPkg = {\n  name: string;\n  currentRange: string;\n  source: 'variants' | 'component' | 'rootPolicy' | 'component-model';\n  variantPattern?: string | null;\n  componentId?: string;\n  targetField: ManifestDependenciesKeysNames;\n};\n\nexport type OutdatedPkg = CurrentPkg & {\n  latestRange: string;\n};\n\nexport type ComponentModelVersion = {\n  name: string;\n  version: string;\n  componentId: string;\n  lifecycleType: DependencyLifecycleType;\n};\n\n/**\n * Get packages from root policy, variants, and component config files (component.json files).\n */\nexport function getAllPolicyPkgs({\n  rootPolicy,\n  variantPoliciesByPatterns,\n  componentPoliciesById,\n  componentModelVersions,\n}: {\n  rootPolicy: WorkspacePolicy;\n  variantPoliciesByPatterns: Record<string, VariantPolicyConfigObject>;\n  componentPoliciesById: Record<string, VariantPolicyConfigObject>;\n  componentModelVersions: ComponentModelVersion[];\n}): CurrentPkg[] {\n  const pkgsFromPolicies = getPkgsFromRootPolicy(rootPolicy);\n  const pkgsNamesFromPolicies = new Set(pkgsFromPolicies.map(({ name }) => name));\n  return [\n    ...pkgsFromPolicies,\n    ...getPkgsFromVariants(variantPoliciesByPatterns),\n    ...getPkgsFromComponents(componentPoliciesById),\n    ...componentModelVersions\n      .filter(({ name }) => !pkgsNamesFromPolicies.has(name))\n      .map((componentDep) => ({\n        name: componentDep.name,\n        currentRange: componentDep.version,\n        source: 'component-model' as const,\n        componentId: componentDep.componentId,\n        targetField: KEY_NAME_BY_LIFECYCLE_TYPE[componentDep.lifecycleType] as ManifestDependenciesKeysNames,\n      })),\n  ];\n}\n\nfunction getPkgsFromRootPolicy(rootPolicy: WorkspacePolicy): CurrentPkg[] {\n  return rootPolicy.entries.map((entry) => ({\n    name: entry.dependencyId,\n    currentRange: entry.value.version,\n    source: 'rootPolicy',\n    variantPattern: null as string | null,\n    targetField: KEY_NAME_BY_LIFECYCLE_TYPE[entry.lifecycleType] as ManifestDependenciesKeysNames,\n  }));\n}\n\nfunction getPkgsFromVariants(variantPoliciesByPatterns: Record<string, VariantPolicyConfigObject>): CurrentPkg[] {\n  return Object.entries(variantPoliciesByPatterns)\n    .filter(([, variant]) => variant != null)\n    .map(([variantPattern, variant]) => {\n      return readAllDependenciesFromPolicyObject({ source: 'variants', variantPattern }, variant);\n    })\n    .flat();\n}\n\nfunction getPkgsFromComponents(componentPoliciesById: Record<string, VariantPolicyConfigObject>): CurrentPkg[] {\n  return Object.entries(componentPoliciesById)\n    .map(([componentId, policy]) => {\n      return readAllDependenciesFromPolicyObject({ source: 'component', componentId }, policy);\n    })\n    .flat();\n}\n\nfunction readAllDependenciesFromPolicyObject(\n  context: Pick<CurrentPkg, 'source' | 'componentId' | 'variantPattern'>,\n  policy: VariantPolicyConfigObject\n): CurrentPkg[] {\n  const pkgs: CurrentPkg[] = [];\n  for (const targetField of [\n    'dependencies',\n    'devDependencies',\n    'peerDependencies',\n  ] as ManifestDependenciesKeysNames[]) {\n    for (const [name, currentRange] of Object.entries(policy[targetField] ?? {})) {\n      if (currentRange !== '-') {\n        pkgs.push({\n          ...context,\n          name,\n          currentRange: typeof currentRange === 'string' ? currentRange : currentRange.version,\n          targetField,\n        });\n      }\n    }\n  }\n  return pkgs;\n}\n"],"mappings":"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"}