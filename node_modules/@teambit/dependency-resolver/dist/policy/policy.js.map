{"version":3,"names":[],"sources":["policy.ts"],"sourcesContent":["import { DependencyLifecycleType } from '../dependencies';\n\n// TODO: add DetailedDependencyPolicy once support the force prop\n// export type DependencyPolicy = SemverVersionRule | DetailedDependencyPolicy;\n\n/**\n * Allowed values are valid semver values\n */\nexport type SemverVersion = string;\n\nexport type GitUrlVersion = string;\n\nexport type FileSystemPath = string;\n\nexport type RemoveDepSign = '-';\n\n/**\n * Allowed values are valid semver values and the \"-\" sign.\n */\nexport type PolicySemver = SemverVersion | RemoveDepSign;\n/**\n * Allowed values are valid semver values, git urls, fs path and the \"-\" sign.\n */\nexport type PolicyVersion = PolicySemver | GitUrlVersion | FileSystemPath;\n\n// TODO: think if it might need to be in another place and just reference there\nexport type PolicyConfigKeys = {\n  dependencies: 'dependencies';\n  devDependencies: 'devDependencies';\n  peerDependencies: 'peerDependencies';\n};\n\nexport type PolicyConfigKeysNames = keyof PolicyConfigKeys;\n\nexport interface Policy<T> {\n  toConfigObject(): T;\n}\n\nexport type PolicyEntry = {\n  dependencyId: string;\n  lifecycleType: DependencyLifecycleType;\n  // TODO: try to add this as generic?\n  // value: any,\n};\n"],"mappings":""}