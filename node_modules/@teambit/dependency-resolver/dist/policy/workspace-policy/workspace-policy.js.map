{"version":3,"names":["WorkspacePolicy","constructor","_policiesEntries","uniqEntries","entries","add","entry","options","defaultOptions","updateExisting","calculatedOpts","Object","assign","existing","find","dependencyId","EntryAlreadyExist","remove","push","forEach","predicate","filter","filtered","depId","lifecycleType","matchedEntry","idEqual","lifecycleEqual","depIds","includes","getDepVersion","undefined","value","version","getValidSemverDepVersion","snapToSemver","toConfigObject","res","dependencies","peerDependencies","reduce","acc","keyName","KEY_NAME_BY_LIFECYCLE_TYPE","preserve","sortObject","toManifest","byLifecycleType","mergePolices","policies","allEntries","curr","concat","reverse","uniq","uniqWith","entry1","entry2"],"sources":["workspace-policy.ts"],"sourcesContent":["import { uniqWith } from 'lodash';\nimport { sortObject } from '@teambit/legacy/dist/utils';\nimport { snapToSemver } from '@teambit/component-package-version';\nimport { Policy, SemverVersion, GitUrlVersion, FileSystemPath, PolicyConfigKeys } from '../policy';\nimport { KEY_NAME_BY_LIFECYCLE_TYPE, WorkspaceDependencyLifecycleType } from '../../dependencies';\nimport { EntryAlreadyExist } from './exceptions';\n\nexport type WorkspacePolicyConfigKeys = Omit<PolicyConfigKeys, 'devDependencies'>;\nexport type WorkspacePolicyConfigKeysNames = keyof WorkspacePolicyConfigKeys;\n\nexport type WorkspacePolicyConfigObject = Partial<\n  Record<WorkspacePolicyConfigKeysNames, WorkspacePolicyLifecycleConfigObject>\n>;\nexport type WorkspacePolicyManifest = Partial<\n  Record<WorkspacePolicyConfigKeysNames, WorkspacePolicyLifecycleManifestObject>\n>;\n\nexport type WorkspacePolicyLifecycleConfigObject = {\n  [dependencyId: string]: WorkspacePolicyConfigEntryValue;\n};\n\ntype WorkspacePolicyLifecycleManifestObject = {\n  [dependencyId: string]: WorkspacePolicyEntryVersion;\n};\n\nexport type WorkspacePolicyConfigEntryValue = WorkspacePolicyEntryValue | WorkspacePolicyEntryVersion;\n\nexport type AddEntryOptions = {\n  updateExisting: boolean;\n};\n/**\n * Allowed values are valid semver values, git urls, fs path.\n */\nexport type WorkspacePolicyEntryVersion = SemverVersion | GitUrlVersion | FileSystemPath;\n\nexport type WorkspacePolicyEntryValue = {\n  version: WorkspacePolicyEntryVersion;\n  preserve?: boolean;\n};\n\nexport type WorkspacePolicyEntry = {\n  dependencyId: string;\n  lifecycleType: WorkspaceDependencyLifecycleType;\n  value: WorkspacePolicyEntryValue;\n};\n\nexport class WorkspacePolicy implements Policy<WorkspacePolicyConfigObject> {\n  constructor(private _policiesEntries: WorkspacePolicyEntry[]) {\n    this._policiesEntries = uniqEntries(_policiesEntries);\n  }\n\n  get entries() {\n    return this._policiesEntries;\n  }\n\n  add(entry: WorkspacePolicyEntry, options?: AddEntryOptions): void {\n    const defaultOptions: AddEntryOptions = {\n      updateExisting: false,\n    };\n\n    const calculatedOpts = Object.assign({}, defaultOptions, options);\n\n    const existing = this.find(entry.dependencyId);\n    if (existing) {\n      if (!calculatedOpts.updateExisting) {\n        throw new EntryAlreadyExist(entry);\n      }\n      this.remove([entry.dependencyId]);\n    }\n    this._policiesEntries.push(entry);\n  }\n\n  forEach(predicate: (dep: WorkspacePolicyEntry, index?: number) => void): void {\n    this.entries.forEach(predicate);\n  }\n\n  filter(predicate: (dep: WorkspacePolicyEntry, index?: number) => boolean): WorkspacePolicy {\n    const filtered = this.entries.filter(predicate);\n    return new WorkspacePolicy(filtered);\n  }\n\n  find(depId: string, lifecycleType?: WorkspaceDependencyLifecycleType): WorkspacePolicyEntry | undefined {\n    const matchedEntry = this.entries.find((entry) => {\n      const idEqual = entry.dependencyId === depId;\n      const lifecycleEqual = lifecycleType ? entry.lifecycleType === lifecycleType : true;\n      return idEqual && lifecycleEqual;\n    });\n    return matchedEntry;\n  }\n\n  remove(depIds: string[]): WorkspacePolicy {\n    const entries = this.entries.filter((entry) => {\n      return !depIds.includes(entry.dependencyId);\n    });\n    return new WorkspacePolicy(entries);\n  }\n\n  getDepVersion(\n    depId: string,\n    lifecycleType?: WorkspaceDependencyLifecycleType\n  ): WorkspacePolicyEntryVersion | undefined {\n    const entry = this.find(depId, lifecycleType);\n    if (!entry) {\n      return undefined;\n    }\n    return entry.value.version;\n  }\n\n  getValidSemverDepVersion(\n    depId: string,\n    lifecycleType?: WorkspaceDependencyLifecycleType\n  ): WorkspacePolicyEntryVersion | undefined {\n    const version = this.getDepVersion(depId, lifecycleType);\n    if (!version) return undefined;\n    return snapToSemver(version);\n  }\n\n  toConfigObject(): WorkspacePolicyConfigObject {\n    const res: WorkspacePolicyConfigObject = {\n      dependencies: {},\n      peerDependencies: {},\n    };\n    this._policiesEntries.reduce((acc, entry) => {\n      const keyName = KEY_NAME_BY_LIFECYCLE_TYPE[entry.lifecycleType];\n      const value = entry.value.preserve ? entry.value : entry.value.version;\n      acc[keyName][entry.dependencyId] = value;\n      return acc;\n    }, res);\n    if (res.dependencies) {\n      res.dependencies = sortObject(res.dependencies);\n    }\n    if (res.peerDependencies) {\n      res.peerDependencies = sortObject(res.peerDependencies);\n    }\n    return res;\n  }\n\n  /**\n   * Create an object ready for package manager installation\n   * this is similar to \"toConfigObject\" but it will make the value of a specific dep always a string (the version / url)\n   */\n  toManifest(): WorkspacePolicyManifest {\n    const res: WorkspacePolicyManifest = {\n      dependencies: {},\n      peerDependencies: {},\n    };\n    this._policiesEntries.reduce((acc, entry) => {\n      const keyName = KEY_NAME_BY_LIFECYCLE_TYPE[entry.lifecycleType];\n      acc[keyName][entry.dependencyId] = snapToSemver(entry.value.version);\n      return acc;\n    }, res);\n    return res;\n  }\n\n  byLifecycleType(lifecycleType: WorkspaceDependencyLifecycleType): WorkspacePolicy {\n    const filtered = this._policiesEntries.filter((entry) => entry.lifecycleType === lifecycleType);\n    return new WorkspacePolicy(filtered);\n  }\n\n  static mergePolices(policies: WorkspacePolicy[]): WorkspacePolicy {\n    let allEntries: WorkspacePolicyEntry[] = [];\n    allEntries = policies.reduce((acc, curr) => {\n      return acc.concat(curr.entries);\n    }, allEntries);\n    // We reverse it to make sure the latest policy will be stronger in case of conflict\n    allEntries = allEntries.reverse();\n    return new WorkspacePolicy(allEntries);\n  }\n}\n\nfunction uniqEntries(entries: Array<WorkspacePolicyEntry>): Array<WorkspacePolicyEntry> {\n  const uniq = uniqWith(entries, (entry1: WorkspacePolicyEntry, entry2: WorkspacePolicyEntry) => {\n    return entry1.dependencyId === entry2.dependencyId && entry1.lifecycleType === entry2.lifecycleType;\n  });\n  return uniq;\n}\n"],"mappings":"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"}