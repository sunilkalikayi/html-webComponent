"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EnvPolicyFactory = void 0;
function _lodash() {
  const data = require("lodash");
  _lodash = function () {
    return data;
  };
  return data;
}
function _envPolicy() {
  const data = require("./env-policy");
  _envPolicy = function () {
    return data;
  };
  return data;
}
function _() {
  const data = require("..");
  _ = function () {
    return data;
  };
  return data;
}
function _peersAutoDetectPolicy() {
  const data = require("./peers-auto-detect-policy");
  _peersAutoDetectPolicy = function () {
    return data;
  };
  return data;
}
function _validateEnvPolicy() {
  const data = require("./validate-env-policy");
  _validateEnvPolicy = function () {
    return data;
  };
  return data;
}
class EnvPolicyFactory {
  fromConfigObject(configObject) {
    var _configObject$peers;
    (0, _validateEnvPolicy().validateEnvPolicy)(configObject);
    const variantConfigObject = (0, _lodash().pick)(configObject, ['dependencies', 'devDependencies', 'peerDependencies']);
    const variantPolicyFactory = new (_().VariantPolicyFactory)();
    const variantPolicy = variantPolicyFactory.fromConfigObject(variantConfigObject, 'env');
    const peersAutoDetectEntries = (_configObject$peers = configObject.peers) !== null && _configObject$peers !== void 0 ? _configObject$peers : [];
    const peersAutoDetectPolicy = new (_peersAutoDetectPolicy().PeersAutoDetectPolicy)(peersAutoDetectEntries);
    return new (_envPolicy().EnvPolicy)(variantPolicy, peersAutoDetectPolicy);
  }
  getEmpty() {
    const variantPolicyFactory = new (_().VariantPolicyFactory)();
    return new (_envPolicy().EnvPolicy)(variantPolicyFactory.getEmpty(), new (_peersAutoDetectPolicy().PeersAutoDetectPolicy)([]));
  }
}
exports.EnvPolicyFactory = EnvPolicyFactory;

//# sourceMappingURL=env-policy-factory.js.map