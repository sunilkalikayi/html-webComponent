{"version":3,"names":["jest","mock","Http","getNetworkConfig","fn","getProxyConfig","logger","debug","describe","packageManagerSlot","get","it","depResolver","DependencyResolverMain","globalConfig","fetchTimeout","fetchRetries","fetchRetryFactor","fetchRetryMintimeout","fetchRetryMaxtimeout","networkConcurrency","maxSockets","mockReturnValue","Promise","resolve","expect","toEqual","pmConfig","config","cafile","path","join","__dirname","ca","toStrictEqual","resolveRemoteVersion","spec","version","policy","dependencies","peerDependencies","setStatusLine","consoleSuccess","getSync","outdatedPkgs","getOutdatedPkgsFromPolicies","rootDir","variantPoliciesByPatterns","devDependencies","componentPoliciesById","component1","components","currentRange","latestRange","name","source","variantPattern","targetField","componentId","getComponentEnvPolicyFromEnv","getDependencies","peers","supportedRange","rejects","toThrowError"],"sources":["dependency-resolver.main.runtime.spec.ts"],"sourcesContent":["// @ts-ignore\njest.mock('@teambit/legacy/dist/scope/network/http', () => ({\n  Http: {\n    // @ts-ignore\n    getNetworkConfig: jest.fn(),\n    // @ts-ignore\n    getProxyConfig: jest.fn(),\n  },\n}));\n\n/* eslint-disable import/first */\nimport path from 'path';\nimport { Http } from '@teambit/legacy/dist/scope/network/http';\nimport { DependencyResolverMain } from './dependency-resolver.main.runtime';\n\nconst logger = {\n  debug: () => {},\n};\n\ndescribe('DepenendencyResolverMain.getNetworkConfig()', () => {\n  const packageManagerSlot = {\n    // @ts-ignore\n    get: jest.fn(() => ({\n      getNetworkConfig: () => ({}),\n    })),\n  };\n  it('should return settings from global config', async () => {\n    const depResolver = new DependencyResolverMain(\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      logger as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      packageManagerSlot as any,\n      {} as any,\n      {} as any,\n      {} as any\n    );\n    const globalConfig = {\n      fetchTimeout: 1,\n      fetchRetries: 2,\n      fetchRetryFactor: 3,\n      fetchRetryMintimeout: 4,\n      fetchRetryMaxtimeout: 5,\n      networkConcurrency: 6,\n      maxSockets: 7,\n    };\n    // @ts-ignore\n    Http.getNetworkConfig.mockReturnValue(Promise.resolve(globalConfig));\n    expect(await depResolver.getNetworkConfig()).toEqual(globalConfig);\n  });\n  it('should return settings from package manager config', async () => {\n    const depResolver = new DependencyResolverMain(\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      logger as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      packageManagerSlot as any,\n      {} as any,\n      {} as any,\n      {} as any\n    );\n    const pmConfig = {\n      fetchTimeout: 11,\n      fetchRetries: 22,\n      fetchRetryFactor: 33,\n      fetchRetryMintimeout: 44,\n      fetchRetryMaxtimeout: 55,\n      networkConcurrency: 66,\n      maxSockets: 77,\n    };\n    packageManagerSlot.get.mockReturnValue({\n      getNetworkConfig: () => pmConfig,\n    });\n    // @ts-ignore\n    Http.getNetworkConfig.mockReturnValue(Promise.resolve({}));\n    expect(await depResolver.getNetworkConfig()).toEqual(pmConfig);\n  });\n  it('should return settings from aspect config', async () => {\n    const config = {\n      fetchTimeout: 111,\n      fetchRetries: 222,\n      fetchRetryFactor: 333,\n      fetchRetryMintimeout: 444,\n      fetchRetryMaxtimeout: 555,\n      networkConcurrency: 666,\n      maxSockets: 777,\n    } as any;\n    // @ts-ignore\n    Http.getNetworkConfig.mockReturnValue(Promise.resolve({}));\n    const depResolver = new DependencyResolverMain(\n      config,\n      {} as any,\n      {} as any,\n      {} as any,\n      logger as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      packageManagerSlot as any,\n      {} as any,\n      {} as any,\n      {} as any\n    );\n    expect(await depResolver.getNetworkConfig()).toEqual(config);\n  });\n  it('should merge settings from global config, package manager config, and aspect config', async () => {\n    const globalConfig = {\n      fetchTimeout: 1,\n      fetchRetries: 2,\n    };\n    const pmConfig = {\n      fetchRetryFactor: 33,\n      fetchRetryMintimeout: 44,\n    };\n    const config = {\n      fetchRetryMaxtimeout: 555,\n      networkConcurrency: 666,\n      maxSockets: 777,\n    } as any;\n    // @ts-ignore\n    Http.getNetworkConfig.mockReturnValue(Promise.resolve(globalConfig));\n    packageManagerSlot.get.mockReturnValue({\n      getNetworkConfig: () => pmConfig,\n    });\n    const depResolver = new DependencyResolverMain(\n      config,\n      {} as any,\n      {} as any,\n      {} as any,\n      logger as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      packageManagerSlot as any,\n      {} as any,\n      {} as any,\n      {} as any\n    );\n    expect(await depResolver.getNetworkConfig()).toEqual({\n      fetchTimeout: 1,\n      fetchRetries: 2,\n      fetchRetryFactor: 33,\n      fetchRetryMintimeout: 44,\n      fetchRetryMaxtimeout: 555,\n      networkConcurrency: 666,\n      maxSockets: 777,\n    });\n  });\n  it('should read cafile when it is returned by the global config', async () => {\n    const depResolver = new DependencyResolverMain(\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      { debug: jest.fn() } as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      packageManagerSlot as any,\n      {} as any,\n      {} as any,\n      {} as any\n    );\n    // @ts-ignore\n    Http.getNetworkConfig.mockReturnValue(\n      Promise.resolve({\n        cafile: path.join(__dirname, 'fixtures/cafile.txt'),\n      })\n    );\n    // @ts-ignore\n    expect((await depResolver.getNetworkConfig()).ca).toStrictEqual([\n      `-----BEGIN CERTIFICATE-----\nXXXX\n-----END CERTIFICATE-----`,\n    ]);\n  });\n});\n\ndescribe('DepenendencyResolverMain.getOutdatedPkgsFromPolicies()', () => {\n  const packageManagerSlot = {\n    // @ts-ignore\n    get: () => ({\n      resolveRemoteVersion: (spec: string) => ({\n        version: {\n          'root-runtime-dep1@latest': '2.0.0',\n          'root-peer-dep1@latest': '2.0.0',\n          'variant1-runtime-dep1@latest': '2.0.0',\n          'variant1-runtime-dep3@latest': '2.0.0',\n          'variant1-dev-dep1@latest': '2.0.0',\n          'variant1-dev-dep3@latest': '2.0.0',\n          'variant1-peer-dep1@latest': '2.0.0',\n          'variant1-peer-dep3@latest': '2.0.0',\n          'component1-runtime-dep1@latest': '2.0.0',\n          'component1-runtime-dep3@latest': '2.0.0',\n          'component1-dev-dep1@latest': '2.0.0',\n          'component1-dev-dep3@latest': '2.0.0',\n          'component1-peer-dep1@latest': '2.0.0',\n          'component1-peer-dep3@latest': '2.0.0',\n        }[spec],\n      }),\n      getNetworkConfig: () => ({}),\n    }),\n  };\n  const depResolver = new DependencyResolverMain(\n    {\n      policy: {\n        dependencies: {\n          'root-runtime-dep1': '1.0.0',\n          'root-runtime-dep2': '1.0.0',\n        },\n        peerDependencies: {\n          'root-peer-dep1': '1.0.0',\n          'root-peer-dep2': '1.0.0',\n        },\n      },\n    } as any,\n    {} as any,\n    {} as any,\n    {} as any,\n    {\n      // @ts-ignore\n      debug: jest.fn(),\n      // @ts-ignore\n      setStatusLine: jest.fn(),\n      // @ts-ignore\n      consoleSuccess: jest.fn(),\n    } as any,\n    {} as any,\n    {} as any,\n    {\n      getSync: () => false,\n    } as any,\n    {} as any,\n    packageManagerSlot as any,\n    {} as any,\n    {} as any,\n    {} as any\n  );\n  it('should return outdated dependencies', async () => {\n    const outdatedPkgs = await depResolver.getOutdatedPkgsFromPolicies({\n      rootDir: '',\n      variantPoliciesByPatterns: {\n        '{variant1/*}': {\n          dependencies: {\n            'variant1-runtime-dep1': '1.0.0',\n            'variant1-runtime-dep2': '1.0.0',\n            'variant1-runtime-dep3': '-',\n          },\n          devDependencies: {\n            'variant1-dev-dep1': '1.0.0',\n            'variant1-dev-dep2': '1.0.0',\n            'variant1-dev-dep3': '-',\n          },\n          peerDependencies: {\n            'variant1-peer-dep1': '1.0.0',\n            'variant1-peer-dep2': '1.0.0',\n            'variant1-peer-dep3': '-',\n          },\n        },\n      },\n      componentPoliciesById: {\n        component1: {\n          dependencies: {\n            'component1-runtime-dep1': '1.0.0',\n            'component1-runtime-dep2': '1.0.0',\n            'component1-runtime-dep3': '-',\n          },\n          devDependencies: {\n            'component1-dev-dep1': '1.0.0',\n            'component1-dev-dep2': '1.0.0',\n            'component1-dev-dep3': '-',\n          },\n          peerDependencies: {\n            'component1-peer-dep1': '1.0.0',\n            'component1-peer-dep2': '1.0.0',\n            'component1-peer-dep3': '-',\n          },\n        },\n      },\n      components: [],\n    });\n    // @ts-ignore\n    expect(outdatedPkgs).toStrictEqual([\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'root-runtime-dep1',\n        source: 'rootPolicy',\n        variantPattern: null,\n        targetField: 'dependencies',\n      },\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'root-peer-dep1',\n        source: 'rootPolicy',\n        variantPattern: null,\n        targetField: 'peerDependencies',\n      },\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'variant1-runtime-dep1',\n        source: 'variants',\n        variantPattern: '{variant1/*}',\n        targetField: 'dependencies',\n      },\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'variant1-dev-dep1',\n        source: 'variants',\n        variantPattern: '{variant1/*}',\n        targetField: 'devDependencies',\n      },\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'variant1-peer-dep1',\n        source: 'variants',\n        variantPattern: '{variant1/*}',\n        targetField: 'peerDependencies',\n      },\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'component1-runtime-dep1',\n        source: 'component',\n        componentId: 'component1',\n        targetField: 'dependencies',\n      },\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'component1-dev-dep1',\n        source: 'component',\n        componentId: 'component1',\n        targetField: 'devDependencies',\n      },\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'component1-peer-dep1',\n        source: 'component',\n        componentId: 'component1',\n        targetField: 'peerDependencies',\n      },\n    ]);\n  });\n});\n\ndescribe('DepenendencyResolverMain.getComponentEnvPolicyFromEnv()', () => {\n  it('should throw an error if the env policy has a peer with an empty string set for the supportedRange', async () => {\n    const depResolver = new DependencyResolverMain(\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any\n    );\n    await expect(\n      depResolver.getComponentEnvPolicyFromEnv({\n        getDependencies: () => ({\n          peers: [\n            {\n              name: '@teambit/community.ui.bit-cli.commands-provider',\n              supportedRange: '',\n              version: '',\n            },\n          ],\n        }),\n      }) // @ts-ignore\n    ).rejects.toThrowError('Peer \"@teambit/community.ui.bit-cli.commands-provider\" has an empty supportedRange');\n  });\n});\n"],"mappings":"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"}