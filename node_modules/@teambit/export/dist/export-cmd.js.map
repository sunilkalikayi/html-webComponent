{"version":3,"names":["ExportCmd","constructor","exportMain","name","description","WILDCARD_HELP","report","ids","eject","all","allVersions","originDirectly","ignoreMissingArtifacts","resume","componentsIds","nonExistOnBitMap","removedIds","missingScope","exportedLanes","ejectResults","export","includeNonStaged","resumeExportId","isEmpty","chalk","yellow","exportOutput","lanesOutput","length","bold","green","join","nonExistOnBitMapOutput","idsStr","map","id","toString","removedOutput","title","missingScopeOutput","ejectOutput","output","ejectTemplate","json","results"],"sources":["export-cmd.ts"],"sourcesContent":["import { Command, CommandOptions } from '@teambit/cli';\nimport ejectTemplate from '@teambit/legacy/dist/cli/templates/eject-template';\nimport { WILDCARD_HELP } from '@teambit/legacy/dist/constants';\nimport chalk from 'chalk';\nimport { isEmpty } from 'lodash';\nimport { ExportMain } from './export.main.runtime';\n\nexport class ExportCmd implements Command {\n  name = 'export [component-patterns...]';\n  description = 'export components from the workspace to remote scopes';\n  arguments = [\n    {\n      name: 'component-patterns...',\n      description:\n        'component IDs, component names, or component patterns (separated by space). Use patterns to export groups of components using a common scope or namespace. E.g., \"utils/*\" (wrap with double quotes)',\n    },\n  ];\n  extendedDescription = `bit export => export all staged components to their current scope, if checked out to a lane, export the lane as well\n  \\`bit export [id...]\\` => export the given ids to their current scope\n  ${WILDCARD_HELP('export remote-scope')}`;\n  alias = 'e';\n  helpUrl = 'components/exporting-components';\n  options = [\n    [\n      'e',\n      'eject',\n      'replace the exported components with their corresponding packages (to use these components without further maintaining them)',\n    ],\n    [\n      'a',\n      'all',\n      'export all components, including non-staged (useful when components in the remote scope are corrupted or missing)',\n    ],\n    [\n      '',\n      'all-versions',\n      'export not only staged versions but all of them (useful when versions in the remote scope are corrupted or missing)',\n    ],\n    [\n      '',\n      'origin-directly',\n      'EXPERIMENTAL. avoid export to the central hub, instead, export directly to the original scopes. not recommended!',\n    ],\n    [\n      '',\n      'resume <string>',\n      'in case the previous export failed and suggested to resume with an export-id, enter the id',\n    ],\n    [\n      '',\n      'ignore-missing-artifacts',\n      \"EXPERIMENTAL. don't throw an error when artifact files are missing. not recommended, unless you're sure the artifacts are in the remote\",\n    ],\n    ['j', 'json', 'show output in json format'],\n  ] as CommandOptions;\n  loader = true;\n  migration = true;\n  group = 'collaborate';\n  remoteOp = true;\n\n  constructor(private exportMain: ExportMain) {}\n\n  async report(\n    [ids = []]: [string[]],\n    {\n      eject = false,\n      all = false,\n      allVersions = false,\n      originDirectly = false,\n      ignoreMissingArtifacts = false,\n      resume,\n    }: any\n  ): Promise<string> {\n    const { componentsIds, nonExistOnBitMap, removedIds, missingScope, exportedLanes, ejectResults } =\n      await this.exportMain.export({\n        ids,\n        eject,\n        includeNonStaged: all || allVersions,\n        allVersions: allVersions || all,\n        originDirectly,\n        resumeExportId: resume,\n        ignoreMissingArtifacts,\n      });\n    if (isEmpty(componentsIds) && isEmpty(nonExistOnBitMap) && isEmpty(missingScope)) {\n      return chalk.yellow('nothing to export');\n    }\n    const exportOutput = () => {\n      if (isEmpty(componentsIds)) return '';\n      const lanesOutput = exportedLanes.length ? ` from lane ${chalk.bold(exportedLanes[0].name)}` : '';\n      return chalk.green(\n        `exported the following ${componentsIds.length} component(s)${lanesOutput}:\\n${chalk.bold(\n          componentsIds.join('\\n')\n        )}`\n      );\n    };\n    const nonExistOnBitMapOutput = () => {\n      // if includeDependencies is true, the nonExistOnBitMap might be the dependencies\n      if (isEmpty(nonExistOnBitMap)) return '';\n      const idsStr = nonExistOnBitMap.map((id) => id.toString()).join(', ');\n      return chalk.yellow(\n        `${idsStr}\\nexported successfully. bit did not update the workspace as the component files are not tracked. this might happen when a component was tracked in a different git branch. to fix it check if they where tracked in a different git branch, checkout to that branch and resync by running 'bit import'. or stay on your branch and track the components again using 'bit add'.\\n`\n      );\n    };\n    const removedOutput = () => {\n      if (!removedIds.length) return '';\n      const title = chalk.bold(`\\n\\nthe following component(s) have been marked as removed on the remote\\n`);\n      const idsStr = removedIds.join('\\n');\n      return title + idsStr;\n    };\n    const missingScopeOutput = () => {\n      if (isEmpty(missingScope)) return '';\n      const idsStr = missingScope.map((id) => id.toString()).join(', ');\n      return chalk.yellow(\n        `the following component(s) were not exported: ${chalk.bold(\n          idsStr\n        )}.\\nplease specify <remote> to export them, or set a \"defaultScope\" in your workspace config\\n\\n`\n      );\n    };\n    const ejectOutput = () => {\n      if (!ejectResults) return '';\n      const output = ejectTemplate(ejectResults);\n      return `\\n${output}`;\n    };\n\n    return nonExistOnBitMapOutput() + missingScopeOutput() + exportOutput() + ejectOutput() + removedOutput();\n  }\n\n  async json(\n    [ids = []]: [string[]],\n    {\n      eject = false,\n      all = false,\n      allVersions = false,\n      originDirectly = false,\n      ignoreMissingArtifacts = false,\n      resume,\n    }: any\n  ) {\n    const results = await this.exportMain.export({\n      ids,\n      eject,\n      includeNonStaged: all || allVersions,\n      allVersions: allVersions || all,\n      originDirectly,\n      resumeExportId: resume,\n      ignoreMissingArtifacts,\n    });\n\n    return results;\n  }\n}\n"],"mappings":"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"}