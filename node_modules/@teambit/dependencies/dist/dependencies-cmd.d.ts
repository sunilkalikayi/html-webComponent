import { Command, CommandOptions } from '@teambit/cli';
import { DependenciesMain } from './dependencies.main.runtime';
declare type GetDependenciesFlags = {
    tree: boolean;
};
export declare type SetDependenciesFlags = {
    dev?: boolean;
    peer?: boolean;
};
export declare class DependenciesGetCmd implements Command {
    name: string;
    arguments: {
        name: string;
        description: string;
    }[];
    group: string;
    description: string;
    alias: string;
    options: CommandOptions;
    report([id]: [string], { tree }: GetDependenciesFlags): Promise<string>;
}
export declare class DependenciesDebugCmd implements Command {
    name: string;
    arguments: {
        name: string;
        description: string;
    }[];
    group: string;
    description: string;
    alias: string;
    options: CommandOptions;
    report([id]: [string]): Promise<string>;
}
export declare class DependenciesSetCmd implements Command {
    private deps;
    name: string;
    arguments: {
        name: string;
        description: string;
    }[];
    group: string;
    description: string;
    alias: string;
    options: CommandOptions;
    constructor(deps: DependenciesMain);
    report([pattern, packages]: [string, string[]], setDepsFlags: SetDependenciesFlags): Promise<string>;
}
export declare class DependenciesRemoveCmd implements Command {
    private deps;
    name: string;
    arguments: {
        name: string;
        description: string;
    }[];
    group: string;
    description: string;
    alias: string;
    options: CommandOptions;
    constructor(deps: DependenciesMain);
    report([pattern, packages]: [string, string[]]): Promise<string>;
}
export declare class DependenciesCmd implements Command {
    name: string;
    alias: string;
    description: string;
    options: never[];
    group: string;
    commands: Command[];
    report([unrecognizedSubcommand]: [string]): Promise<string>;
}
export {};
