{"version":3,"names":["DependenciesGetCmd","name","description","report","id","tree","results","dependencies","idWithVersion","workspaceGraph","_getIdWithLatestVersion","getGraphAsTree","graph","graphAsTree","getDependenciesAsObjectTree","toString","archy","err","constructor","chalk","red","workspaceTree","scopeTree","scopeGraph","green","getDependenciesInfo","getScopeDependencies","IdNotFoundInGraph","length","toStringWithoutVersion","scopeTable","generateDependenciesInfoTable","workspaceTable","bold","DependenciesDebugCmd","JSON","stringify","undefined","DependenciesSetCmd","deps","COMPONENT_PATTERN_HELP","pattern","packages","setDepsFlags","changedComps","addedPackages","setDependency","join","DependenciesRemoveCmd","removeDependency","yellow","output","map","removedPackages","underline","DependenciesCmd","unrecognizedSubcommand"],"sources":["dependencies-cmd.ts"],"sourcesContent":["// eslint-disable-next-line max-classes-per-file\nimport { Command, CommandOptions } from '@teambit/cli';\nimport chalk from 'chalk';\nimport archy from 'archy';\nimport {\n  dependencies,\n  DependenciesResultsDebug,\n  DependenciesResults,\n} from '@teambit/legacy/dist/api/consumer/lib/dependencies';\nimport { generateDependenciesInfoTable } from '@teambit/legacy/dist/cli/templates/component-template';\nimport { IdNotFoundInGraph } from '@teambit/legacy/dist/scope/exceptions/id-not-found-in-graph';\nimport DependencyGraph from '@teambit/legacy/dist/scope/graph/scope-graph';\nimport { COMPONENT_PATTERN_HELP } from '@teambit/legacy/dist/constants';\nimport { DependenciesMain } from './dependencies.main.runtime';\n\ntype GetDependenciesFlags = {\n  tree: boolean;\n};\n\nexport type SetDependenciesFlags = {\n  dev?: boolean;\n  peer?: boolean;\n};\n\nexport class DependenciesGetCmd implements Command {\n  name = 'get <component-name>';\n  arguments = [{ name: 'component-name', description: 'component name or component id' }];\n  group = 'info';\n  description = 'show direct and indirect dependencies of the given component';\n  alias = '';\n  options = [['t', 'tree', 'EXPERIMENTAL. render dependencies as a tree, similar to \"npm ls\"']] as CommandOptions;\n\n  async report([id]: [string], { tree = false }: GetDependenciesFlags) {\n    const results = (await dependencies(id, false)) as DependenciesResults;\n\n    if (tree) {\n      const idWithVersion = results.workspaceGraph._getIdWithLatestVersion(results.id);\n      const getGraphAsTree = (graph: DependencyGraph) => {\n        try {\n          const graphAsTree = graph.getDependenciesAsObjectTree(idWithVersion.toString());\n          return archy(graphAsTree);\n        } catch (err: any) {\n          if (err.constructor.name === 'RangeError') {\n            return `${chalk.red('unable to generate a tree representation, the graph is too big or has cycles')}`;\n          }\n          throw err;\n        }\n      };\n      const workspaceTree = getGraphAsTree(results.workspaceGraph);\n      const scopeTree = getGraphAsTree(results.scopeGraph);\n      return `${chalk.green('workspace')}:\\n${workspaceTree}\\n\\n${chalk.green('scope')}:\\n${scopeTree}`;\n    }\n    const workspaceGraph = results.workspaceGraph.getDependenciesInfo(results.id);\n    const getScopeDependencies = () => {\n      try {\n        return results.scopeGraph.getDependenciesInfo(results.id);\n      } catch (err) {\n        if (err instanceof IdNotFoundInGraph) return []; // component might be new\n        throw err;\n      }\n    };\n    const scopeGraph = getScopeDependencies();\n    if (!scopeGraph.length && !workspaceGraph.length) {\n      return `no dependencies found for ${results.id.toString()}.\ntry running \"bit cat-component ${results.id.toStringWithoutVersion()}\" to see whether the component/version exists locally`;\n    }\n\n    const scopeTable = generateDependenciesInfoTable(scopeGraph, results.id);\n    const workspaceTable = generateDependenciesInfoTable(workspaceGraph, results.id);\n    return `${chalk.bold('Dependencies originated from workspace')}\n${workspaceTable || '<none>'}\n\n${chalk.bold('Dependencies originated from scope')}\n${scopeTable || '<none>'}`;\n  }\n}\n\nexport class DependenciesDebugCmd implements Command {\n  name = 'debug <component-name>';\n  arguments = [{ name: 'component-name', description: 'component name or component id' }];\n  group = 'info';\n  description = 'show the immediate dependencies and how their versions were determined';\n  alias = '';\n  options = [] as CommandOptions;\n\n  async report([id]: [string]) {\n    const results = (await dependencies(id, true)) as DependenciesResultsDebug;\n    return JSON.stringify(results, undefined, 4);\n  }\n}\n\nexport class DependenciesSetCmd implements Command {\n  name = 'set <component-pattern> <package...>';\n  arguments = [\n    { name: 'component-pattern', description: COMPONENT_PATTERN_HELP },\n    {\n      name: 'package...',\n      description:\n        'package name with or without a version, e.g. \"lodash@1.0.0\" or just \"lodash\" which will be resolved to the latest',\n    },\n  ];\n  group = 'info';\n  description = 'set a dependency to component(s)';\n  alias = '';\n  options = [\n    ['d', 'dev', 'add to the devDependencies'],\n    ['p', 'peer', 'add to the peerDependencies'],\n  ] as CommandOptions;\n\n  constructor(private deps: DependenciesMain) {}\n\n  async report([pattern, packages]: [string, string[]], setDepsFlags: SetDependenciesFlags) {\n    const { changedComps, addedPackages } = await this.deps.setDependency(pattern, packages, setDepsFlags);\n\n    return `${chalk.green('successfully updated dependencies')}\n${chalk.bold('changed components')}\n${changedComps.join('\\n')}\n\n${chalk.bold('added packages')}\n${JSON.stringify(addedPackages, undefined, 4)}`;\n  }\n}\n\nexport class DependenciesRemoveCmd implements Command {\n  name = 'remove <component-pattern> <package...>';\n  arguments = [\n    { name: 'component-pattern', description: COMPONENT_PATTERN_HELP },\n    {\n      name: 'package...',\n      description:\n        'package name with or without a version, e.g. \"lodash@1.0.0\" or just \"lodash\" which will remove all lodash instances of any version',\n    },\n  ];\n  group = 'info';\n  description = 'remove a dependency to component(s)';\n  alias = '';\n  options = [] as CommandOptions;\n\n  constructor(private deps: DependenciesMain) {}\n\n  async report([pattern, packages]: [string, string[]]) {\n    const results = await this.deps.removeDependency(pattern, packages);\n    if (!results.length) {\n      return chalk.yellow('the specified component-pattern do not use the entered packages. nothing to remove');\n    }\n\n    const output = results\n      .map(({ id, removedPackages }) => `${chalk.underline(id.toString())}\\n${removedPackages.join('\\n')}`)\n      .join('\\n\\n');\n\n    return `${chalk.green('successfully removed dependencies')}\\n${output}`;\n  }\n}\n\nexport class DependenciesCmd implements Command {\n  name = 'deps <sub-command>';\n  alias = 'dependencies';\n  description = 'manage dependencies';\n  options = [];\n  group = 'info';\n  commands: Command[] = [];\n\n  async report([unrecognizedSubcommand]: [string]) {\n    return chalk.red(\n      `\"${unrecognizedSubcommand}\" is not a subcommand of \"dependencies\", please run \"bit dependencies --help\" to list the subcommands`\n    );\n  }\n}\n"],"mappings":"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"}