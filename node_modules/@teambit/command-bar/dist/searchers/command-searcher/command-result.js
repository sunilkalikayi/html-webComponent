"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CommandResult = CommandResult;
function _react() {
  const data = _interopRequireDefault(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _classnames() {
  const data = _interopRequireDefault(require("classnames"));
  _classnames = function () {
    return data;
  };
  return data;
}
function _designUiStyles() {
  const data = require("@teambit/design.ui.styles.ellipsis");
  _designUiStyles = function () {
    return data;
  };
  return data;
}
function _uiFoundationUi() {
  const data = require("@teambit/ui-foundation.ui.keycap");
  _uiFoundationUi = function () {
    return data;
  };
  return data;
}
function _baseUiText() {
  const data = require("@teambit/base-ui.text.muted-text");
  _baseUiText = function () {
    return data;
  };
  return data;
}
function _commandResultModule() {
  const data = _interopRequireDefault(require("./command-result.module.scss"));
  _commandResultModule = function () {
    return data;
  };
  return data;
}
function CommandResult({
  command
}) {
  const {
    icon,
    iconAlt,
    displayName,
    keybinding
  } = command;
  const _keybinding = Array.isArray(keybinding) ? keybinding[0] : keybinding;
  return /*#__PURE__*/_react().default.createElement(_react().default.Fragment, null, icon && /*#__PURE__*/_react().default.createElement("img", {
    src: icon,
    alt: iconAlt,
    className: _commandResultModule().default.icon
  }), /*#__PURE__*/_react().default.createElement("div", {
    className: (0, _classnames().default)(_designUiStyles().ellipsis, _commandResultModule().default.name)
  }, displayName), _keybinding && /*#__PURE__*/_react().default.createElement(_uiFoundationUi().KeySequence, {
    className: (0, _classnames().default)(_commandResultModule().default.commandKeys, _baseUiText().mutedText)
  }, _keybinding));
}

//# sourceMappingURL=command-result.js.map