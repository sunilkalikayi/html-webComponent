import React, { ComponentType } from 'react';
import { SlotRegistry } from '@teambit/harmony';
import { UiUI } from '@teambit/ui';
import { PubsubUI } from '@teambit/pubsub';
import { ResultsComponentProps } from '@teambit/explorer.ui.command-bar';
import { SearchProvider } from './searchers';
import { Keybinding, CommandHandler, CommandId } from './types';
declare type SearcherSlot = SlotRegistry<SearchProvider[]>;
declare type CommandSlot = SlotRegistry<CommandEntry[]>;
export declare type CommandBarConfig = {
    debounce?: number;
};
export declare type CommandEntry = {
    id: CommandId;
    action: CommandHandler;
    keybinding?: Keybinding;
    displayName: string;
};
/** Quick launch actions. Use the `addSearcher` slot to extend the available actions */
export declare class CommandBarUI {
    private searcherSlot;
    private commandSlot;
    private config;
    private mousetrap;
    private commandSearcher;
    /** Opens the command bar */
    open: () => boolean;
    /** Closes the command bar */
    close: () => void;
    /** Add and autocomplete provider. To support keyboard navigation, each result should have a props `active: boolean`, and `exectue: () => any` */
    addSearcher(...commandSearcher: SearchProvider[]): this;
    /**
     * registers a command
     */
    addCommand(...originalCommands: CommandEntry[]): ((next: CommandHandler) => void)[];
    /**
     * executes command by name, if exists.
     * @param commandId
     */
    run(commandId: CommandId): any;
    /**
     * executes a keyboard shortcut manually
     */
    trigger: (key: string) => void;
    private search;
    private getCommand;
    private updateCommandsSearcher;
    private addKeybinding;
    /**
     * Opens and closes the command bar UI.
     */
    setVisibility?: (visible: boolean) => void;
    /**
     * generate the ui for command bar
     */
    CommandBar: ({ ResultComponent }: {
        ResultComponent?: React.ComponentType<ResultsComponentProps<import("@teambit/explorer.ui.command-bar").SearchResult[], any>> | undefined;
    }) => JSX.Element;
    constructor(searcherSlot: SearcherSlot, commandSlot: CommandSlot, config: CommandBarConfig);
    static dependencies: import("@teambit/harmony").Aspect[];
    static slots: (((registerFn: () => string) => SlotRegistry<SearchProvider>) | ((registerFn: () => string) => SlotRegistry<CommandEntry[]>))[];
    static defaultConfig: CommandBarConfig;
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    static provider([uiUi, pubsubUI]: [UiUI | undefined, PubsubUI | undefined], config: CommandBarConfig, [searcherSlot, commandSlots]: [SearcherSlot, CommandSlot]): Promise<CommandBarUI>;
}
export {};
