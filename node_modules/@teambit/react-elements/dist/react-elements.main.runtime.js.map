{"version":3,"names":["ReactElementsMain","constructor","elements","createTask","storageResolver","getWrapperTemplateFn","opts","getWrapperTemplateOptsWithDefaults","getWebpackTransformers","baseConfig","basePreviewConfigFactory","baseProdConfig","basePreviewProdConfigFactory","baseElementsTransformers","defaultTransformer","configMutator","merged","merge","Object","assign","elementsPrefix","provider","ElementsAspect","MainRuntime","ReactElementsAspect","addRuntime"],"sources":["react-elements.main.runtime.ts"],"sourcesContent":["import { MainRuntime } from '@teambit/cli';\nimport { ArtifactStorageResolver } from '@teambit/builder';\nimport { WebpackConfigTransformer } from '@teambit/webpack';\nimport ElementsAspect, { ElementsMain } from '@teambit/elements';\nimport { GetWrapperOpts, getWrapperTemplateFn } from './element-wrapper-template';\nimport basePreviewConfigFactory from './webpack/webpack.config.base';\nimport basePreviewProdConfigFactory from './webpack/webpack.config.base.prod';\n\nimport { ReactElementsAspect } from './react-elements.aspect';\n\nexport class ReactElementsMain {\n  constructor(private elements: ElementsMain) {}\n  createTask(storageResolver?: ArtifactStorageResolver) {\n    return this.elements.createTask(storageResolver);\n  }\n\n  getWrapperTemplateFn(opts?: Partial<GetWrapperOpts>) {\n    return getWrapperTemplateFn(this.getWrapperTemplateOptsWithDefaults(opts || {}));\n  }\n\n  getWebpackTransformers(): WebpackConfigTransformer[] {\n    const baseConfig = basePreviewConfigFactory(true);\n    const baseProdConfig = basePreviewProdConfigFactory();\n    const baseElementsTransformers = this.elements.getWebpackTransformers();\n\n    const defaultTransformer: WebpackConfigTransformer = (configMutator) => {\n      const merged = configMutator.merge([baseConfig, baseProdConfig]);\n      return merged;\n    };\n    return [...baseElementsTransformers, defaultTransformer];\n  }\n\n  private getWrapperTemplateOptsWithDefaults(opts: Partial<GetWrapperOpts>): GetWrapperOpts {\n    return Object.assign({}, { elementsPrefix: 'x' }, opts);\n  }\n\n  static slots = [];\n  static dependencies = [ElementsAspect];\n  static runtime = MainRuntime;\n  static async provider([elements]: [ElementsMain]) {\n    return new ReactElementsMain(elements);\n  }\n}\n\nReactElementsAspect.addRuntime(ReactElementsMain);\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEO,MAAMA,iBAAiB,CAAC;EAC7BC,WAAW,CAASC,QAAsB,EAAE;IAAA,KAAxBA,QAAsB,GAAtBA,QAAsB;EAAG;EAC7CC,UAAU,CAACC,eAAyC,EAAE;IACpD,OAAO,IAAI,CAACF,QAAQ,CAACC,UAAU,CAACC,eAAe,CAAC;EAClD;EAEAC,oBAAoB,CAACC,IAA8B,EAAE;IACnD,OAAO,IAAAD,8CAAoB,EAAC,IAAI,CAACE,kCAAkC,CAACD,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;EAClF;EAEAE,sBAAsB,GAA+B;IACnD,MAAMC,UAAU,GAAG,IAAAC,wBAAwB,EAAC,IAAI,CAAC;IACjD,MAAMC,cAAc,GAAG,IAAAC,4BAA4B,GAAE;IACrD,MAAMC,wBAAwB,GAAG,IAAI,CAACX,QAAQ,CAACM,sBAAsB,EAAE;IAEvE,MAAMM,kBAA4C,GAAIC,aAAa,IAAK;MACtE,MAAMC,MAAM,GAAGD,aAAa,CAACE,KAAK,CAAC,CAACR,UAAU,EAAEE,cAAc,CAAC,CAAC;MAChE,OAAOK,MAAM;IACf,CAAC;IACD,OAAO,CAAC,GAAGH,wBAAwB,EAAEC,kBAAkB,CAAC;EAC1D;EAEQP,kCAAkC,CAACD,IAA6B,EAAkB;IACxF,OAAOY,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE;MAAEC,cAAc,EAAE;IAAI,CAAC,EAAEd,IAAI,CAAC;EACzD;EAKA,aAAae,QAAQ,CAAC,CAACnB,QAAQ,CAAiB,EAAE;IAChD,OAAO,IAAIF,iBAAiB,CAACE,QAAQ,CAAC;EACxC;AACF;AAAC;AAAA,gCAhCYF,iBAAiB,WA0Bb,EAAE;AAAA,gCA1BNA,iBAAiB,kBA2BN,CAACsB,mBAAc,CAAC;AAAA,gCA3B3BtB,iBAAiB,aA4BXuB,kBAAW;AAM9BC,oCAAmB,CAACC,UAAU,CAACzB,iBAAiB,CAAC"}