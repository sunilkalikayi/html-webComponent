{"version":3,"names":["styleLoaderPath","require","resolve","moduleFileExtensions","shouldUseSourceMap","process","env","GENERATE_SOURCEMAP","imageInlineSizeLimit","parseInt","IMAGE_INLINE_SIZE_LIMIT","isEnvProduction","isEnvProductionProfile","argv","includes","baseStyleLoadersOptions","injectingLoader","MiniCssExtractPlugin","loader","cssLoaderPath","postCssLoaderPath","postCssConfig","extensions","map","ext","alias","react","module","strictExportPresence","rules","test","fullySpecified","oneOf","stylesRegexps","cssNoModulesRegex","use","generateStyleLoaders","merge","cssLoaderOpts","importLoaders","sourceMap","sideEffects","exclude","options","babelrc","configFile","customize","presets","cacheDirectory","cacheCompression","compact","cssModuleRegex","modules","getLocalIdent","getCSSModuleLocalIdent","sassNoModuleRegex","preProcessOptions","resolveUrlLoaderPath","preProcessorPath","sassModuleRegex","lessNoModuleRegex","lessModuleRegex","type","parser","dataUrlCondition","maxSize","dependency","not","titleProp","ref","plugins","filename","chunkFilename","IgnorePlugin","resourceRegExp","contextRegExp","filter","Boolean","performance"],"sources":["webpack.config.base.ts"],"sourcesContent":["import { merge } from 'lodash';\nimport 'style-loader';\nimport MiniCssExtractPlugin from 'mini-css-extract-plugin';\nimport getCSSModuleLocalIdent from 'react-dev-utils/getCSSModuleLocalIdent';\nimport { Configuration, IgnorePlugin } from 'webpack';\nimport * as stylesRegexps from '@teambit/webpack.modules.style-regexps';\nimport { generateStyleLoaders } from '@teambit/webpack.modules.generate-style-loaders';\nimport { postCssConfig } from './postcss.config';\n// Make sure the bit-react-transformer is a dependency\n// TODO: remove it once we can set policy from component to component then set it via the component.json\nimport '@teambit/react.babel.bit-react-transformer';\n// Make sure the mdx-loader is a dependency\nimport '@teambit/mdx.modules.mdx-loader';\n\nconst styleLoaderPath = require.resolve('style-loader');\n\nconst moduleFileExtensions = [\n  'web.mjs',\n  'mjs',\n  'web.js',\n  'js',\n  'web.ts',\n  'ts',\n  'web.tsx',\n  'tsx',\n  'json',\n  'web.jsx',\n  'jsx',\n  'mdx',\n  'md',\n];\n\n// Source maps are resource heavy and can cause out of memory issue for large source files.\nconst shouldUseSourceMap = process.env.GENERATE_SOURCEMAP !== 'false';\n\nconst imageInlineSizeLimit = parseInt(process.env.IMAGE_INLINE_SIZE_LIMIT || '10000');\n\n// This is the production and development configuration.\n// It is focused on developer experience, fast rebuilds, and a minimal bundle.\n// eslint-disable-next-line complexity\nexport default function (isEnvProduction = false): Configuration {\n  // Variable used for enabling profiling in Production\n  // passed into alias object. Uses a flag if passed into the build command\n  const isEnvProductionProfile = process.argv.includes('--profile');\n\n  const baseStyleLoadersOptions = {\n    injectingLoader: isEnvProduction ? MiniCssExtractPlugin.loader : styleLoaderPath,\n    cssLoaderPath: require.resolve('css-loader'),\n    postCssLoaderPath: require.resolve('postcss-loader'),\n    postCssConfig,\n  };\n\n  // We will provide `paths.publicUrlOrPath` to our app\n  // as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.\n  // Omit trailing slash as %PUBLIC_URL%/xyz looks better than %PUBLIC_URL%xyz.\n  // Get environment variables to inject into our app.\n  // const env = getClientEnvironment(publicUrlOrPath.slice(0, -1));\n\n  return {\n    resolve: {\n      // These are the reasonable defaults supported by the Node ecosystem.\n      // We also include JSX as a common component filename extension to support\n      // some tools, although we do not recommend using it, see:\n      // https://github.com/facebook/create-react-app/issues/290\n      // `web` extension prefixes have been added for better support\n      // for React Native Web.\n      extensions: moduleFileExtensions.map((ext) => `.${ext}`),\n\n      alias: {\n        'react/jsx-dev-runtime': require.resolve('react/jsx-dev-runtime.js'),\n        'react/jsx-runtime': require.resolve('react/jsx-runtime.js'),\n        // Support React Native Web\n        // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/\n        // TODO: @uri please remember to remove after publishing evangelist and base-ui\n        react: require.resolve('react'),\n        '@teambit/mdx.ui.mdx-scope-context': require.resolve('@teambit/mdx.ui.mdx-scope-context'),\n        'react-dom/server': require.resolve('react-dom/server'),\n        'react-dom': require.resolve('react-dom'),\n        '@mdx-js/react': require.resolve('@mdx-js/react'),\n\n        // Allows for better profiling with ReactDevTools\n        ...(isEnvProductionProfile && {\n          'react-dom$': 'react-dom/profiling',\n          'scheduler/tracing': 'scheduler/tracing-profiling',\n        }),\n      },\n    },\n    module: {\n      strictExportPresence: true,\n      rules: [\n        {\n          test: /\\.m?js/,\n          resolve: {\n            fullySpecified: false,\n          },\n        },\n        {\n          // \"oneOf\" will traverse all following loaders until one will\n          // match the requirements. When no loader matches it will fall\n          // back to the \"file\" loader at the end of the loader list.\n          oneOf: [\n            // \"postcss\" loader applies autoprefixer to our CSS.\n            // \"css\" loader resolves paths in CSS and adds assets as dependencies.\n            // \"style\" loader turns CSS into JS modules that inject <style> tags.\n            // In production, we use MiniCSSExtractPlugin to extract that CSS\n            // to a file, but in development \"style\" loader enables hot editing\n            // of CSS.\n            // By default we support CSS Modules with the extension .module.css\n            {\n              test: stylesRegexps.cssNoModulesRegex,\n              use: generateStyleLoaders(\n                merge({}, baseStyleLoadersOptions, {\n                  cssLoaderOpts: {\n                    importLoaders: 1,\n                    sourceMap: isEnvProduction || shouldUseSourceMap,\n                  },\n                })\n              ),\n              // Don't consider CSS imports dead code even if the\n              // containing package claims to have no side effects.\n              // Remove this when webpack adds a warning or an error for this.\n              // See https://github.com/webpack/webpack/issues/6571\n              sideEffects: true,\n            },\n\n            // Process application JS with Babel.\n            // The preset includes JSX, Flow, TypeScript, and some ESnext features.\n            {\n              test: /\\.(js|mjs|jsx|ts|tsx)$/,\n              exclude: [/node_modules/, /\\/dist\\//],\n              // consider: limit loader to files only in a capsule that has bitid in package.json\n              // descriptionData: { componentId: ComponentID.isValidObject },\n              // // or\n              // include: capsulePaths\n              loader: require.resolve('babel-loader'),\n              options: {\n                babelrc: false,\n                configFile: false,\n                customize: require.resolve('babel-preset-react-app/webpack-overrides'),\n                presets: [require.resolve('@babel/preset-react')],\n                // This is a feature of `babel-loader` for webpack (not Babel itself).\n                // It enables caching results in ./node_modules/.cache/babel-loader/\n                // directory for faster rebuilds.\n                cacheDirectory: true,\n                // See #6846 for context on why cacheCompression is disabled\n                cacheCompression: false,\n                compact: isEnvProduction,\n              },\n            },\n            // Process any JS outside of the app with Babel.\n            // Unlike the application JS, we only compile the standard ES features.\n            // Probably not needed in our use case\n            // {\n            //   test: /\\.(js|mjs)$/,\n            //   exclude: /@babel(?:\\/|\\\\{1,2})runtime/,\n            //   loader: require.resolve('babel-loader'),\n            //   options: {\n            //     babelrc: false,\n            //     configFile: false,\n            //     compact: false,\n            //     presets: [[require.resolve('babel-preset-react-app/dependencies'), { helpers: true }]],\n            //     cacheDirectory: true,\n            //     // See #6846 for context on why cacheCompression is disabled\n            //     cacheCompression: false,\n\n            //     // Babel sourcemaps are needed for debugging into node_modules\n            //     // code.  Without the options below, debuggers like VSCode\n            //     // show incorrect code and set breakpoints on the wrong lines.\n            //     sourceMaps: shouldUseSourceMap,\n            //     inputSourceMap: shouldUseSourceMap,\n            //   },\n            // },\n            // MDX support (move to the mdx aspect and extend from there)\n            {\n              test: /\\.mdx?$/,\n              exclude: [/node_modules/],\n              use: [\n                {\n                  loader: require.resolve('babel-loader'),\n                  options: {\n                    babelrc: false,\n                    configFile: false,\n                    presets: [require.resolve('@babel/preset-react'), require.resolve('@babel/preset-env')],\n                  },\n                },\n                {\n                  loader: require.resolve('@teambit/mdx.modules.mdx-loader'),\n                },\n              ],\n            },\n            // Adds support for CSS Modules (https://github.com/css-modules/css-modules)\n            // using the extension .module.css\n            {\n              test: stylesRegexps.cssModuleRegex,\n              use: generateStyleLoaders(\n                merge({}, baseStyleLoadersOptions, {\n                  cssLoaderOpts: {\n                    importLoaders: 1,\n                    sourceMap: isEnvProduction || shouldUseSourceMap,\n                    modules: {\n                      getLocalIdent: getCSSModuleLocalIdent,\n                    },\n                  },\n                  shouldUseSourceMap: isEnvProduction || shouldUseSourceMap,\n                })\n              ),\n            },\n            // Opt-in support for SASS (using .scss or .sass extensions).\n            // By default we support SASS Modules with the\n            // extensions .module.scss or .module.sass\n            {\n              test: stylesRegexps.sassNoModuleRegex,\n              use: generateStyleLoaders(\n                merge({}, baseStyleLoadersOptions, {\n                  cssLoaderOpts: {\n                    importLoaders: 3,\n                    sourceMap: isEnvProduction || shouldUseSourceMap,\n                  },\n                  shouldUseSourceMap: isEnvProduction || shouldUseSourceMap,\n                  preProcessOptions: {\n                    resolveUrlLoaderPath: require.resolve('resolve-url-loader'),\n                    preProcessorPath: require.resolve('sass-loader'),\n                  },\n                })\n              ),\n              // Don't consider CSS imports dead code even if the\n              // containing package claims to have no side effects.\n              // Remove this when webpack adds a warning or an error for this.\n              // See https://github.com/webpack/webpack/issues/6571\n              sideEffects: true,\n            },\n            // Adds support for CSS Modules, but using SASS\n            // using the extension .module.scss or .module.sass\n            {\n              test: stylesRegexps.sassModuleRegex,\n              use: generateStyleLoaders(\n                merge({}, baseStyleLoadersOptions, {\n                  cssLoaderOpts: {\n                    importLoaders: 3,\n                    sourceMap: isEnvProduction || shouldUseSourceMap,\n                    modules: {\n                      getLocalIdent: getCSSModuleLocalIdent,\n                    },\n                  },\n                  shouldUseSourceMap: isEnvProduction || shouldUseSourceMap,\n                  preProcessOptions: {\n                    resolveUrlLoaderPath: require.resolve('resolve-url-loader'),\n                    preProcessorPath: require.resolve('sass-loader'),\n                  },\n                })\n              ),\n            },\n            {\n              test: stylesRegexps.lessNoModuleRegex,\n              use: generateStyleLoaders(\n                merge({}, baseStyleLoadersOptions, {\n                  cssLoaderOpts: {\n                    importLoaders: 1,\n                    sourceMap: isEnvProduction || shouldUseSourceMap,\n                  },\n                  shouldUseSourceMap: isEnvProduction || shouldUseSourceMap,\n                  preProcessOptions: {\n                    resolveUrlLoaderPath: require.resolve('resolve-url-loader'),\n                    preProcessorPath: require.resolve('less-loader'),\n                  },\n                })\n              ),\n              // Don't consider CSS imports dead code even if the\n              // containing package claims to have no side effects.\n              // Remove this when webpack adds a warning or an error for this.\n              // See https://github.com/webpack/webpack/issues/6571\n              sideEffects: true,\n            },\n            {\n              test: stylesRegexps.lessModuleRegex,\n              use: generateStyleLoaders(\n                merge({}, baseStyleLoadersOptions, {\n                  cssLoaderOpts: {\n                    importLoaders: 1,\n                    sourceMap: isEnvProduction || shouldUseSourceMap,\n                    modules: {\n                      getLocalIdent: getCSSModuleLocalIdent,\n                    },\n                  },\n                  shouldUseSourceMap: isEnvProduction || shouldUseSourceMap,\n                  preProcessOptions: {\n                    resolveUrlLoaderPath: require.resolve('resolve-url-loader'),\n                    preProcessorPath: require.resolve('less-loader'),\n                  },\n                })\n              ),\n            },\n            {\n              test: [/\\.bmp$/, /\\.gif$/, /\\.jpe?g$/, /\\.png$/],\n              type: 'asset',\n              parser: {\n                dataUrlCondition: {\n                  maxSize: imageInlineSizeLimit,\n                },\n              },\n            },\n            {\n              // loads svg as both inlineUrl and react component, like:\n              // import starUrl, { ReactComponent as StarIcon } from './star.svg';\n              // (remove when there is native support for both opitons from webpack5 / svgr)\n              test: /\\.svg$/,\n              oneOf: [\n                {\n                  dependency: { not: ['url'] }, // exclude new URL calls\n                  use: [\n                    {\n                      loader: require.resolve('@svgr/webpack'),\n                      options: { titleProp: true, ref: true },\n                    },\n                    require.resolve('new-url-loader'),\n                  ],\n                },\n                {\n                  type: 'asset', // export a data URI or emit a separate file\n                },\n              ],\n            },\n            // \"file\" loader makes sure those assets get served by WebpackDevServer.\n            // When you `import` an asset, you get its (virtual) filename.\n            // In production, they would get copied to the `build` folder.\n            // This loader doesn't use a \"test\" so it will catch all modules\n            // that fall through the other loaders.\n            {\n              // Exclude `js` files to keep \"css\" loader working as it injects\n              // its runtime that would otherwise be processed through \"file\" loader.\n              // Also exclude `html` and `json` extensions so they get processed\n              // by webpacks internal loaders.\n              exclude: [/\\.(js|mjs|jsx|ts|tsx)$/, /\\.html$/, /\\.mdx?/, /\\.json$/, /\\.css$/],\n              type: 'asset',\n            },\n            // ** STOP ** Are you adding a new loader?\n            // Make sure to add the new loader(s) before the \"type:asset\" loader.\n          ],\n        },\n      ],\n    },\n    // @ts-ignore\n    plugins: [\n      isEnvProduction &&\n        new MiniCssExtractPlugin({\n          // Options similar to the same options in webpackOptions.output\n          // both options are optional\n          filename: 'static/css/[name].[contenthash:8].css',\n          chunkFilename: 'static/css/[name].[contenthash:8].chunk.css',\n        }),\n      // Moment.js is an extremely popular library that bundles large locale files\n      // by default due to how webpack interprets its code. This is a practical\n      // solution that requires the user to opt into importing specific locales.\n      // https://github.com/jmblog/how-to-optimize-momentjs-with-webpack\n      // You can remove this if you don't use Moment.js:\n      new IgnorePlugin({\n        resourceRegExp: /^\\.\\/locale$/,\n        contextRegExp: /moment$/,\n      }),\n    ].filter(Boolean),\n    // Turn off performance processing because we utilize\n    // our own hints via the FileSizeReporter\n    performance: false,\n  };\n}\n"],"mappings":"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"}