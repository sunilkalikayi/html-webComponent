{"version":3,"names":["NewCmd","constructor","generator","name","description","report","templateName","workspaceName","options","skipGit","standalone","workspacePath","appName","generateWorkspaceTemplate","chalk","white","green","yellow","bold","getBottomSection","cdLine","parts","push","join"],"sources":["new.cmd.ts"],"sourcesContent":["import { Command, CommandOptions } from '@teambit/cli';\nimport chalk from 'chalk';\nimport { GeneratorMain } from './generator.main.runtime';\n\nexport type NewOptions = {\n  aspect?: string;\n  defaultScope?: string;\n  skipGit?: boolean;\n  loadFrom?: string;\n  empty?: boolean;\n};\n\nexport class NewCmd implements Command {\n  name = 'new <template-name> <workspace-name>';\n  description = 'create a new workspace from a template';\n  arguments = [\n    {\n      name: 'template-name',\n      description:\n        \"the name of the workspace template (run 'bit templates', outside of a workspace, to get a list of available templates)\",\n    },\n    { name: 'workspace-name', description: 'the name for the new workspace and workspace directory' },\n  ];\n  alias = '';\n  loader = true;\n  group = 'start';\n  options = [\n    [\n      'a',\n      'aspect <aspect-id>',\n      'aspect-id of the template. mandatory for non-core aspects. helpful for core aspects in case of a name collision',\n    ],\n    ['d', 'default-scope <scope-name>', `set defaultScope in the new workspace.jsonc`],\n    ['', 'standalone', 'DEPRECATED. use --skip-git instead'],\n    ['s', 'skip-git', 'skip generation of Git repository'],\n    ['e', 'empty', 'empty workspace with no components (relevant for templates that add components by default)'],\n    [\n      '',\n      'load-from <path-to-template>',\n      'path to the workspace containing the template. helpful during a development of a workspace-template',\n    ],\n  ] as CommandOptions;\n\n  constructor(private generator: GeneratorMain) {}\n\n  async report([templateName, workspaceName]: [string, string], options: NewOptions & { standalone: boolean }) {\n    options.skipGit = options.skipGit ?? options.standalone;\n    const { workspacePath, appName } = await this.generator.generateWorkspaceTemplate(\n      workspaceName,\n      templateName,\n      options\n    );\n    return chalk.white(\n      `${chalk.green(`\n\nCongrats! A new workspace has been created successfully at '${workspacePath}'`)}\n\nInside the directory '${workspaceName}' you can run various commands including:\n\n      ${chalk.yellow('bit start')}\n        Starts the workspace in development mode\n\n      ${chalk.yellow('bit install')}\n        Installs any missing dependencies\n\n      ${chalk.yellow('bit status')}\n        Shows the status of the components\n\n      ${chalk.yellow('bit compile')}\n        Compiles the components\n\n      ${chalk.yellow('bit test')}\n        Runs the tests on all your components\n\n      ${chalk.yellow('bit templates')}\n        Shows all available component templates\n\n      ${chalk.yellow('bit help')}\n        Shows all available commands\n\n\n${chalk.green.bold(\"Let's get started!\")}\n\n      ${getBottomSection(workspaceName, appName)}\n      `\n    );\n  }\n}\n\nfunction getBottomSection(workspaceName: string, appName: string | undefined) {\n  const cdLine = chalk.yellow(`cd ${workspaceName}`);\n  const parts = [cdLine];\n  if (appName) {\n    parts.push(chalk.yellow(`      bit run ${appName}`));\n  }\n  parts.push(chalk.yellow(`      bit start`));\n  return parts.join('\\n');\n}\n"],"mappings":";;;;;;;;;;;;;;;;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAWO,MAAMA,MAAM,CAAoB;EA+BrCC,WAAW,CAASC,SAAwB,EAAE;IAAA,KAA1BA,SAAwB,GAAxBA,SAAwB;IAAA,8CA9BrC,sCAAsC;IAAA,qDAC/B,wCAAwC;IAAA,mDAC1C,CACV;MACEC,IAAI,EAAE,eAAe;MACrBC,WAAW,EACT;IACJ,CAAC,EACD;MAAED,IAAI,EAAE,gBAAgB;MAAEC,WAAW,EAAE;IAAyD,CAAC,CAClG;IAAA,+CACO,EAAE;IAAA,gDACD,IAAI;IAAA,+CACL,OAAO;IAAA,iDACL,CACR,CACE,GAAG,EACH,oBAAoB,EACpB,iHAAiH,CAClH,EACD,CAAC,GAAG,EAAE,4BAA4B,EAAG,6CAA4C,CAAC,EAClF,CAAC,EAAE,EAAE,YAAY,EAAE,oCAAoC,CAAC,EACxD,CAAC,GAAG,EAAE,UAAU,EAAE,mCAAmC,CAAC,EACtD,CAAC,GAAG,EAAE,OAAO,EAAE,4FAA4F,CAAC,EAC5G,CACE,EAAE,EACF,8BAA8B,EAC9B,qGAAqG,CACtG,CACF;EAE8C;EAE/C,MAAMC,MAAM,CAAC,CAACC,YAAY,EAAEC,aAAa,CAAmB,EAAEC,OAA6C,EAAE;IAAA;IAC3GA,OAAO,CAACC,OAAO,uBAAGD,OAAO,CAACC,OAAO,+DAAID,OAAO,CAACE,UAAU;IACvD,MAAM;MAAEC,aAAa;MAAEC;IAAQ,CAAC,GAAG,MAAM,IAAI,CAACV,SAAS,CAACW,yBAAyB,CAC/EN,aAAa,EACbD,YAAY,EACZE,OAAO,CACR;IACD,OAAOM,gBAAK,CAACC,KAAK,CACf,GAAED,gBAAK,CAACE,KAAK,CAAE;AACtB;AACA,8DAA8DL,aAAc,GAAE,CAAE;AAChF;AACA,wBAAwBJ,aAAc;AACtC;AACA,QAAQO,gBAAK,CAACG,MAAM,CAAC,WAAW,CAAE;AAClC;AACA;AACA,QAAQH,gBAAK,CAACG,MAAM,CAAC,aAAa,CAAE;AACpC;AACA;AACA,QAAQH,gBAAK,CAACG,MAAM,CAAC,YAAY,CAAE;AACnC;AACA;AACA,QAAQH,gBAAK,CAACG,MAAM,CAAC,aAAa,CAAE;AACpC;AACA;AACA,QAAQH,gBAAK,CAACG,MAAM,CAAC,UAAU,CAAE;AACjC;AACA;AACA,QAAQH,gBAAK,CAACG,MAAM,CAAC,eAAe,CAAE;AACtC;AACA;AACA,QAAQH,gBAAK,CAACG,MAAM,CAAC,UAAU,CAAE;AACjC;AACA;AACA;AACA,EAAEH,gBAAK,CAACE,KAAK,CAACE,IAAI,CAAC,oBAAoB,CAAE;AACzC;AACA,QAAQC,gBAAgB,CAACZ,aAAa,EAAEK,OAAO,CAAE;AACjD,OAAO,CACF;EACH;AACF;AAAC;AAED,SAASO,gBAAgB,CAACZ,aAAqB,EAAEK,OAA2B,EAAE;EAC5E,MAAMQ,MAAM,GAAGN,gBAAK,CAACG,MAAM,CAAE,MAAKV,aAAc,EAAC,CAAC;EAClD,MAAMc,KAAK,GAAG,CAACD,MAAM,CAAC;EACtB,IAAIR,OAAO,EAAE;IACXS,KAAK,CAACC,IAAI,CAACR,gBAAK,CAACG,MAAM,CAAE,iBAAgBL,OAAQ,EAAC,CAAC,CAAC;EACtD;EACAS,KAAK,CAACC,IAAI,CAACR,gBAAK,CAACG,MAAM,CAAE,iBAAgB,CAAC,CAAC;EAC3C,OAAOI,KAAK,CAACE,IAAI,CAAC,IAAI,CAAC;AACzB"}