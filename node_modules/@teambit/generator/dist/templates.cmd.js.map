{"version":3,"names":["TemplatesCmd","constructor","generator","report","args","templatesOptions","results","listTemplates","showAll","filter","template","hidden","grouped","groupBy","titleStr","isRunningInsideWorkspace","title","chalk","green","templateOutput","desc","description","name","dim","output","Object","keys","map","aspectId","names","join","blue","bold"],"sources":["templates.cmd.ts"],"sourcesContent":["import { Command, CommandOptions } from '@teambit/cli';\nimport chalk from 'chalk';\nimport { groupBy } from 'lodash';\nimport { GeneratorMain, TemplateDescriptor } from './generator.main.runtime';\n\nexport type TemplatesOptions = {\n  showAll?: boolean;\n};\n\nexport class TemplatesCmd implements Command {\n  name = 'templates';\n  description = 'list templates for \"bit create\" and \"bit new\"';\n  extendedDescription =\n    'list components templates when inside bit-workspace (for bit-create), otherwise, list workspace templates (for bit-new)';\n  alias = '';\n  loader = true;\n  group = 'development';\n  options = [['s', 'show-all', 'show hidden templates']] as CommandOptions;\n\n  constructor(private generator: GeneratorMain) {}\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async report(args: [], templatesOptions: TemplatesOptions) {\n    let results = await this.generator.listTemplates();\n\n    // Make sure that we don't list hidden templates\n    if (!templatesOptions.showAll) {\n      results = results.filter((template) => !template.hidden);\n    }\n\n    const grouped = groupBy(results, 'aspectId');\n    const titleStr = this.generator.isRunningInsideWorkspace()\n      ? `The following template(s) are available with the command bit create:  \\nExample - bit create <template-name> <component-name>`\n      : `The following template(s) are available with the command bit new: \\nExample - bit new <template-name> <workspace-name>`;\n    const title = chalk.green(`\\n${titleStr}\\n`);\n    const templateOutput = (template: TemplateDescriptor) => {\n      const desc = template.description ? ` (${template.description})` : '';\n      return `    ${template.name}${chalk.dim(desc)}`;\n    };\n    const output = Object.keys(grouped)\n      .map((aspectId) => {\n        const names = grouped[aspectId].map(templateOutput).join('\\n');\n        return `${chalk.blue.bold(aspectId)}\\n${names}\\n`;\n      })\n      .join('\\n');\n    return title + output;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAOO,MAAMA,YAAY,CAAoB;EAU3CC,WAAW,CAASC,SAAwB,EAAE;IAAA,KAA1BA,SAAwB,GAAxBA,SAAwB;IAAA,8CATrC,WAAW;IAAA,qDACJ,+CAA+C;IAAA,6DAE3D,yHAAyH;IAAA,+CACnH,EAAE;IAAA,gDACD,IAAI;IAAA,+CACL,aAAa;IAAA,iDACX,CAAC,CAAC,GAAG,EAAE,UAAU,EAAE,uBAAuB,CAAC,CAAC;EAEP;;EAE/C;EACA,MAAMC,MAAM,CAACC,IAAQ,EAAEC,gBAAkC,EAAE;IACzD,IAAIC,OAAO,GAAG,MAAM,IAAI,CAACJ,SAAS,CAACK,aAAa,EAAE;;IAElD;IACA,IAAI,CAACF,gBAAgB,CAACG,OAAO,EAAE;MAC7BF,OAAO,GAAGA,OAAO,CAACG,MAAM,CAAEC,QAAQ,IAAK,CAACA,QAAQ,CAACC,MAAM,CAAC;IAC1D;IAEA,MAAMC,OAAO,GAAG,IAAAC,iBAAO,EAACP,OAAO,EAAE,UAAU,CAAC;IAC5C,MAAMQ,QAAQ,GAAG,IAAI,CAACZ,SAAS,CAACa,wBAAwB,EAAE,GACrD,+HAA8H,GAC9H,wHAAuH;IAC5H,MAAMC,KAAK,GAAGC,gBAAK,CAACC,KAAK,CAAE,KAAIJ,QAAS,IAAG,CAAC;IAC5C,MAAMK,cAAc,GAAIT,QAA4B,IAAK;MACvD,MAAMU,IAAI,GAAGV,QAAQ,CAACW,WAAW,GAAI,KAAIX,QAAQ,CAACW,WAAY,GAAE,GAAG,EAAE;MACrE,OAAQ,OAAMX,QAAQ,CAACY,IAAK,GAAEL,gBAAK,CAACM,GAAG,CAACH,IAAI,CAAE,EAAC;IACjD,CAAC;IACD,MAAMI,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACd,OAAO,CAAC,CAChCe,GAAG,CAAEC,QAAQ,IAAK;MACjB,MAAMC,KAAK,GAAGjB,OAAO,CAACgB,QAAQ,CAAC,CAACD,GAAG,CAACR,cAAc,CAAC,CAACW,IAAI,CAAC,IAAI,CAAC;MAC9D,OAAQ,GAAEb,gBAAK,CAACc,IAAI,CAACC,IAAI,CAACJ,QAAQ,CAAE,KAAIC,KAAM,IAAG;IACnD,CAAC,CAAC,CACDC,IAAI,CAAC,IAAI,CAAC;IACb,OAAOd,KAAK,GAAGQ,MAAM;EACvB;AACF;AAAC"}