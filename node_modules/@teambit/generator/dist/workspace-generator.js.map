{"version":3,"names":["WorkspaceGenerator","constructor","workspaceName","options","template","aspectComponent","workspacePath","resolve","generate","fs","existsSync","Error","ensureDir","process","chdir","initGit","init","skipGit","writeWorkspaceFiles","reloadBitInWorkspaceDir","forkComponentsFromRemote","importComponentsFromRemote","install","undefined","dedupe","import","copyPeerToRuntimeOnRoot","copyPeerToRuntimeOnComponents","updateExisting","err","remove","gitExecutablePath","getGitExecutablePath","params","execa","exitCodeName","GitNotFound","buildUI","uiMain","harmony","get","UIAspect","id","createRuntime","workspaceContext","name","defaultScope","empty","templateFiles","generateFiles","Promise","all","map","templateFile","outputFile","join","relativePath","content","loadBit","workspace","WorkspaceAspect","InstallAspect","loggerMain","LoggerAspect","logger","createLogger","GeneratorAspect","importer","ImporterAspect","forking","ForkingAspect","componentsToFork","importComponents","fork","length","componentsToForkRestructured","targetName","path","sourceId","targetId","forkMultipleFromRemote","scope","refactor","clearCache","compileComponents","componentsToImport","pMapSeries","componentToImport","ids","installNpmPackages","writeToPath","bitMap","write","compiler","CompilerAspect","compileOnWorkspace"],"sources":["workspace-generator.ts"],"sourcesContent":["import fs from 'fs-extra';\nimport { loadBit } from '@teambit/bit';\nimport { Harmony } from '@teambit/harmony';\nimport { Component } from '@teambit/component';\nimport execa from 'execa';\nimport pMapSeries from 'p-map-series';\nimport UIAspect, { UiMain } from '@teambit/ui';\nimport { Logger, LoggerAspect, LoggerMain } from '@teambit/logger';\nimport { WorkspaceAspect, Workspace } from '@teambit/workspace';\nimport ForkingAspect, { ForkingMain } from '@teambit/forking';\nimport { init } from '@teambit/legacy/dist/api/consumer';\nimport ImporterAspect, { ImporterMain } from '@teambit/importer';\nimport { CompilerAspect, CompilerMain } from '@teambit/compiler';\nimport getGitExecutablePath from '@teambit/legacy/dist/utils/git/git-executable';\nimport GitNotFound from '@teambit/legacy/dist/utils/git/exceptions/git-not-found';\nimport { resolve, join } from 'path';\nimport { ComponentID } from '@teambit/component-id';\nimport { InstallAspect, InstallMain } from '@teambit/install';\nimport { WorkspaceTemplate, WorkspaceContext } from './workspace-template';\nimport { NewOptions } from './new.cmd';\nimport { GeneratorAspect } from './generator.aspect';\n\nexport type GenerateResult = { id: ComponentID; dir: string; files: string[]; envId: string };\n\nexport class WorkspaceGenerator {\n  private workspacePath: string;\n  private harmony: Harmony;\n  private workspace: Workspace;\n  private install: InstallMain;\n  private importer: ImporterMain;\n  private logger: Logger;\n  private forking: ForkingMain;\n  constructor(\n    private workspaceName: string,\n    private options: NewOptions,\n    private template: WorkspaceTemplate,\n    private aspectComponent?: Component\n  ) {\n    this.workspacePath = resolve(this.workspaceName);\n  }\n\n  async generate(): Promise<string> {\n    if (fs.existsSync(this.workspacePath)) {\n      throw new Error(`unable to create a workspace at \"${this.workspaceName}\", this path already exist`);\n    }\n    await fs.ensureDir(this.workspacePath);\n    try {\n      process.chdir(this.workspacePath);\n      await this.initGit();\n      await init(this.workspacePath, this.options.skipGit, false, false, false, false, false, {});\n      await this.writeWorkspaceFiles();\n      await this.reloadBitInWorkspaceDir();\n      await this.forkComponentsFromRemote();\n      await this.importComponentsFromRemote();\n      await this.install.install(undefined, {\n        dedupe: true,\n        import: false,\n        copyPeerToRuntimeOnRoot: true,\n        copyPeerToRuntimeOnComponents: false,\n        updateExisting: false,\n      });\n      // await this.buildUI(); // disabled for now. it takes too long\n    } catch (err: any) {\n      await fs.remove(this.workspacePath);\n      throw err;\n    }\n\n    return this.workspacePath;\n  }\n\n  private async initGit() {\n    if (this.options.skipGit) return;\n    const gitExecutablePath = getGitExecutablePath();\n    const params = ['init'];\n    try {\n      await execa(gitExecutablePath, params);\n    } catch (err: any) {\n      if (err.exitCodeName === 'ENOENT') {\n        throw new GitNotFound(gitExecutablePath, err);\n      }\n      throw err;\n    }\n  }\n\n  private async buildUI() {\n    const uiMain = this.harmony.get<UiMain>(UIAspect.id);\n    await uiMain.createRuntime({});\n  }\n\n  /**\n   * writes the generated template files to the default directory set in the workspace config\n   */\n  private async writeWorkspaceFiles(): Promise<void> {\n    const workspaceContext: WorkspaceContext = {\n      name: this.workspaceName,\n      defaultScope: this.options.defaultScope,\n      empty: this.options.empty,\n      aspectComponent: this.aspectComponent,\n      template: this.template,\n    };\n    const templateFiles = await this.template.generateFiles(workspaceContext);\n    await Promise.all(\n      templateFiles.map(async (templateFile) => {\n        await fs.outputFile(join(this.workspacePath, templateFile.relativePath), templateFile.content);\n      })\n    );\n  }\n\n  private async reloadBitInWorkspaceDir() {\n    this.harmony = await loadBit(this.workspacePath);\n    this.workspace = this.harmony.get<Workspace>(WorkspaceAspect.id);\n    this.install = this.harmony.get<InstallMain>(InstallAspect.id);\n    const loggerMain = this.harmony.get<LoggerMain>(LoggerAspect.id);\n    this.logger = loggerMain.createLogger(GeneratorAspect.id);\n    this.importer = this.harmony.get<ImporterMain>(ImporterAspect.id);\n    this.forking = this.harmony.get<ForkingMain>(ForkingAspect.id);\n  }\n\n  private async forkComponentsFromRemote() {\n    if (this.options.empty) return;\n    const componentsToFork = this.template?.importComponents?.() || this.template?.fork?.() || [];\n    if (!componentsToFork.length) return;\n    const componentsToForkRestructured = componentsToFork.map(({ id, targetName, path }) => ({\n      sourceId: id,\n      targetId: targetName,\n      path,\n    }));\n    await this.forking.forkMultipleFromRemote(componentsToForkRestructured, {\n      scope: this.workspace.defaultScope,\n      refactor: true,\n      install: false,\n    });\n    this.workspace.clearCache();\n    await this.compileComponents();\n  }\n\n  private async importComponentsFromRemote() {\n    if (this.options.empty) return;\n    const componentsToImport = this.template?.import?.() || [];\n\n    if (!componentsToImport.length) return;\n\n    await pMapSeries(componentsToImport, async (componentToImport) => {\n      await this.importer.import(\n        {\n          ids: [componentToImport.id],\n          installNpmPackages: false,\n          writeToPath: componentToImport.path,\n        },\n        []\n      );\n    });\n\n    await this.workspace.bitMap.write();\n    this.workspace.clearCache();\n    await this.compileComponents();\n  }\n\n  private async compileComponents() {\n    const compiler = this.harmony.get<CompilerMain>(CompilerAspect.id);\n    await compiler.compileOnWorkspace();\n  }\n}\n"],"mappings":"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"}