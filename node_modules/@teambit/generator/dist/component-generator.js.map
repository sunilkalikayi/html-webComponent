{"version":3,"names":["ComponentGenerator","constructor","workspace","componentIds","options","template","envs","newComponentHelper","aspectId","generate","dirsToDeleteIfFailed","generateResults","pMapSeries","componentId","componentPath","getNewComponentPath","path","fs","existsSync","join","BitError","hasName","fullName","push","generateOneComponent","err","deleteGeneratedComponents","bitMap","write","dirs","Promise","all","map","dir","absoluteDir","remove","code","name","namePascalCase","camelcase","pascalCase","nameCamelCase","files","generateFiles","mainFile","find","file","isMain","writeComponentFiles","addResults","track","rootDir","relativePath","componentName","defaultScope","scope","component","get","hasEnvConfiguredOriginally","hasEnvConfigured","envBeforeConfigChanges","getEnv","config","templateEnv","EnvsAspect","id","env","Object","keys","length","undefined","configWithEnv","addEnvIfProvidedByFlag","setEntireConfig","getEnvData","envFromFlag","envFromTemplate","envId","setBy","envSetBy","userEnv","userEnvId","resolveComponentId","userEnvIdWithPotentialVersion","resolveEnvIdWithPotentialVersionForConfig","toStringWithoutVersion","templateFiles","dataToPersist","DataToPersist","vinylFiles","templateFile","templateFileVinyl","Vinyl","base","contents","Buffer","from","content","AbstractVinyl","fromVinyl","results","v","addManyFiles","addBasePath","persistAllToFS"],"sources":["component-generator.ts"],"sourcesContent":["import Vinyl from 'vinyl';\nimport fs from 'fs-extra';\nimport pMapSeries from 'p-map-series';\nimport path from 'path';\nimport { Workspace } from '@teambit/workspace';\nimport EnvsAspect, { EnvsMain } from '@teambit/envs';\nimport camelcase from 'camelcase';\nimport { BitError } from '@teambit/bit-error';\nimport { PathOsBasedRelative } from '@teambit/legacy/dist/utils/path';\nimport { AbstractVinyl } from '@teambit/legacy/dist/consumer/component/sources';\nimport DataToPersist from '@teambit/legacy/dist/consumer/component/sources/data-to-persist';\nimport { NewComponentHelperMain } from '@teambit/new-component-helper';\nimport { ComponentID } from '@teambit/component-id';\nimport { ComponentTemplate, ComponentFile, ComponentConfig } from './component-template';\nimport { CreateOptions } from './create.cmd';\n\nexport type GenerateResult = { id: ComponentID; dir: string; files: string[]; envId: string; envSetBy: string };\n\nexport class ComponentGenerator {\n  constructor(\n    private workspace: Workspace,\n    private componentIds: ComponentID[],\n    private options: CreateOptions,\n    private template: ComponentTemplate,\n    private envs: EnvsMain,\n    private newComponentHelper: NewComponentHelperMain,\n    private aspectId: string\n  ) {}\n\n  async generate(): Promise<GenerateResult[]> {\n    const dirsToDeleteIfFailed: string[] = [];\n    const generateResults = await pMapSeries(this.componentIds, async (componentId) => {\n      try {\n        const componentPath = this.newComponentHelper.getNewComponentPath(componentId, this.options.path);\n        if (fs.existsSync(path.join(this.workspace.path, componentPath))) {\n          throw new BitError(`unable to create a component at \"${componentPath}\", this path already exist`);\n        }\n        if (await this.workspace.hasName(componentId.fullName)) {\n          throw new BitError(\n            `unable to create a component \"${componentId.fullName}\", a component with the same name already exist`\n          );\n        }\n        dirsToDeleteIfFailed.push(componentPath);\n        return await this.generateOneComponent(componentId, componentPath);\n      } catch (err: any) {\n        await this.deleteGeneratedComponents(dirsToDeleteIfFailed);\n        throw err;\n      }\n    });\n\n    await this.workspace.bitMap.write();\n\n    return generateResults;\n  }\n\n  private async deleteGeneratedComponents(dirs: string[]) {\n    await Promise.all(\n      dirs.map(async (dir) => {\n        const absoluteDir = path.join(this.workspace.path, dir);\n        try {\n          await fs.remove(absoluteDir);\n        } catch (err: any) {\n          if (err.code !== 'ENOENT') {\n            // if not exist, it's fine\n            throw err;\n          }\n        }\n      })\n    );\n  }\n\n  private async generateOneComponent(componentId: ComponentID, componentPath: string): Promise<GenerateResult> {\n    const name = componentId.name;\n    const namePascalCase = camelcase(name, { pascalCase: true });\n    const nameCamelCase = camelcase(name);\n    const files = this.template.generateFiles({ name, namePascalCase, nameCamelCase, componentId });\n    const mainFile = files.find((file) => file.isMain);\n    await this.writeComponentFiles(componentPath, files);\n    const addResults = await this.workspace.track({\n      rootDir: componentPath,\n      mainFile: mainFile?.relativePath,\n      componentName: componentId.fullName,\n      defaultScope: this.options.scope,\n    });\n    const component = await this.workspace.get(componentId);\n    const hasEnvConfiguredOriginally = this.envs.hasEnvConfigured(component);\n    const envBeforeConfigChanges = this.envs.getEnv(component);\n\n    let config = this.template.config;\n    if (config && typeof config === 'function') {\n      config = config({ aspectId: this.aspectId });\n    }\n\n    const templateEnv = config?.[EnvsAspect.id]?.env;\n\n    if (config && templateEnv && hasEnvConfiguredOriginally) {\n      // remove the env we got from the template.\n      delete config[templateEnv];\n      delete config[EnvsAspect.id].env;\n      if (Object.keys(config[EnvsAspect.id]).length === 0) delete config[EnvsAspect.id];\n      if (Object.keys(config).length === 0) config = undefined;\n    }\n\n    const configWithEnv = await this.addEnvIfProvidedByFlag(config);\n    if (configWithEnv) this.workspace.bitMap.setEntireConfig(component.id, configWithEnv);\n\n    const getEnvData = () => {\n      const envFromFlag = this.options.env; // env entered by the user when running `bit create --env`\n      const envFromTemplate = config?.[EnvsAspect.id]?.env;\n      if (envFromFlag) {\n        return {\n          envId: envFromFlag,\n          setBy: '--env flag',\n        };\n      }\n      if (envFromTemplate) {\n        return {\n          envId: envFromTemplate,\n          setBy: 'template',\n        };\n      }\n      return {\n        envId: envBeforeConfigChanges.id,\n        setBy: hasEnvConfiguredOriginally ? 'workspace variants' : '<default>',\n      };\n    };\n    const { envId, setBy } = getEnvData();\n    return {\n      id: componentId,\n      dir: componentPath,\n      files: addResults.files,\n      envId,\n      envSetBy: setBy,\n    };\n  }\n\n  private async addEnvIfProvidedByFlag(config?: ComponentConfig): Promise<ComponentConfig | undefined> {\n    const userEnv = this.options.env; // env entered by the user when running `bit create --env`\n    const templateEnv = config?.[EnvsAspect.id]?.env;\n    if (!userEnv || userEnv === templateEnv) {\n      return config;\n    }\n    config = config || {};\n    if (templateEnv) {\n      // the component template has an env and the user wants a different env.\n      delete config[templateEnv];\n    }\n    const userEnvId = await this.workspace.resolveComponentId(userEnv);\n    const userEnvIdWithPotentialVersion = await this.workspace.resolveEnvIdWithPotentialVersionForConfig(userEnvId);\n    config[userEnvIdWithPotentialVersion] = {};\n    config[EnvsAspect.id] = config[EnvsAspect.id] || {};\n    config[EnvsAspect.id].env = userEnvId.toStringWithoutVersion();\n    return config;\n  }\n\n  /**\n   * writes the generated template files to the default directory set in the workspace config\n   */\n  private async writeComponentFiles(\n    componentPath: string,\n    templateFiles: ComponentFile[]\n  ): Promise<PathOsBasedRelative[]> {\n    const dataToPersist = new DataToPersist();\n    const vinylFiles = templateFiles.map((templateFile) => {\n      const templateFileVinyl = new Vinyl({\n        base: componentPath,\n        path: path.join(componentPath, templateFile.relativePath),\n        contents: Buffer.from(templateFile.content),\n      });\n      return AbstractVinyl.fromVinyl(templateFileVinyl);\n    });\n    const results = vinylFiles.map((v) => v.path);\n    dataToPersist.addManyFiles(vinylFiles);\n    dataToPersist.addBasePath(this.workspace.path);\n    await dataToPersist.persistAllToFS();\n    return results;\n  }\n}\n"],"mappings":"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"}