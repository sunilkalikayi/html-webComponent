{"version":3,"names":["mainRuntime","name","namePascalCase"],"sources":["main-runtime.ts"],"sourcesContent":["import { ComponentContext } from '@teambit/generator';\n\nexport function mainRuntime({ name, namePascalCase }: ComponentContext) {\n  return `import { MainRuntime } from '@teambit/cli';\nimport { GeneratorMain, GeneratorAspect, ComponentContext } from '@teambit/generator';\nimport { ${namePascalCase}Aspect } from './${name}.aspect';\n\nexport class ${namePascalCase}Main {\n  static slots = [];\n  static dependencies = [GeneratorAspect];\n  static runtime = MainRuntime;\n  static async provider([generator]: [GeneratorMain]) {\n  /**\n  * Array of templates. Add as many templates as you want\n  * Separate the templates to multiple files if you prefer\n  * Modify, add or remove files as needed\n  * See the docs file of this component for more info\n  */\n\n  generator.registerComponentTemplate([\n      {\n        name: 'component1',\n        description: 'description for component1',\n        generateFiles: (context: ComponentContext) => {\n          return [\n\n            // index file\n            {\n              relativePath: 'index.ts',\n              isMain: true,\n              content: \\`export { \\${context.namePascalCase} } from './\\${context.name}';\nexport type { \\${context.namePascalCase}Props } from './\\${context.name}';\n\\`,\n            },\n\n            // component file\n            {\n              relativePath: \\`\\${context.name}.tsx\\`,\n              content: \\`import React from 'react';\n\nexport type \\${context.namePascalCase}Props = {\n  /**\n   * a text to be rendered in the component.\n   */\n  text: string\n};\n\nexport function \\${context.namePascalCase}({ text }: \\${context.namePascalCase}Props) {\n  return (\n    <div>\n      {text}\n    </div>\n  );\n}\\`,\n            },\n\n            // docs file\n            {\n              relativePath: \\`\\${context.name}.docs.mdx\\`,\n              content: \\`---\ndescription: 'A React Component for rendering text.'\nlabels: ['text', 'ui']\n---\n\nimport { \\${context.namePascalCase} } from './\\${context.name}';\n\\`\n            },\n\n            // composition file\n            {\n              relativePath: \\`\\${context.name}.composition.tsx\\`,\n              content: \\`import React from 'react';\nimport { \\${context.namePascalCase} } from './\\${context.name}';\n\nexport const Basic\\${context.namePascalCase}  = () => (\n  <\\${context.namePascalCase}  text=\"hello from \\${context.namePascalCase} \" />\n);\n\\`\n            },\n\n            // test file\n            {\n              relativePath: \\`\\${context.name}.spec.tsx\\`,\n              content: \\`import React from 'react';\nimport { render } from '@testing-library/react';\nimport { Basic\\${context.namePascalCase} } from './\\${context.name}.composition';\n\nit('should render with the correct text', () => {\n  const { getByText } = render(<Basic\\${context.namePascalCase} />);\n  const rendered = getByText('hello from \\${context.namePascalCase}');\n  expect(rendered).toBeTruthy();\n});\n\\`\n            },\n            // add more files here such as css/sass\n          ];\n        },\n      },\n\n    // component 2\n    {\n        name: 'component2',\n        description: 'description for component2',\n        generateFiles: (context: ComponentContext) => {\n          return [\n\n            // index file\n            {\n              relativePath: 'index.ts',\n              isMain: true,\n              content: \\`export {} from '';\n\\`,\n            },\n          ]\n        }\n      }\n    ]);\n\n    return new ${namePascalCase}Main();\n  }\n}\n\n${namePascalCase}Aspect.addRuntime(${namePascalCase}Main);\n`;\n}\n"],"mappings":";;;;;;AAEO,SAASA,WAAW,CAAC;EAAEC,IAAI;EAAEC;AAAiC,CAAC,EAAE;EACtE,OAAQ;AACV;AACA,WAAWA,cAAe,oBAAmBD,IAAK;AAClD;AACA,eAAeC,cAAeiBAAiBA,cAAe;AAChC;AACA;AACA;AACA,EAAEA,cAAe,qBAAoBA,cAAe;AACpD,CAAC;AACD"}