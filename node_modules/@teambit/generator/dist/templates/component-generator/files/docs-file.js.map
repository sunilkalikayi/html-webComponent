{"version":3,"names":["docsFile"],"sources":["docs-file.ts"],"sourcesContent":["export function docsFile() {\n  return `### Configuring your Generator\n\nEdit your \\`workspace.jsonc\\` file and set this component to use the \\`teambit.harmony/aspect\\` env under the variants object.\n\n\\`\\`\\`json\n\"teambit.workspace/variants\": {\n  \"{my-components}\": {\n    \"teambit.harmony/aspect\": {}\n  },\n}\n\\`\\`\\`\n\nTo check if your component is using the correct env you can run \\`bit envs\\` or \\`bit show my-components\\`\n\nEdit your \\`workspace.jsonc\\` file and add the component id, (scope name / component name) to teambit generator. This should go at root level. The component id can be found in the \\`aspect.ts\\` file:\n\n\\`\\`\\`json\n{\n  \"teambit.generator/generator\": {\n    \"aspects\": [\"my-scope-name/my-components\"]\n  },\n}\n\\`\\`\\`\n\nThis registers the component aspect so that your templates will appear in the CLI when you run \\`bit templates\\`.\n\n### Modifying your Generator\n\nThe \\`my-components.main.runtime.ts\\` file contains an array of templates that you can modify and add to to create different templates and numerous files to be generated.\n\n### Using your Generator\n\nUse your generator to create the component files\n\n\\`\\`\\`bash\nbit create my-components component1\n\\`\\`\\`\n\n### Exporting your Generator\n\nTag and export your generator component so you can use it in any other workspace. Make sure the scope name is set correctly in the \\`aspect.ts\\` file before tagging and exporting. Once you have tagged and exported the component you can add it to the \\`workspace.jsonc\\` file in the workspace where you want to use this generator.\n\n\\`\\`\\`json\n{\n  \"teambit.generator/generator\": {\n    \"aspects\": [\"my-scope-name/my-components\"]\n  },\n}\n\\`\\`\\`\n\nRun \\`bit templates\\` to see your generator and then use it to generate you components.\n`;\n}\n"],"mappings":";;;;;;AAAO,SAASA,QAAQ,GAAG;EACzB,OAAQ;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD"}