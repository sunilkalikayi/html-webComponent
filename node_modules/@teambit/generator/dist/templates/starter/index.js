"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.starterTemplate = void 0;
function _index() {
  const data = require("./files/index");
  _index = function () {
    return data;
  };
  return data;
}
function _starter() {
  const data = require("./files/starter");
  _starter = function () {
    return data;
  };
  return data;
}
function _docsFile() {
  const data = require("./files/docs-file");
  _docsFile = function () {
    return data;
  };
  return data;
}
function _gitIgnoreTpl() {
  const data = require("./files/git-ignore-tpl");
  _gitIgnoreTpl = function () {
    return data;
  };
  return data;
}
function _readmeTpl() {
  const data = require("./files/readme-tpl");
  _readmeTpl = function () {
    return data;
  };
  return data;
}
function _workspaceConfigTpl() {
  const data = require("./files/workspace-config-tpl");
  _workspaceConfigTpl = function () {
    return data;
  };
  return data;
}
const starterTemplate = {
  name: 'starter',
  description: 'create your own starter - \nDocs: https://bit.dev/docs/dev-services/generator/generate-workspace',
  generateFiles: context => {
    return [{
      relativePath: 'index.ts',
      content: (0, _index().indexFile)(context),
      isMain: true
    }, {
      relativePath: `${context.name}.starter.ts`,
      content: (0, _starter().starterFile)()
    }, {
      relativePath: `${context.name}.docs.mdx`,
      content: (0, _docsFile().docsFile)()
    }, {
      relativePath: 'template/files/git-ignore.ts',
      content: (0, _gitIgnoreTpl().gitIgnoreTemplate)()
    }, {
      relativePath: 'template/files/readme-file.ts',
      content: (0, _readmeTpl().readmeTemplate)()
    }, {
      relativePath: 'template/files/workspace-config.ts',
      content: (0, _workspaceConfigTpl().workspaceConfigTemplate)()
    }];
  },
  config: {
    'teambit.harmony/aspect': {},
    'teambit.envs/envs': {
      env: 'teambit.harmony/aspect'
    }
  }
};
exports.starterTemplate = starterTemplate;

//# sourceMappingURL=index.js.map