{"version":3,"names":["RenamingMain","constructor","workspace","install","newComponentHelper","deprecation","refactoring","config","rename","sourceIdStr","targetIdStr","options","sourceId","resolveComponentId","isTagged","hasVersion","sourceComp","get","targetId","getNewComponentId","undefined","scope","getConfig","writeAndAddNewComp","deprecate","bitMap","renameNewComponent","write","refactor","allComponents","list","changedComponents","refactorDependencyName","Promise","all","map","comp","link","getRenamingInfo","component","renameConfig","state","aspects","RenamingAspect","id","renamedFrom","ComponentID","fromObject","renameScope","oldScope","newScope","componentsUsingOldScope","filter","length","defaultScope","BitError","exported","_legacy","hasScope","idsStr","toString","join","tagged","setDefaultScope","forEach","removeDefaultScope","refactoredIds","legacyComps","c","_consumer","packagesToReplace","oldStr","componentIdToPackageName","newStr","bindingPrefix","getBindingPrefixByDefaultScope","replaceMultipleStrings","renameScopeOfAspectIdsInWorkspaceConfig","push","scopeRenamedComponentIds","ids","workspaceConfig","Error","hasChanged","changed","renameExtensionInRaw","toStringWithoutVersion","changeScope","fromExisting","getConfigFromExistingToNewComponent","toObject","provider","cli","componentMain","graphql","renaming","register","RenameCmd","scopeCommand","getCommand","commands","ScopeRenameCmd","renamingSchema","registerShowFragments","RenamingFragment","CLIAspect","WorkspaceAspect","DeprecationAspect","NewComponentHelperAspect","ComponentAspect","GraphqlAspect","RefactoringAspect","InstallAspect","ConfigAspect","MainRuntime","addRuntime"],"sources":["renaming.main.runtime.ts"],"sourcesContent":["import { BitError } from '@teambit/bit-error';\nimport componentIdToPackageName from '@teambit/legacy/dist/utils/bit/component-id-to-package-name';\nimport { ConfigAspect, ConfigMain } from '@teambit/config';\nimport { CLIAspect, CLIMain, MainRuntime } from '@teambit/cli';\nimport ComponentAspect, { Component, ComponentID, ComponentMain } from '@teambit/component';\nimport { DeprecationAspect, DeprecationMain } from '@teambit/deprecation';\nimport GraphqlAspect, { GraphqlMain } from '@teambit/graphql';\nimport NewComponentHelperAspect, { NewComponentHelperMain } from '@teambit/new-component-helper';\nimport RefactoringAspect, { MultipleStringsReplacement, RefactoringMain } from '@teambit/refactoring';\nimport { getBindingPrefixByDefaultScope } from '@teambit/legacy/dist/consumer/config/component-config';\nimport WorkspaceAspect, { Workspace } from '@teambit/workspace';\nimport { InstallMain, InstallAspect } from '@teambit/install';\nimport { RenameCmd, RenameOptions } from './rename.cmd';\nimport { RenamingAspect } from './renaming.aspect';\nimport { RenamingFragment } from './renaming.fragment';\nimport { renamingSchema } from './renaming.graphql';\nimport { ScopeRenameCmd } from './scope-rename.cmd';\n\nexport class RenamingMain {\n  constructor(\n    private workspace: Workspace,\n    private install: InstallMain,\n    private newComponentHelper: NewComponentHelperMain,\n    private deprecation: DeprecationMain,\n    private refactoring: RefactoringMain,\n    private config: ConfigMain\n  ) {}\n\n  async rename(sourceIdStr: string, targetIdStr: string, options: RenameOptions): Promise<RenameDependencyNameResult> {\n    const sourceId = await this.workspace.resolveComponentId(sourceIdStr);\n    const isTagged = sourceId.hasVersion();\n    const sourceComp = await this.workspace.get(sourceId);\n    const targetId = this.newComponentHelper.getNewComponentId(targetIdStr, undefined, options?.scope);\n    if (isTagged) {\n      const config = await this.getConfig(sourceComp);\n      await this.newComponentHelper.writeAndAddNewComp(sourceComp, targetId, options, config);\n      await this.deprecation.deprecate(sourceId, targetId);\n    } else {\n      this.workspace.bitMap.renameNewComponent(sourceId, targetId);\n      await this.workspace.bitMap.write();\n    }\n    if (options.refactor) {\n      const allComponents = await this.workspace.list();\n      const { changedComponents } = await this.refactoring.refactorDependencyName(allComponents, sourceId, targetId);\n      await Promise.all(changedComponents.map((comp) => this.workspace.write(comp)));\n    }\n\n    await this.install.link();\n\n    return {\n      sourceId,\n      targetId,\n    };\n  }\n\n  getRenamingInfo(component: Component): RenamingInfo | null {\n    const renameConfig = component.state.aspects.get(RenamingAspect.id)?.config as RenamingInfo | undefined;\n    if (!renameConfig) return null;\n    return {\n      renamedFrom: ComponentID.fromObject(renameConfig.renamedFrom),\n    };\n  }\n\n  /**\n   * change the default-scope for new components. optionally (if refactor is true), change the source code to match the\n   * new scope-name.\n   * keep in mind that this is working for new components only, for tagged/exported it's impossible. See the errors\n   * thrown in such cases in this method.\n   */\n  async renameScope(oldScope: string, newScope: string, options: { refactor?: boolean }): Promise<RenameScopeResult> {\n    const allComponents = await this.workspace.list();\n    const componentsUsingOldScope = allComponents.filter((comp) => comp.id.scope === oldScope);\n    if (!componentsUsingOldScope.length && this.workspace.defaultScope !== oldScope) {\n      throw new BitError(\n        `none of the components is using \"${oldScope}\". also, the workspace is not configured with \"${oldScope}\"`\n      );\n    }\n    // verify they're all new.\n    const exported = componentsUsingOldScope.filter((comp) => comp.id._legacy.hasScope());\n    if (exported.length) {\n      const idsStr = exported.map((comp) => comp.id.toString()).join(', ');\n      throw new BitError(`unable to rename the scope for the following exported components:\\n${idsStr}\nbecause these components were exported already, other components may use them and they'll break upon rename.\ninstead, deprecate the above components (using \"bit deprecate\"), tag, export and then eject them.\nonce they are not in the workspace, you can fork them (\"bit fork\") with the new scope-name`);\n    }\n    const tagged = componentsUsingOldScope.filter((comp) => comp.id.hasVersion());\n    if (tagged.length) {\n      const idsStr = tagged.map((comp) => comp.id.toString()).join(', ');\n      throw new BitError(`unable to rename the scope for the following tagged components:\\n${idsStr}\nbecause these components were tagged, the objects have the dependencies data of the old-scope.\nto be able to rename the scope, please untag the components first (using \"bit reset\" command)`);\n    }\n    if (this.workspace.defaultScope === oldScope) {\n      await this.workspace.setDefaultScope(newScope);\n      componentsUsingOldScope.forEach((comp) => this.workspace.bitMap.removeDefaultScope(comp.id));\n    } else {\n      componentsUsingOldScope.forEach((comp) => this.workspace.bitMap.setDefaultScope(comp.id, newScope));\n    }\n    await this.workspace.bitMap.write();\n    const refactoredIds: ComponentID[] = [];\n    if (options.refactor) {\n      const legacyComps = componentsUsingOldScope.map((c) => c.state._consumer);\n      const packagesToReplace: MultipleStringsReplacement = legacyComps.map((comp) => {\n        return {\n          oldStr: componentIdToPackageName(comp),\n          newStr: componentIdToPackageName({\n            ...comp,\n            bindingPrefix: getBindingPrefixByDefaultScope(newScope),\n            id: comp.id,\n            defaultScope: newScope,\n          }),\n        };\n      });\n      const { changedComponents } = await this.refactoring.replaceMultipleStrings(allComponents, packagesToReplace);\n      await this.renameScopeOfAspectIdsInWorkspaceConfig(\n        componentsUsingOldScope.map((c) => c.id),\n        newScope\n      );\n      await Promise.all(changedComponents.map((comp) => this.workspace.write(comp)));\n      refactoredIds.push(...changedComponents.map((c) => c.id));\n    }\n\n    return { scopeRenamedComponentIds: componentsUsingOldScope.map((comp) => comp.id), refactoredIds };\n  }\n\n  private async renameScopeOfAspectIdsInWorkspaceConfig(ids: ComponentID[], newScope: string) {\n    const config = this.config.workspaceConfig;\n    if (!config) throw new Error('unable to get workspace config');\n    let hasChanged = false;\n    ids.forEach((id) => {\n      const changed = config.renameExtensionInRaw(\n        id.toStringWithoutVersion(),\n        id._legacy.changeScope(newScope).toStringWithoutVersion()\n      );\n      if (changed) hasChanged = true;\n    });\n    if (hasChanged) await config.write();\n  }\n\n  private async getConfig(comp: Component) {\n    const fromExisting = await this.newComponentHelper.getConfigFromExistingToNewComponent(comp);\n    return {\n      ...fromExisting,\n      [RenamingAspect.id]: {\n        renamedFrom: comp.id.toObject(),\n      },\n    };\n  }\n\n  static slots = [];\n  static dependencies = [\n    CLIAspect,\n    WorkspaceAspect,\n    DeprecationAspect,\n    NewComponentHelperAspect,\n    ComponentAspect,\n    GraphqlAspect,\n    RefactoringAspect,\n    InstallAspect,\n    ConfigAspect,\n  ];\n  static runtime = MainRuntime;\n  static async provider([\n    cli,\n    workspace,\n    deprecation,\n    newComponentHelper,\n    componentMain,\n    graphql,\n    refactoring,\n    install,\n    config,\n  ]: [\n    CLIMain,\n    Workspace,\n    DeprecationMain,\n    NewComponentHelperMain,\n    ComponentMain,\n    GraphqlMain,\n    RefactoringMain,\n    InstallMain,\n    ConfigMain\n  ]) {\n    const renaming = new RenamingMain(workspace, install, newComponentHelper, deprecation, refactoring, config);\n    cli.register(new RenameCmd(renaming));\n\n    const scopeCommand = cli.getCommand('scope');\n    scopeCommand?.commands?.push(new ScopeRenameCmd(renaming));\n\n    graphql.register(renamingSchema(renaming));\n    componentMain.registerShowFragments([new RenamingFragment(renaming)]);\n    return renaming;\n  }\n}\n\nRenamingAspect.addRuntime(RenamingMain);\n\nexport type RenameDependencyNameResult = { sourceId: ComponentID; targetId: ComponentID };\n\nexport type RenamingInfo = {\n  renamedFrom: ComponentID;\n};\n\nexport type RenameScopeResult = { scopeRenamedComponentIds: ComponentID[]; refactoredIds: ComponentID[] };\n"],"mappings":"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"}