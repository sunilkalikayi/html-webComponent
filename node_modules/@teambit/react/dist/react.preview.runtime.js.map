{"version":3,"names":["ReactPreview","constructor","preview","providerSlot","aspectsFilter","entries","toArray","allowedAspects","Set","add","ReactAspect","id","filter","aspectId","has","providers","flatten","map","provider","registerProvider","register","config","reactPreview","HighlighterProvider","registerRenderContext","getRenderingContext","PreviewRuntime","Slot","withType","PreviewAspect","addRuntime"],"sources":["react.preview.runtime.ts"],"sourcesContent":["import { ComponentType } from 'react';\nimport flatten from 'lodash.flatten';\nimport { SlotRegistry, Slot } from '@teambit/harmony';\nimport PreviewAspect, { PreviewPreview, PreviewRuntime, RenderingContextProvider } from '@teambit/preview';\nimport { HighlighterProvider } from '@teambit/react.ui.highlighter-provider';\nimport { ReactAspect } from './react.aspect';\n\nexport type Provider = ComponentType<{}>;\nexport type ProviderSlot = SlotRegistry<Provider[]>;\n\nexport class ReactPreview {\n  constructor(private preview: PreviewPreview, private providerSlot: ProviderSlot) {}\n\n  registerProvider(provider: Provider[]) {\n    this.providerSlot.register(provider);\n  }\n\n  getRenderingContext: RenderingContextProvider = ({ aspectsFilter }) => {\n    let entries = this.providerSlot.toArray();\n\n    if (aspectsFilter) {\n      const allowedAspects = new Set(aspectsFilter);\n      allowedAspects.add(ReactAspect.id);\n\n      entries = entries.filter(([aspectId]) => allowedAspects.has(aspectId));\n    }\n\n    const providers = flatten(entries.map(([, provider]) => provider));\n\n    return {\n      providers,\n    };\n  };\n\n  static runtime = PreviewRuntime;\n\n  static slots = [Slot.withType<Provider>()];\n\n  static dependencies = [PreviewAspect];\n\n  static async provider([preview]: [PreviewPreview], config, [providerSlot]: [ProviderSlot]) {\n    const reactPreview = new ReactPreview(preview, providerSlot);\n\n    reactPreview.registerProvider([HighlighterProvider]);\n\n    preview.registerRenderContext(reactPreview.getRenderingContext);\n\n    return reactPreview;\n  }\n}\n\nReactAspect.addRuntime(ReactPreview);\n\nexport default ReactPreview;\n"],"mappings":";;;;;;;;;;;;;;;;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA6C;AAAA;AAKtC,MAAMA,YAAY,CAAC;EACxBC,WAAW,CAASC,OAAuB,EAAUC,YAA0B,EAAE;IAAA,KAA7DD,OAAuB,GAAvBA,OAAuB;IAAA,KAAUC,YAA0B,GAA1BA,YAA0B;IAAA,6DAM/B,CAAC;MAAEC;IAAc,CAAC,KAAK;MACrE,IAAIC,OAAO,GAAG,IAAI,CAACF,YAAY,CAACG,OAAO,EAAE;MAEzC,IAAIF,aAAa,EAAE;QACjB,MAAMG,cAAc,GAAG,IAAIC,GAAG,CAACJ,aAAa,CAAC;QAC7CG,cAAc,CAACE,GAAG,CAACC,oBAAW,CAACC,EAAE,CAAC;QAElCN,OAAO,GAAGA,OAAO,CAACO,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,KAAKN,cAAc,CAACO,GAAG,CAACD,QAAQ,CAAC,CAAC;MACxE;MAEA,MAAME,SAAS,GAAG,IAAAC,iBAAO,EAACX,OAAO,CAACY,GAAG,CAAC,CAAC,GAAGC,QAAQ,CAAC,KAAKA,QAAQ,CAAC,CAAC;MAElE,OAAO;QACLH;MACF,CAAC;IACH,CAAC;EArBiF;EAElFI,gBAAgB,CAACD,QAAoB,EAAE;IACrC,IAAI,CAACf,YAAY,CAACiB,QAAQ,CAACF,QAAQ,CAAC;EACtC;EAyBA,aAAaA,QAAQ,CAAC,CAAChB,OAAO,CAAmB,EAAEmB,MAAM,EAAE,CAAClB,YAAY,CAAiB,EAAE;IACzF,MAAMmB,YAAY,GAAG,IAAItB,YAAY,CAACE,OAAO,EAAEC,YAAY,CAAC;IAE5DmB,YAAY,CAACH,gBAAgB,CAAC,CAACI,8BAAmB,CAAC,CAAC;IAEpDrB,OAAO,CAACsB,qBAAqB,CAACF,YAAY,CAACG,mBAAmB,CAAC;IAE/D,OAAOH,YAAY;EACrB;AACF;AAAC;AAAA,gCAvCYtB,YAAY,aAwBN0B,yBAAc;AAAA,gCAxBpB1B,YAAY,WA0BR,CAAC2B,eAAI,CAACC,QAAQ,EAAY,CAAC;AAAA,gCA1B/B5B,YAAY,kBA4BD,CAAC6B,kBAAa,CAAC;AAavCnB,oBAAW,CAACoB,UAAU,CAAC9B,YAAY,CAAC;AAAC,eAEtBA,YAAY;AAAA"}