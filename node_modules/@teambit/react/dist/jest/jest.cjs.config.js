"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2().default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
const baseConfig = require('./jest.base.config');
const cjsTransformer = require.resolve('./transformers/cjs-transformer.js');
const cjsTransform = _objectSpread(_objectSpread({}, baseConfig.transform), {}, {
  '^.+\\.(js|jsx|ts|tsx|cjs)$': cjsTransformer
});
const cjsConfig = _objectSpread(_objectSpread({}, baseConfig), {}, {
  transform: cjsTransform
});
module.exports = cjsConfig;

//# sourceMappingURL=jest.cjs.config.js.map