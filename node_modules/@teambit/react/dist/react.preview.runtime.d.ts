import { ComponentType } from 'react';
import { SlotRegistry } from '@teambit/harmony';
import { PreviewPreview, RenderingContextProvider } from '@teambit/preview';
export declare type Provider = ComponentType<{}>;
export declare type ProviderSlot = SlotRegistry<Provider[]>;
export declare class ReactPreview {
    private preview;
    private providerSlot;
    constructor(preview: PreviewPreview, providerSlot: ProviderSlot);
    registerProvider(provider: Provider[]): void;
    getRenderingContext: RenderingContextProvider;
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    static slots: ((registerFn: () => string) => SlotRegistry<Provider>)[];
    static dependencies: import("@teambit/harmony").Aspect[];
    static provider([preview]: [PreviewPreview], config: any, [providerSlot]: [ProviderSlot]): Promise<ReactPreview>;
}
export default ReactPreview;
