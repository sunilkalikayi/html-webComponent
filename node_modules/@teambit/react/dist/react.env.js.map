{"version":3,"names":["ReactEnvType","defaultTsConfig","require","buildTsConfig","eslintConfig","prettierConfig","ReactEnv","constructor","jestAspect","tsAspect","compiler","webpack","workspace","pkg","tester","config","eslint","prettier","dependencyResolver","logger","compilerAspectId","getTsConfig","targetTsConfig","merge","getBuildTsConfig","getCjsJestTester","jestConfigPath","jestModulePath","createCjsJestTester","pathToSource","pathNormalizeToLinux","__dirname","replace","defaultConfig","join","createTester","resolve","getEsmJestTester","createEsmJestTester","getTester","createTsCompilerOptions","mode","tsconfig","cloneDeep","compileJs","compileJsx","types","getTsCjsCompiler","transformers","tsModule","ts","createTsCjsCompiler","tsCompileOptions","createCjsCompiler","getTsEsmCompiler","createTsEsmCompiler","createEsmCompiler","getCompiler","getLinter","context","tsConfig","defaultTransformer","configMutator","addExtensionTypes","setTsConfig","allTransformers","createLinter","pluginPath","getFormatter","createFormatter","getFileMap","components","local","reduce","index","component","state","filesystem","files","forEach","file","path","id","toString","homepage","fullName","ComponentUrl","toUrl","writeFileMap","fileMap","tmpdir","Math","random","slice","outputFileSync","JSON","stringify","getDevEnvId","ReactAspect","getSchemaExtractor","createSchemaExtractor","getDevServer","baseConfig","basePreviewConfigFactory","envDevConfig","envPreviewDevConfigFactory","componentDevConfig","componentPreviewDevConfigFactory","merged","createDevServer","getBundler","createComponentsWebpackBundler","development","baseProdConfig","basePreviewProdConfigFactory","componentProdConfig","componentPreviewProdConfigFactory","mergedTransformers","createWebpackBundler","createTemplateWebpackBundler","templateConfig","templateWebpackConfigFactory","createBundler","getPeerDependenciesList","getPeerDependenciesListFromEnv","getAdditionalHostDependencies","getDocsTemplate","getMounter","getPreviewConfig","strategyName","splitComponentBundle","isScaling","getPackageJsonProps","getCjsPackageJsonProps","createCjsPackageJsonProps","getEsmPackageJsonProps","createEsmPackageJsonProps","getNpmIgnore","CAPSULE_ARTIFACTS_DIR","getDependencies","dependencies","react","devDependencies","peerDependencies","getBuildPipe","modifiers","tsModifier","createCjsCompilerTask","module","task","getBuildPipeWithoutCompiler","createBuildPipeWithoutCompiler","pipeWithoutCompiler","filter","aspectId","getEsmCompilerTask","createEsmCompilerTask","tsCompiler","createTask","getCjsCompilerTask","__getDescriptor","type"],"sources":["react.env.ts"],"sourcesContent":["import ts, { TsConfigSourceFile } from 'typescript';\nimport { tmpdir } from 'os';\nimport { Component } from '@teambit/component';\nimport { ComponentUrl } from '@teambit/component.modules.component-url';\nimport { BuildTask, CAPSULE_ARTIFACTS_DIR } from '@teambit/builder';\nimport { merge, cloneDeep } from 'lodash';\nimport { Bundler, BundlerContext, DevServer, DevServerContext } from '@teambit/bundler';\nimport { CompilerMain } from '@teambit/compiler';\nimport {\n  BuilderEnv,\n  CompilerEnv,\n  DependenciesEnv,\n  DevEnv,\n  LinterEnv,\n  PackageEnv,\n  TesterEnv,\n  FormatterEnv,\n  PipeServiceModifier,\n  PipeServiceModifiersMap,\n} from '@teambit/envs';\nimport { JestMain } from '@teambit/jest';\nimport { PackageJsonProps, PkgMain } from '@teambit/pkg';\nimport { Tester, TesterMain } from '@teambit/tester';\nimport { TsConfigTransformer, TypescriptMain } from '@teambit/typescript';\nimport type { TypeScriptCompilerOptions } from '@teambit/typescript';\nimport { WebpackConfigTransformer, WebpackMain } from '@teambit/webpack';\nimport { Workspace } from '@teambit/workspace';\nimport { ESLintMain, EslintConfigTransformer } from '@teambit/eslint';\nimport { PrettierConfigTransformer, PrettierMain } from '@teambit/prettier';\nimport { DependencyResolverMain } from '@teambit/dependency-resolver';\nimport { Linter, LinterContext } from '@teambit/linter';\nimport { Formatter, FormatterContext } from '@teambit/formatter';\nimport { pathNormalizeToLinux } from '@teambit/legacy/dist/utils';\nimport type { ComponentMeta } from '@teambit/react.ui.highlighter.component-metadata.bit-component-meta';\nimport { SchemaExtractor } from '@teambit/schema';\nimport { join, resolve } from 'path';\nimport { outputFileSync } from 'fs-extra';\nimport { Logger } from '@teambit/logger';\n// ensure reactEnv depends on compositions-app\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { CompositionsApp } from '@teambit/react.ui.compositions-app';\n// ensure reactEnv depends on docs-app\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport DocsApps from '@teambit/react.ui.docs-app';\nimport type { ReactMainConfig } from './react.main.runtime';\nimport { ReactAspect } from './react.aspect';\n// webpack configs for both components and envs\nimport basePreviewConfigFactory from './webpack/webpack.config.base';\nimport basePreviewProdConfigFactory from './webpack/webpack.config.base.prod';\n\n// webpack configs for envs only\n// import devPreviewConfigFactory from './webpack/webpack.config.preview.dev';\nimport envPreviewDevConfigFactory from './webpack/webpack.config.env.dev';\nimport { templateWebpackConfigFactory } from './webpack/webpack.config.env.template';\n\n// webpack configs for components only\nimport componentPreviewProdConfigFactory from './webpack/webpack.config.component.prod';\nimport componentPreviewDevConfigFactory from './webpack/webpack.config.component.dev';\n\nexport const ReactEnvType = 'react';\nconst defaultTsConfig = require('./typescript/tsconfig.json');\nconst buildTsConfig = require('./typescript/tsconfig.build.json');\nconst eslintConfig = require('./eslint/eslintrc');\nconst prettierConfig = require('./prettier/prettier.config.js');\n\n// TODO: move to be taken from the key mode of compiler context\ntype CompilerMode = 'build' | 'dev';\n\ntype GetBuildPipeModifiers = PipeServiceModifiersMap & {\n  tsModifier?: PipeServiceModifier;\n};\n\n/**\n * a component environment built for [React](https://reactjs.org) .\n */\nexport class ReactEnv\n  implements TesterEnv, CompilerEnv, LinterEnv, DevEnv, BuilderEnv, DependenciesEnv, PackageEnv, FormatterEnv\n{\n  constructor(\n    /**\n     * jest extension\n     */\n    private jestAspect: JestMain,\n\n    /**\n     * typescript extension.\n     */\n    protected tsAspect: TypescriptMain,\n\n    /**\n     * compiler extension.\n     */\n    private compiler: CompilerMain,\n\n    /**\n     * webpack extension.\n     */\n    private webpack: WebpackMain,\n\n    /**\n     * workspace extension.\n     */\n    private workspace: Workspace,\n\n    /**\n     * pkg extension.\n     */\n    private pkg: PkgMain,\n\n    /**\n     * tester extension\n     */\n    private tester: TesterMain,\n\n    private config: ReactMainConfig,\n\n    private eslint: ESLintMain,\n\n    private prettier: PrettierMain,\n\n    private dependencyResolver: DependencyResolverMain,\n\n    private logger: Logger,\n\n    private compilerAspectId: string\n  ) {}\n\n  getTsConfig(targetTsConfig?: TsConfigSourceFile): TsConfigSourceFile {\n    return targetTsConfig ? merge({}, defaultTsConfig, targetTsConfig) : defaultTsConfig;\n  }\n\n  getBuildTsConfig(targetTsConfig?: TsConfigSourceFile): TsConfigSourceFile {\n    return targetTsConfig ? merge({}, buildTsConfig, targetTsConfig) : buildTsConfig;\n  }\n\n  /**\n   * @deprecated use createCjsJestTester()\n   */\n  getCjsJestTester(jestConfigPath?: string, jestModulePath?: string): Tester {\n    return this.createCjsJestTester(jestConfigPath, jestModulePath);\n  }\n\n  /**\n   * Get a jest tester instance with react config and cjs configs\n   * @param jestConfigPath\n   * @param jestModulePath\n   * @returns\n   */\n  createCjsJestTester(jestConfigPath?: string, jestModulePath?: string): Tester {\n    const pathToSource = pathNormalizeToLinux(__dirname).replace('/dist', '');\n    const defaultConfig = join(pathToSource, './jest/jest.cjs.config.js');\n    const config = jestConfigPath || defaultConfig;\n    return this.jestAspect.createTester(config, jestModulePath || require.resolve('jest'));\n  }\n\n  /**\n   * @deprecated use createEsmJestTester()\n   */\n  getEsmJestTester(jestConfigPath?: string, jestModulePath?: string): Tester {\n    return this.createEsmJestTester(jestConfigPath, jestModulePath);\n  }\n\n  /**\n   * Get a jest tester instance with react config and esm configs\n   * @param jestConfigPath\n   * @param jestModulePath\n   * @returns\n   */\n  createEsmJestTester(jestConfigPath?: string, jestModulePath?: string): Tester {\n    const pathToSource = pathNormalizeToLinux(__dirname).replace('/dist', '');\n    const defaultConfig = join(pathToSource, './jest/jest.esm.config.js');\n    const config = jestConfigPath || defaultConfig;\n    return this.jestAspect.createTester(config, jestModulePath || require.resolve('jest'));\n  }\n\n  /**\n   * returns a component tester.\n   */\n  getTester(jestConfigPath: string, jestModulePath?: string): Tester {\n    // return this.createEsmJestTester(jestConfigPath, jestModulePath);\n    return this.createCjsJestTester(jestConfigPath, jestModulePath);\n  }\n\n  private createTsCompilerOptions(mode: CompilerMode = 'dev'): TypeScriptCompilerOptions {\n    const tsconfig = mode === 'dev' ? cloneDeep(defaultTsConfig) : cloneDeep(buildTsConfig);\n    const pathToSource = pathNormalizeToLinux(__dirname).replace('/dist/', '/src/');\n    const compileJs = true;\n    const compileJsx = true;\n    return {\n      tsconfig,\n      // TODO: @david please remove this line and refactor to be something that makes sense.\n      types: [resolve(pathToSource, './typescript/style.d.ts'), resolve(pathToSource, './typescript/asset.d.ts')],\n      compileJs,\n      compileJsx,\n    };\n  }\n\n  /**\n   * @deprecated use createTsCjsCompiler()\n   */\n  getTsCjsCompiler(mode: CompilerMode = 'dev', transformers: TsConfigTransformer[] = [], tsModule = ts) {\n    return this.createTsCjsCompiler(mode, transformers, tsModule);\n  }\n\n  /**\n   * Get a compiler instance with react config and set it to cjs module\n   * @param mode\n   * @param transformers\n   * @param tsModule\n   * @returns\n   */\n  createTsCjsCompiler(mode: CompilerMode = 'dev', transformers: TsConfigTransformer[] = [], tsModule = ts) {\n    const tsCompileOptions = this.createTsCompilerOptions(mode);\n    return this.tsAspect.createCjsCompiler(tsCompileOptions, transformers, tsModule);\n  }\n\n  /**\n   * @deprecated use createTsEsmCompiler()\n   */\n  getTsEsmCompiler(mode: CompilerMode = 'dev', transformers: TsConfigTransformer[] = [], tsModule = ts) {\n    this.createTsEsmCompiler(mode, transformers, tsModule);\n  }\n\n  /**\n   * Get a compiler instance with react config and set it to esm module\n   * @param mode\n   * @param transformers\n   * @param tsModule\n   * @returns\n   */\n  createTsEsmCompiler(mode: CompilerMode = 'dev', transformers: TsConfigTransformer[] = [], tsModule = ts) {\n    const tsCompileOptions = this.createTsCompilerOptions(mode);\n    return this.tsAspect.createEsmCompiler(tsCompileOptions, transformers, tsModule);\n  }\n\n  getCompiler(transformers: TsConfigTransformer[] = [], tsModule = ts) {\n    // return this.getTsEsmCompiler('dev', transformers, tsModule);\n    return this.createTsCjsCompiler('dev', transformers, tsModule);\n  }\n\n  /**\n   * returns and configures the component linter.\n   */\n  getLinter(context: LinterContext, transformers: EslintConfigTransformer[] = []): Linter {\n    const tsConfig = this.createTsCompilerOptions('dev').tsconfig;\n\n    const defaultTransformer: EslintConfigTransformer = (configMutator) => {\n      configMutator.addExtensionTypes(['.md', '.mdx']);\n      configMutator.setTsConfig(tsConfig);\n      return configMutator;\n    };\n\n    const allTransformers = [defaultTransformer, ...transformers];\n\n    return this.eslint.createLinter(\n      context,\n      {\n        config: eslintConfig,\n        // resolve all plugins from the react environment.\n        pluginPath: __dirname,\n      },\n      allTransformers\n    );\n  }\n\n  /**\n   * returns and configures the component formatter.\n   */\n  getFormatter(context: FormatterContext, transformers: PrettierConfigTransformer[] = []): Formatter {\n    return this.prettier.createFormatter(\n      context,\n      {\n        config: prettierConfig,\n      },\n      transformers\n    );\n  }\n\n  private getFileMap(components: Component[], local = false) {\n    return components.reduce<{ [key: string]: ComponentMeta }>((index, component: Component) => {\n      component.state.filesystem.files.forEach((file) => {\n        index[file.path] = {\n          id: component.id.toString(),\n          homepage: local ? `/${component.id.fullName}` : ComponentUrl.toUrl(component.id),\n        };\n      });\n\n      return index;\n    }, {});\n  }\n\n  private writeFileMap(components: Component[], local?: boolean) {\n    const fileMap = this.getFileMap(components, local);\n    const path = join(tmpdir(), `${Math.random().toString(36).slice(2, 11)}.json`);\n    outputFileSync(path, JSON.stringify(fileMap));\n    return path;\n  }\n\n  /**\n   * required for `bit start`\n   */\n  getDevEnvId(id?: string) {\n    if (typeof id !== 'string') return ReactAspect.id;\n    return id || ReactAspect.id;\n  }\n\n  /**\n   * get a schema generator instance configured with the correct tsconfig.\n   */\n  getSchemaExtractor(tsconfig: TsConfigSourceFile): SchemaExtractor {\n    return this.tsAspect.createSchemaExtractor(this.getTsConfig(tsconfig));\n  }\n\n  /**\n   * returns and configures the React component dev server.\n   * required for `bit start`\n   */\n  getDevServer(context: DevServerContext, transformers: WebpackConfigTransformer[] = []): DevServer {\n    const baseConfig = basePreviewConfigFactory(false);\n    const envDevConfig = envPreviewDevConfigFactory(context.id);\n    const componentDevConfig = componentPreviewDevConfigFactory(this.workspace.path, context.id);\n\n    const defaultTransformer: WebpackConfigTransformer = (configMutator) => {\n      const merged = configMutator.merge([baseConfig, envDevConfig, componentDevConfig]);\n      return merged;\n    };\n\n    return this.webpack.createDevServer(context, [defaultTransformer, ...transformers]);\n  }\n\n  async getBundler(context: BundlerContext, transformers: WebpackConfigTransformer[] = []): Promise<Bundler> {\n    return this.createComponentsWebpackBundler(context, transformers);\n  }\n\n  async createComponentsWebpackBundler(\n    context: BundlerContext,\n    transformers: WebpackConfigTransformer[] = []\n  ): Promise<Bundler> {\n    const baseConfig = basePreviewConfigFactory(!context.development);\n    const baseProdConfig = basePreviewProdConfigFactory(context.development);\n    const componentProdConfig = componentPreviewProdConfigFactory();\n\n    const defaultTransformer: WebpackConfigTransformer = (configMutator) => {\n      const merged = configMutator.merge([baseConfig, baseProdConfig, componentProdConfig]);\n      return merged;\n    };\n    const mergedTransformers = [defaultTransformer, ...transformers];\n    return this.createWebpackBundler(context, mergedTransformers);\n  }\n\n  async createTemplateWebpackBundler(\n    context: BundlerContext,\n    transformers: WebpackConfigTransformer[] = []\n  ): Promise<Bundler> {\n    const baseConfig = basePreviewConfigFactory(!context.development);\n    const baseProdConfig = basePreviewProdConfigFactory(context.development);\n    const templateConfig = templateWebpackConfigFactory();\n\n    const defaultTransformer: WebpackConfigTransformer = (configMutator) => {\n      const merged = configMutator.merge([baseConfig, baseProdConfig, templateConfig]);\n      return merged;\n    };\n    const mergedTransformers = [defaultTransformer, ...transformers];\n    return this.createWebpackBundler(context, mergedTransformers);\n  }\n\n  private async createWebpackBundler(\n    context: BundlerContext,\n    transformers: WebpackConfigTransformer[] = []\n  ): Promise<Bundler> {\n    return this.webpack.createBundler(context, transformers);\n  }\n\n  /**\n   * Get the peers configured by the env on the components + the host deps configured by the env\n   */\n  getPeerDependenciesList() {\n    return this.dependencyResolver.getPeerDependenciesListFromEnv(this);\n  }\n\n  getAdditionalHostDependencies(): string[] {\n    return ['@teambit/mdx.ui.mdx-scope-context', '@mdx-js/react', 'react'];\n  }\n\n  /**\n   * returns a path to a docs template.\n   */\n  getDocsTemplate() {\n    return require.resolve('@teambit/react.ui.docs-app');\n  }\n\n  icon = 'https://static.bit.dev/extensions-icons/react.svg';\n\n  /**\n   * returns the path to the compositions template\n   */\n  getMounter() {\n    return require.resolve('@teambit/react.ui.compositions-app');\n  }\n\n  getPreviewConfig() {\n    return {\n      strategyName: 'component',\n      splitComponentBundle: true,\n      isScaling: true,\n    };\n  }\n\n  /**\n   * define the package json properties to add to each component.\n   */\n  getPackageJsonProps(): PackageJsonProps {\n    // React compile by default to esm, so uses type module\n    // return this.getEsmPackageJsonProps();\n    return this.getCjsPackageJsonProps();\n  }\n\n  /**\n   * @deprecated use createCjsPackageJsonProps()\n   */\n  getCjsPackageJsonProps(): PackageJsonProps {\n    return this.createCjsPackageJsonProps();\n  }\n\n  /**\n   * Get the default package.json props for a cjs component\n   * @returns\n   */\n  createCjsPackageJsonProps(): PackageJsonProps {\n    return this.tsAspect.getCjsPackageJsonProps();\n  }\n\n  /**\n   * @deprecated use createEsmPackageJsonProps()\n   */\n  getEsmPackageJsonProps(): PackageJsonProps {\n    return this.createEsmPackageJsonProps();\n  }\n\n  /**\n   * Get the default package.json props for an esm component\n   * @returns\n   */\n  createEsmPackageJsonProps(): PackageJsonProps {\n    return this.tsAspect.getEsmPackageJsonProps();\n  }\n\n  getNpmIgnore() {\n    // ignores only .ts files in the root directory, so d.ts files inside dists are unaffected.\n    // without this change, the package has \"index.ts\" file in the root, causing typescript to parse it instead of the\n    // d.ts files. (changing the \"types\" prop in the package.json file doesn't help).\n    return [`${CAPSULE_ARTIFACTS_DIR}/`];\n  }\n\n  /**\n   * adds dependencies to all configured components.\n   */\n  getDependencies() {\n    return {\n      dependencies: {\n        react: '-',\n        'react-dom': '-',\n        'core-js': '^3.0.0',\n      },\n      // TODO: add this only if using ts\n      devDependencies: {\n        react: '-',\n        'react-dom': '-',\n        '@types/mocha': '-',\n        '@types/node': '12.20.4',\n        '@types/react': '^17.0.8',\n        '@types/react-dom': '^17.0.5',\n        '@types/jest': '^26.0.0',\n        // This is added as dev dep since our jest file transformer uses babel plugins that require this to be installed\n        '@babel/runtime': '7.12.18',\n        '@types/testing-library__jest-dom': '5.9.5',\n      },\n      peerDependencies: {\n        react: '^16.8.0 || ^17.0.0',\n        'react-dom': '^16.8.0 || ^17.0.0',\n      },\n    };\n  }\n\n  /**\n   * returns the component build pipeline.\n   */\n  getBuildPipe(modifiers: GetBuildPipeModifiers = {}): BuildTask[] {\n    const transformers: Function[] = modifiers?.tsModifier?.transformers || [];\n    return [this.createCjsCompilerTask(transformers, modifiers?.tsModifier?.module || ts), this.tester.task];\n  }\n\n  /**\n   * @deprecated use createBuildPipeWithoutCompiler()\n   */\n  getBuildPipeWithoutCompiler(): BuildTask[] {\n    return this.createBuildPipeWithoutCompiler();\n  }\n\n  /**\n   * Get the react build pipeline without the compilation task.\n   * This help in cases you want to only replace the compilation task with something else\n   * @returns\n   */\n  createBuildPipeWithoutCompiler(): BuildTask[] {\n    const pipeWithoutCompiler = this.getBuildPipe().filter((task) => task.aspectId !== this.compilerAspectId);\n    return pipeWithoutCompiler;\n  }\n\n  /**\n   * @deprecated use createEsmCompilerTask()\n   */\n  getEsmCompilerTask(transformers: TsConfigTransformer[] = [], tsModule = ts) {\n    return this.createEsmCompilerTask(transformers as Function[], tsModule);\n  }\n\n  /**\n   * Get a compiler task with react config and set to esm module\n   * @param transformers\n   * @param tsModule\n   * @returns\n   */\n  createEsmCompilerTask(transformers: Function[] = [], tsModule = ts) {\n    const tsCompiler = this.createTsEsmCompiler('build', transformers as TsConfigTransformer[], tsModule);\n    return this.compiler.createTask('TSCompiler', tsCompiler);\n  }\n\n  /**\n   * @deprecated use createCjsCompilerTask()\n   * */\n  getCjsCompilerTask(transformers: TsConfigTransformer[] = [], tsModule = ts) {\n    return this.createCjsCompilerTask(transformers as Function[], tsModule);\n  }\n\n  /**\n   * Get a compiler task with react config and set to cjs module\n   * @param transformers\n   * @param tsModule\n   * @returns\n   */\n  createCjsCompilerTask(transformers: Function[] = [], tsModule = ts) {\n    const tsCompiler = this.createTsCjsCompiler('build', transformers as TsConfigTransformer[], tsModule);\n    return this.compiler.createTask('TSCompiler', tsCompiler);\n  }\n\n  async __getDescriptor() {\n    return {\n      type: ReactEnvType,\n    };\n  }\n}\n"],"mappings":"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"}