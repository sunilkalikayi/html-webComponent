{"version":3,"names":["ReactMain","constructor","reactEnv","envs","application","reactAppType","dependencyResolver","logger","getReactAppType","name","ReactAppType","registerApp","reactApp","createApp","useTypescript","modifiers","tsModule","ts","overrides","devTransformers","devConfig","getCompiler","buildTransformers","buildConfig","buildPipeModifiers","tsModifier","transformers","module","getBuildPipe","override","overrideTsConfig","tsconfig","compilerOptions","transformer","configMutator","mergeTsConfig","raw","compileJs","compileJsx","types","addTypes","genericCompilerOptions","omit","Object","assign","overrideDocsTemplate","templatePath","getDevEnvId","context","envDefinition","id","getDocsTemplate","overrideBuildTsConfig","useWebpack","devServerTransformers","devServerConfig","getDevServer","previewTransformers","previewConfig","getBundler","useEslint","getLinter","usePrettier","getFormatter","overrideDevServerConfig","config","merge","overridePreviewConfig","overrideMounter","mounterPath","getMounter","compose","targetEnv","overrideJestConfig","jestConfigPath","jestModulePath","getTester","overrideBuildPipe","tasks","overrideCompilerTasks","pipeWithoutCompiler","getBuildPipeWithoutCompiler","overrideDependencies","dependencyPolicy","getDependencies","reactDeps","mergeDeepLeft","overrideCompiler","compiler","overrideEslintConfig","overridePackageJsonProps","props","getPackageJsonProps","getDocs","component","docsArray","state","_consumer","docs","abstract","description","filePath","properties","provider","jestAspect","tsAspect","webpack","workspace","graphql","pkg","tester","eslint","prettier","generator","loggerMain","createLogger","ReactAspect","ReactEnv","CompilerAspect","appType","react","register","reactSchema","registerEnv","registerComponentTemplate","componentTemplates","registerWorkspaceTemplate","workspaceTemplates","registerAppType","MainRuntime","EnvsAspect","JestAspect","TypescriptAspect","WebpackAspect","WorkspaceAspect","GraphqlAspect","PkgAspect","TesterAspect","ESLintAspect","PrettierAspect","ApplicationAspect","GeneratorAspect","DependencyResolverAspect","LoggerAspect","addRuntime"],"sources":["react.main.runtime.ts"],"sourcesContent":["import mergeDeepLeft from 'ramda/src/mergeDeepLeft';\nimport { omit } from 'lodash';\nimport { MainRuntime } from '@teambit/cli';\nimport type { CompilerMain } from '@teambit/compiler';\nimport { CompilerAspect, Compiler } from '@teambit/compiler';\nimport { BuildTask } from '@teambit/builder';\nimport { Component } from '@teambit/component';\nimport { EnvsAspect, EnvsMain, EnvTransformer, Environment } from '@teambit/envs';\nimport type { GraphqlMain } from '@teambit/graphql';\nimport { GraphqlAspect } from '@teambit/graphql';\nimport type { JestMain } from '@teambit/jest';\nimport { JestAspect } from '@teambit/jest';\nimport type { PkgMain, PackageJsonProps } from '@teambit/pkg';\nimport { PkgAspect } from '@teambit/pkg';\nimport type { TesterMain } from '@teambit/tester';\nimport { TesterAspect } from '@teambit/tester';\nimport type { TypescriptMain, TsCompilerOptionsWithoutTsConfig, TsConfigTransformer } from '@teambit/typescript';\nimport { TypescriptAspect } from '@teambit/typescript';\nimport type { WebpackMain, Configuration, WebpackConfigTransformer } from '@teambit/webpack';\nimport { WebpackAspect } from '@teambit/webpack';\nimport { GeneratorAspect, GeneratorMain } from '@teambit/generator';\nimport { Workspace, WorkspaceAspect } from '@teambit/workspace';\nimport { DevServerContext, BundlerContext } from '@teambit/bundler';\nimport { DependencyResolverAspect, DependencyResolverMain, EnvPolicyConfigObject } from '@teambit/dependency-resolver';\nimport ts from 'typescript';\nimport { ApplicationAspect, ApplicationMain } from '@teambit/application';\nimport { FormatterContext } from '@teambit/formatter';\nimport { LinterContext } from '@teambit/linter';\nimport { Logger, LoggerAspect, LoggerMain } from '@teambit/logger';\nimport { ESLintMain, ESLintAspect, EslintConfigTransformer } from '@teambit/eslint';\nimport { PrettierMain, PrettierAspect, PrettierConfigTransformer } from '@teambit/prettier';\nimport { ReactAspect } from './react.aspect';\nimport { ReactEnv } from './react.env';\nimport { ReactAppType } from './apps/web';\nimport { reactSchema } from './react.graphql';\nimport { componentTemplates, workspaceTemplates } from './react.templates';\nimport { ReactAppOptions } from './apps/web/react-app-options';\n\ntype ReactDeps = [\n  EnvsMain,\n  JestMain,\n  TypescriptMain,\n  CompilerMain,\n  WebpackMain,\n  Workspace,\n  GraphqlMain,\n  PkgMain,\n  TesterMain,\n  ESLintMain,\n  PrettierMain,\n  ApplicationMain,\n  GeneratorMain,\n  DependencyResolverMain,\n  LoggerMain\n];\n\nexport type ReactMainConfig = {\n  /**\n   * configure the react env compiler.\n   * can be configured to either TypeScript ('ts') or Babel ('babel').\n   */\n  compiler: 'babel' | 'ts';\n\n  /**\n   * configure the component tester.\n   * can be either Jest ('jest') or Mocha ('mocha')\n   */\n  tester: 'jest' | 'mocha';\n\n  /**\n   * version of React to configure.\n   */\n  reactVersion: string;\n};\n\nexport type UseWebpackModifiers = {\n  previewConfig?: WebpackConfigTransformer[];\n  devServerConfig?: WebpackConfigTransformer[];\n};\n\nexport type UseTypescriptModifiers = {\n  buildConfig?: TsConfigTransformer[];\n  devConfig?: TsConfigTransformer[];\n};\n\nexport type UseEslintModifiers = {\n  transformers: EslintConfigTransformer[];\n};\nexport type UsePrettierModifiers = {\n  transformers: PrettierConfigTransformer[];\n};\n\nexport class ReactMain {\n  constructor(\n    /**\n     * an instance of the React env.\n     */\n    readonly reactEnv: ReactEnv,\n\n    private envs: EnvsMain,\n\n    private application: ApplicationMain,\n\n    private reactAppType: ReactAppType,\n\n    private dependencyResolver: DependencyResolverMain,\n\n    private logger: Logger\n  ) {}\n\n  readonly env = this.reactEnv;\n\n  getReactAppType(name: string) {\n    return new ReactAppType(name, this.reactEnv, this.logger, this.dependencyResolver);\n  }\n\n  /**\n   * use this to register apps programmatically.\n   */\n  async registerApp(reactApp: ReactAppOptions) {\n    return this.application.registerApp(this.reactAppType.createApp(reactApp));\n  }\n\n  /**\n   * override the env's typescript config for both dev and build time.\n   * Replaces both overrideTsConfig (devConfig) and overrideBuildTsConfig (buildConfig)\n   */\n  useTypescript(modifiers?: UseTypescriptModifiers, tsModule: any = ts) {\n    const overrides: any = {};\n    const devTransformers = modifiers?.devConfig;\n    if (devTransformers) {\n      overrides.getCompiler = () => this.reactEnv.getCompiler(devTransformers, tsModule);\n    }\n    const buildTransformers = modifiers?.buildConfig;\n    if (buildTransformers) {\n      const buildPipeModifiers = {\n        tsModifier: {\n          transformers: buildTransformers,\n          module: tsModule,\n        },\n      };\n      overrides.getBuildPipe = () => this.reactEnv.getBuildPipe(buildPipeModifiers);\n    }\n    return this.envs.override(overrides);\n  }\n\n  /**\n   * @deprecated use useTypescript()\n   * override the TS config of the React environment.\n   * @param tsModule typeof `ts` module instance.\n   */\n  overrideTsConfig(\n    tsconfig: Record<string, any> = {},\n    compilerOptions: Partial<TsCompilerOptionsWithoutTsConfig> = {},\n    tsModule: any = ts\n  ) {\n    const transformer: TsConfigTransformer = (configMutator) => {\n      configMutator.mergeTsConfig(tsconfig);\n      configMutator.raw.compileJs = compilerOptions.compileJs ?? configMutator.raw.compileJs;\n      configMutator.raw.compileJsx = compilerOptions.compileJsx ?? configMutator.raw.compileJsx;\n      if (compilerOptions.types) {\n        configMutator.addTypes(compilerOptions.types);\n      }\n      const genericCompilerOptions = omit(compilerOptions, ['types', 'compileJs', 'compileJsx']);\n      configMutator.raw = Object.assign(configMutator.raw, genericCompilerOptions);\n      return configMutator;\n    };\n    // return this.envs.override({\n    //   getCompiler: () => this.reactEnv.getCompiler([transformer], tsModule),\n    // });\n    return this.useTypescript({ devConfig: [transformer] }, tsModule);\n  }\n\n  /**\n   * Override the Bit documentation link. See docs: https://bit.dev/docs/docs/doc-templates\n   */\n  overrideDocsTemplate(templatePath: string) {\n    return this.envs.override({\n      getDevEnvId: (context: DevServerContext) => this.reactEnv.getDevEnvId(context.envDefinition.id),\n      getDocsTemplate: () => templatePath,\n    });\n  }\n\n  /**\n   * @deprecated use useTypescript()\n   * override the build tsconfig.\n   */\n  overrideBuildTsConfig(\n    tsconfig: Record<string, any> = {},\n    compilerOptions: Partial<TsCompilerOptionsWithoutTsConfig> = {},\n    tsModule: any = ts\n  ) {\n    const transformer: TsConfigTransformer = (configMutator) => {\n      configMutator.mergeTsConfig(tsconfig);\n      configMutator.raw.compileJs = compilerOptions.compileJs ?? configMutator.raw.compileJs;\n      configMutator.raw.compileJsx = compilerOptions.compileJsx ?? configMutator.raw.compileJsx;\n      if (compilerOptions.types) {\n        configMutator.addTypes(compilerOptions.types);\n      }\n      const genericCompilerOptions = omit(compilerOptions, ['types', 'compileJs', 'compileJsx']);\n      configMutator.raw = Object.assign(configMutator.raw, genericCompilerOptions);\n      return configMutator;\n    };\n    // return this.envs.override({\n    //   getBuildPipe: () => this.reactEnv.getBuildPipe([transformer], tsModule),\n    // });\n    return this.useTypescript({ buildConfig: [transformer] }, tsModule);\n  }\n\n  /**\n   * override the env's dev server and preview webpack configurations.\n   * Replaces both overrideDevServerConfig and overridePreviewConfig\n   */\n  useWebpack(modifiers?: UseWebpackModifiers): EnvTransformer {\n    const overrides: any = {};\n    const devServerTransformers = modifiers?.devServerConfig;\n    if (devServerTransformers) {\n      overrides.getDevServer = (context: DevServerContext) =>\n        this.reactEnv.getDevServer(context, devServerTransformers);\n      overrides.getDevEnvId = (context: DevServerContext) => this.reactEnv.getDevEnvId(context.envDefinition.id);\n    }\n    const previewTransformers = modifiers?.previewConfig;\n    if (previewTransformers) {\n      overrides.getBundler = (context: BundlerContext) => this.reactEnv.getBundler(context, previewTransformers);\n    }\n    return this.envs.override(overrides);\n  }\n\n  /**\n   * An API to mutate the prettier config\n   * @param modifiers\n   * @returns\n   */\n  useEslint(modifiers?: UseEslintModifiers): EnvTransformer {\n    const transformers = modifiers?.transformers || [];\n    return this.envs.override({\n      getLinter: (context: LinterContext) => this.reactEnv.getLinter(context, transformers),\n    });\n  }\n\n  /**\n   * An API to mutate the prettier config\n   * @param modifiers\n   * @returns\n   */\n  usePrettier(modifiers?: UsePrettierModifiers): EnvTransformer {\n    const transformers = modifiers?.transformers || [];\n    return this.envs.override({\n      getFormatter: (context: FormatterContext) => this.reactEnv.getFormatter(context, transformers),\n    });\n  }\n\n  /**\n   * @deprecated use useWebpack()\n   * override the dev server webpack config.\n   */\n  overrideDevServerConfig(config: Configuration) {\n    const transformer: WebpackConfigTransformer = (configMutator) => {\n      return configMutator.merge([config]);\n    };\n\n    return this.envs.override({\n      getDevServer: (context: DevServerContext) => this.reactEnv.getDevServer(context, [transformer]),\n      getDevEnvId: (context: DevServerContext) => this.reactEnv.getDevEnvId(context.envDefinition.id),\n    });\n  }\n\n  /**\n   * @deprecated use useWebpack()\n   * override the preview webpack config.\n   */\n  overridePreviewConfig(config: Configuration) {\n    const transformer: WebpackConfigTransformer = (configMutator) => {\n      return configMutator.merge([config]);\n    };\n    return this.envs.override({\n      getBundler: (context: BundlerContext) => this.reactEnv.getBundler(context, [transformer]),\n    });\n  }\n\n  overrideMounter(mounterPath: string) {\n    return this.envs.override({\n      getMounter: () => {\n        return mounterPath;\n      },\n    });\n  }\n\n  /**\n   * create a new composition of the react environment.\n   */\n  compose(transformers: EnvTransformer[], targetEnv: Environment = {}) {\n    return this.envs.compose(this.envs.merge(targetEnv, this.reactEnv), transformers);\n  }\n\n  /**\n   * override the jest configuration.\n   * @param jestConfigPath {typeof jest} absolute path to jest.config.json.\n   * @param jestModulePath absolute path to jest\n   */\n  overrideJestConfig(jestConfigPath: string, jestModulePath?: string) {\n    return this.envs.override({\n      getTester: () => this.reactEnv.getTester(jestConfigPath, jestModulePath),\n    });\n  }\n\n  /**\n   * override the build pipeline of the component environment.\n   */\n  overrideBuildPipe(tasks: BuildTask[]) {\n    return this.envs.override({\n      getBuildPipe: () => tasks,\n    });\n  }\n\n  /**\n   * override the compiler tasks inside the build pipeline of the component environment.\n   */\n  overrideCompilerTasks(tasks: BuildTask[]) {\n    const pipeWithoutCompiler = this.reactEnv.getBuildPipeWithoutCompiler();\n\n    return this.envs.override({\n      getBuildPipe: () => [...tasks, ...pipeWithoutCompiler],\n    });\n  }\n\n  /**\n   * override the dependency configuration of the component environment.\n   */\n  overrideDependencies(dependencyPolicy: EnvPolicyConfigObject) {\n    return this.envs.override({\n      getDependencies: async () => {\n        const reactDeps = await this.reactEnv.getDependencies();\n        return mergeDeepLeft(dependencyPolicy, reactDeps);\n      },\n    });\n  }\n\n  /**\n   * override the workspace compiler.\n   */\n  overrideCompiler(compiler: Compiler) {\n    return this.envs.override({\n      getCompiler: () => {\n        return compiler;\n      },\n    });\n  }\n\n  /**\n   * TODO: @gilad we need to implement this.\n   */\n  overrideEslintConfig() {}\n\n  /**\n   * override the package json props of the component environment.\n   */\n  overridePackageJsonProps(props: PackageJsonProps) {\n    return this.envs.override({\n      getPackageJsonProps: () => {\n        return {\n          ...this.reactEnv.getPackageJsonProps(),\n          ...props,\n        };\n      },\n    });\n  }\n\n  /**\n   * returns doc adjusted specifically for react components.\n   */\n  getDocs(component: Component) {\n    const docsArray = component.state._consumer.docs;\n    if (!docsArray || !docsArray[0]) {\n      return null;\n    }\n\n    const docs = docsArray[0];\n\n    return {\n      abstract: docs.description,\n      filePath: docs.filePath,\n      properties: docs.properties,\n    };\n  }\n\n  static runtime = MainRuntime;\n  static dependencies = [\n    EnvsAspect,\n    JestAspect,\n    TypescriptAspect,\n    CompilerAspect,\n    WebpackAspect,\n    WorkspaceAspect,\n    GraphqlAspect,\n    PkgAspect,\n    TesterAspect,\n    ESLintAspect,\n    PrettierAspect,\n    ApplicationAspect,\n    GeneratorAspect,\n    DependencyResolverAspect,\n    LoggerAspect,\n  ];\n\n  static async provider(\n    [\n      envs,\n      jestAspect,\n      tsAspect,\n      compiler,\n      webpack,\n      workspace,\n      graphql,\n      pkg,\n      tester,\n      eslint,\n      prettier,\n      application,\n      generator,\n      dependencyResolver,\n      loggerMain,\n    ]: ReactDeps,\n    config: ReactMainConfig\n  ) {\n    const logger = loggerMain.createLogger(ReactAspect.id);\n    const reactEnv = new ReactEnv(\n      jestAspect,\n      tsAspect,\n      compiler,\n      webpack,\n      workspace,\n      pkg,\n      tester,\n      config,\n      eslint,\n      prettier,\n      dependencyResolver,\n      logger,\n      CompilerAspect.id\n    );\n    const appType = new ReactAppType('react-app', reactEnv, logger, dependencyResolver);\n    const react = new ReactMain(reactEnv, envs, application, appType, dependencyResolver, logger);\n    graphql.register(reactSchema(react));\n    envs.registerEnv(reactEnv);\n    generator.registerComponentTemplate(componentTemplates);\n    generator.registerWorkspaceTemplate(workspaceTemplates);\n    application.registerAppType(appType);\n\n    return react;\n  }\n}\n\nReactAspect.addRuntime(ReactMain);\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA2E;AAAA;AAyDpE,MAAMA,SAAS,CAAC;EACrBC,WAAW;EACT;AACJ;AACA;EACaC,QAAkB,EAEnBC,IAAc,EAEdC,WAA4B,EAE5BC,YAA0B,EAE1BC,kBAA0C,EAE1CC,MAAc,EACtB;IAAA,KAXSL,QAAkB,GAAlBA,QAAkB;IAAA,KAEnBC,IAAc,GAAdA,IAAc;IAAA,KAEdC,WAA4B,GAA5BA,WAA4B;IAAA,KAE5BC,YAA0B,GAA1BA,YAA0B;IAAA,KAE1BC,kBAA0C,GAA1CA,kBAA0C;IAAA,KAE1CC,MAAc,GAAdA,MAAc;IAAA,6CAGT,IAAI,CAACL,QAAQ;EAFzB;EAIHM,eAAe,CAACC,IAAY,EAAE;IAC5B,OAAO,KAAIC,mBAAY,EAACD,IAAI,EAAE,IAAI,CAACP,QAAQ,EAAE,IAAI,CAACK,MAAM,EAAE,IAAI,CAACD,kBAAkB,CAAC;EACpF;;EAEA;AACF;AACA;EACE,MAAMK,WAAW,CAACC,QAAyB,EAAE;IAC3C,OAAO,IAAI,CAACR,WAAW,CAACO,WAAW,CAAC,IAAI,CAACN,YAAY,CAACQ,SAAS,CAACD,QAAQ,CAAC,CAAC;EAC5E;;EAEA;AACF;AACA;AACA;EACEE,aAAa,CAACC,SAAkC,EAAEC,QAAa,GAAGC,sBAAE,EAAE;IACpE,MAAMC,SAAc,GAAG,CAAC,CAAC;IACzB,MAAMC,eAAe,GAAGJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEK,SAAS;IAC5C,IAAID,eAAe,EAAE;MACnBD,SAAS,CAACG,WAAW,GAAG,MAAM,IAAI,CAACnB,QAAQ,CAACmB,WAAW,CAACF,eAAe,EAAEH,QAAQ,CAAC;IACpF;IACA,MAAMM,iBAAiB,GAAGP,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEQ,WAAW;IAChD,IAAID,iBAAiB,EAAE;MACrB,MAAME,kBAAkB,GAAG;QACzBC,UAAU,EAAE;UACVC,YAAY,EAAEJ,iBAAiB;UAC/BK,MAAM,EAAEX;QACV;MACF,CAAC;MACDE,SAAS,CAACU,YAAY,GAAG,MAAM,IAAI,CAAC1B,QAAQ,CAAC0B,YAAY,CAACJ,kBAAkB,CAAC;IAC/E;IACA,OAAO,IAAI,CAACrB,IAAI,CAAC0B,QAAQ,CAACX,SAAS,CAAC;EACtC;;EAEA;AACF;AACA;AACA;AACA;EACEY,gBAAgB,CACdC,QAA6B,GAAG,CAAC,CAAC,EAClCC,eAA0D,GAAG,CAAC,CAAC,EAC/DhB,QAAa,GAAGC,sBAAE,EAClB;IACA,MAAMgB,WAAgC,GAAIC,aAAa,IAAK;MAAA;MAC1DA,aAAa,CAACC,aAAa,CAACJ,QAAQ,CAAC;MACrCG,aAAa,CAACE,GAAG,CAACC,SAAS,4BAAGL,eAAe,CAACK,SAAS,yEAAIH,aAAa,CAACE,GAAG,CAACC,SAAS;MACtFH,aAAa,CAACE,GAAG,CAACE,UAAU,6BAAGN,eAAe,CAACM,UAAU,2EAAIJ,aAAa,CAACE,GAAG,CAACE,UAAU;MACzF,IAAIN,eAAe,CAACO,KAAK,EAAE;QACzBL,aAAa,CAACM,QAAQ,CAACR,eAAe,CAACO,KAAK,CAAC;MAC/C;MACA,MAAME,sBAAsB,GAAG,IAAAC,cAAI,EAACV,eAAe,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;MAC1FE,aAAa,CAACE,GAAG,GAAGO,MAAM,CAACC,MAAM,CAACV,aAAa,CAACE,GAAG,EAAEK,sBAAsB,CAAC;MAC5E,OAAOP,aAAa;IACtB,CAAC;IACD;IACA;IACA;IACA,OAAO,IAAI,CAACpB,aAAa,CAAC;MAAEM,SAAS,EAAE,CAACa,WAAW;IAAE,CAAC,EAAEjB,QAAQ,CAAC;EACnE;;EAEA;AACF;AACA;EACE6B,oBAAoB,CAACC,YAAoB,EAAE;IACzC,OAAO,IAAI,CAAC3C,IAAI,CAAC0B,QAAQ,CAAC;MACxBkB,WAAW,EAAGC,OAAyB,IAAK,IAAI,CAAC9C,QAAQ,CAAC6C,WAAW,CAACC,OAAO,CAACC,aAAa,CAACC,EAAE,CAAC;MAC/FC,eAAe,EAAE,MAAML;IACzB,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;EACEM,qBAAqB,CACnBrB,QAA6B,GAAG,CAAC,CAAC,EAClCC,eAA0D,GAAG,CAAC,CAAC,EAC/DhB,QAAa,GAAGC,sBAAE,EAClB;IACA,MAAMgB,WAAgC,GAAIC,aAAa,IAAK;MAAA;MAC1DA,aAAa,CAACC,aAAa,CAACJ,QAAQ,CAAC;MACrCG,aAAa,CAACE,GAAG,CAACC,SAAS,6BAAGL,eAAe,CAACK,SAAS,2EAAIH,aAAa,CAACE,GAAG,CAACC,SAAS;MACtFH,aAAa,CAACE,GAAG,CAACE,UAAU,6BAAGN,eAAe,CAACM,UAAU,2EAAIJ,aAAa,CAACE,GAAG,CAACE,UAAU;MACzF,IAAIN,eAAe,CAACO,KAAK,EAAE;QACzBL,aAAa,CAACM,QAAQ,CAACR,eAAe,CAACO,KAAK,CAAC;MAC/C;MACA,MAAME,sBAAsB,GAAG,IAAAC,cAAI,EAACV,eAAe,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;MAC1FE,aAAa,CAACE,GAAG,GAAGO,MAAM,CAACC,MAAM,CAACV,aAAa,CAACE,GAAG,EAAEK,sBAAsB,CAAC;MAC5E,OAAOP,aAAa;IACtB,CAAC;IACD;IACA;IACA;IACA,OAAO,IAAI,CAACpB,aAAa,CAAC;MAAES,WAAW,EAAE,CAACU,WAAW;IAAE,CAAC,EAAEjB,QAAQ,CAAC;EACrE;;EAEA;AACF;AACA;AACA;EACEqC,UAAU,CAACtC,SAA+B,EAAkB;IAC1D,MAAMG,SAAc,GAAG,CAAC,CAAC;IACzB,MAAMoC,qBAAqB,GAAGvC,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEwC,eAAe;IACxD,IAAID,qBAAqB,EAAE;MACzBpC,SAAS,CAACsC,YAAY,GAAIR,OAAyB,IACjD,IAAI,CAAC9C,QAAQ,CAACsD,YAAY,CAACR,OAAO,EAAEM,qBAAqB,CAAC;MAC5DpC,SAAS,CAAC6B,WAAW,GAAIC,OAAyB,IAAK,IAAI,CAAC9C,QAAQ,CAAC6C,WAAW,CAACC,OAAO,CAACC,aAAa,CAACC,EAAE,CAAC;IAC5G;IACA,MAAMO,mBAAmB,GAAG1C,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAE2C,aAAa;IACpD,IAAID,mBAAmB,EAAE;MACvBvC,SAAS,CAACyC,UAAU,GAAIX,OAAuB,IAAK,IAAI,CAAC9C,QAAQ,CAACyD,UAAU,CAACX,OAAO,EAAES,mBAAmB,CAAC;IAC5G;IACA,OAAO,IAAI,CAACtD,IAAI,CAAC0B,QAAQ,CAACX,SAAS,CAAC;EACtC;;EAEA;AACF;AACA;AACA;AACA;EACE0C,SAAS,CAAC7C,SAA8B,EAAkB;IACxD,MAAMW,YAAY,GAAG,CAAAX,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEW,YAAY,KAAI,EAAE;IAClD,OAAO,IAAI,CAACvB,IAAI,CAAC0B,QAAQ,CAAC;MACxBgC,SAAS,EAAGb,OAAsB,IAAK,IAAI,CAAC9C,QAAQ,CAAC2D,SAAS,CAACb,OAAO,EAAEtB,YAAY;IACtF,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;EACEoC,WAAW,CAAC/C,SAAgC,EAAkB;IAC5D,MAAMW,YAAY,GAAG,CAAAX,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEW,YAAY,KAAI,EAAE;IAClD,OAAO,IAAI,CAACvB,IAAI,CAAC0B,QAAQ,CAAC;MACxBkC,YAAY,EAAGf,OAAyB,IAAK,IAAI,CAAC9C,QAAQ,CAAC6D,YAAY,CAACf,OAAO,EAAEtB,YAAY;IAC/F,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;EACEsC,uBAAuB,CAACC,MAAqB,EAAE;IAC7C,MAAMhC,WAAqC,GAAIC,aAAa,IAAK;MAC/D,OAAOA,aAAa,CAACgC,KAAK,CAAC,CAACD,MAAM,CAAC,CAAC;IACtC,CAAC;IAED,OAAO,IAAI,CAAC9D,IAAI,CAAC0B,QAAQ,CAAC;MACxB2B,YAAY,EAAGR,OAAyB,IAAK,IAAI,CAAC9C,QAAQ,CAACsD,YAAY,CAACR,OAAO,EAAE,CAACf,WAAW,CAAC,CAAC;MAC/Fc,WAAW,EAAGC,OAAyB,IAAK,IAAI,CAAC9C,QAAQ,CAAC6C,WAAW,CAACC,OAAO,CAACC,aAAa,CAACC,EAAE;IAChG,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;EACEiB,qBAAqB,CAACF,MAAqB,EAAE;IAC3C,MAAMhC,WAAqC,GAAIC,aAAa,IAAK;MAC/D,OAAOA,aAAa,CAACgC,KAAK,CAAC,CAACD,MAAM,CAAC,CAAC;IACtC,CAAC;IACD,OAAO,IAAI,CAAC9D,IAAI,CAAC0B,QAAQ,CAAC;MACxB8B,UAAU,EAAGX,OAAuB,IAAK,IAAI,CAAC9C,QAAQ,CAACyD,UAAU,CAACX,OAAO,EAAE,CAACf,WAAW,CAAC;IAC1F,CAAC,CAAC;EACJ;EAEAmC,eAAe,CAACC,WAAmB,EAAE;IACnC,OAAO,IAAI,CAAClE,IAAI,CAAC0B,QAAQ,CAAC;MACxByC,UAAU,EAAE,MAAM;QAChB,OAAOD,WAAW;MACpB;IACF,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;EACEE,OAAO,CAAC7C,YAA8B,EAAE8C,SAAsB,GAAG,CAAC,CAAC,EAAE;IACnE,OAAO,IAAI,CAACrE,IAAI,CAACoE,OAAO,CAAC,IAAI,CAACpE,IAAI,CAAC+D,KAAK,CAACM,SAAS,EAAE,IAAI,CAACtE,QAAQ,CAAC,EAAEwB,YAAY,CAAC;EACnF;;EAEA;AACF;AACA;AACA;AACA;EACE+C,kBAAkB,CAACC,cAAsB,EAAEC,cAAuB,EAAE;IAClE,OAAO,IAAI,CAACxE,IAAI,CAAC0B,QAAQ,CAAC;MACxB+C,SAAS,EAAE,MAAM,IAAI,CAAC1E,QAAQ,CAAC0E,SAAS,CAACF,cAAc,EAAEC,cAAc;IACzE,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;EACEE,iBAAiB,CAACC,KAAkB,EAAE;IACpC,OAAO,IAAI,CAAC3E,IAAI,CAAC0B,QAAQ,CAAC;MACxBD,YAAY,EAAE,MAAMkD;IACtB,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;EACEC,qBAAqB,CAACD,KAAkB,EAAE;IACxC,MAAME,mBAAmB,GAAG,IAAI,CAAC9E,QAAQ,CAAC+E,2BAA2B,EAAE;IAEvE,OAAO,IAAI,CAAC9E,IAAI,CAAC0B,QAAQ,CAAC;MACxBD,YAAY,EAAE,MAAM,CAAC,GAAGkD,KAAK,EAAE,GAAGE,mBAAmB;IACvD,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;EACEE,oBAAoB,CAACC,gBAAuC,EAAE;IAC5D,OAAO,IAAI,CAAChF,IAAI,CAAC0B,QAAQ,CAAC;MACxBuD,eAAe,EAAE,YAAY;QAC3B,MAAMC,SAAS,GAAG,MAAM,IAAI,CAACnF,QAAQ,CAACkF,eAAe,EAAE;QACvD,OAAO,IAAAE,wBAAa,EAACH,gBAAgB,EAAEE,SAAS,CAAC;MACnD;IACF,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;EACEE,gBAAgB,CAACC,QAAkB,EAAE;IACnC,OAAO,IAAI,CAACrF,IAAI,CAAC0B,QAAQ,CAAC;MACxBR,WAAW,EAAE,MAAM;QACjB,OAAOmE,QAAQ;MACjB;IACF,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;EACEC,oBAAoB,GAAG,CAAC;;EAExB;AACF;AACA;EACEC,wBAAwB,CAACC,KAAuB,EAAE;IAChD,OAAO,IAAI,CAACxF,IAAI,CAAC0B,QAAQ,CAAC;MACxB+D,mBAAmB,EAAE,MAAM;QACzB,uCACK,IAAI,CAAC1F,QAAQ,CAAC0F,mBAAmB,EAAE,GACnCD,KAAK;MAEZ;IACF,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;EACEE,OAAO,CAACC,SAAoB,EAAE;IAC5B,MAAMC,SAAS,GAAGD,SAAS,CAACE,KAAK,CAACC,SAAS,CAACC,IAAI;IAChD,IAAI,CAACH,SAAS,IAAI,CAACA,SAAS,CAAC,CAAC,CAAC,EAAE;MAC/B,OAAO,IAAI;IACb;IAEA,MAAMG,IAAI,GAAGH,SAAS,CAAC,CAAC,CAAC;IAEzB,OAAO;MACLI,QAAQ,EAAED,IAAI,CAACE,WAAW;MAC1BC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;MACvBC,UAAU,EAAEJ,IAAI,CAACI;IACnB,CAAC;EACH;EAqBA,aAAaC,QAAQ,CACnB,CACEpG,IAAI,EACJqG,UAAU,EACVC,QAAQ,EACRjB,QAAQ,EACRkB,OAAO,EACPC,SAAS,EACTC,OAAO,EACPC,GAAG,EACHC,MAAM,EACNC,MAAM,EACNC,QAAQ,EACR5G,WAAW,EACX6G,SAAS,EACT3G,kBAAkB,EAClB4G,UAAU,CACA,EACZjD,MAAuB,EACvB;IACA,MAAM1D,MAAM,GAAG2G,UAAU,CAACC,YAAY,CAACC,oBAAW,CAAClE,EAAE,CAAC;IACtD,MAAMhD,QAAQ,GAAG,KAAImH,kBAAQ,EAC3Bb,UAAU,EACVC,QAAQ,EACRjB,QAAQ,EACRkB,OAAO,EACPC,SAAS,EACTE,GAAG,EACHC,MAAM,EACN7C,MAAM,EACN8C,MAAM,EACNC,QAAQ,EACR1G,kBAAkB,EAClBC,MAAM,EACN+G,0BAAc,CAACpE,EAAE,CAClB;IACD,MAAMqE,OAAO,GAAG,KAAI7G,mBAAY,EAAC,WAAW,EAAER,QAAQ,EAAEK,MAAM,EAAED,kBAAkB,CAAC;IACnF,MAAMkH,KAAK,GAAG,IAAIxH,SAAS,CAACE,QAAQ,EAAEC,IAAI,EAAEC,WAAW,EAAEmH,OAAO,EAAEjH,kBAAkB,EAAEC,MAAM,CAAC;IAC7FqG,OAAO,CAACa,QAAQ,CAAC,IAAAC,qBAAW,EAACF,KAAK,CAAC,CAAC;IACpCrH,IAAI,CAACwH,WAAW,CAACzH,QAAQ,CAAC;IAC1B+G,SAAS,CAACW,yBAAyB,CAACC,4BAAkB,CAAC;IACvDZ,SAAS,CAACa,yBAAyB,CAACC,4BAAkB,CAAC;IACvD3H,WAAW,CAAC4H,eAAe,CAACT,OAAO,CAAC;IAEpC,OAAOC,KAAK;EACd;AACF;AAAC;AAAA,gCAvWYxH,SAAS,aAsSHiI,kBAAW;AAAA,gCAtSjBjI,SAAS,kBAuSE,CACpBkI,kBAAU,EACVC,kBAAU,EACVC,8BAAgB,EAChBd,0BAAc,EACde,wBAAa,EACbC,4BAAe,EACfC,wBAAa,EACbC,gBAAS,EACTC,sBAAY,EACZC,sBAAY,EACZC,0BAAc,EACdC,gCAAiB,EACjBC,4BAAe,EACfC,8CAAwB,EACxBC,sBAAY,CACb;AAkDH3B,oBAAW,CAAC4B,UAAU,CAAChJ,SAAS,CAAC"}