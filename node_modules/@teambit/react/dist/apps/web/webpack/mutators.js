"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addDevServer = addDevServer;
exports.replaceTerserPlugin = replaceTerserPlugin;
exports.setOutput = setOutput;
function _lodash() {
  const data = require("lodash");
  _lodash = function () {
    return data;
  };
  return data;
}
function _terserWebpackPlugin() {
  const data = _interopRequireDefault(require("terser-webpack-plugin"));
  _terserWebpackPlugin = function () {
    return data;
  };
  return data;
}
function addDevServer(configMutator) {
  return configMutator.addTopLevel('devServer', {
    allowedHosts: 'all',
    historyApiFallback: {
      index: '/index.html',
      disableDotRule: true
    },
    headers: {
      'Access-Control-Allow-Origin': '*'
    }
  });
}
function setOutput(configMutator) {
  if (!configMutator.raw.output) configMutator.raw.output = {};
  configMutator.raw.output.publicPath = '/';
  return configMutator;
}
function replaceTerserPlugin({
  prerender = false
}) {
  return configMutator => {
    var _configMutator$raw$op, _configMutator$raw$op2, _configMutator$raw$op3;
    if (!((_configMutator$raw$op = configMutator.raw.optimization) !== null && _configMutator$raw$op !== void 0 && _configMutator$raw$op.minimizer)) return configMutator;
    (0, _lodash().remove)((_configMutator$raw$op2 = configMutator.raw.optimization) === null || _configMutator$raw$op2 === void 0 ? void 0 : _configMutator$raw$op2.minimizer, minimizer => {
      return minimizer.constructor.name === 'TerserPlugin';
    });
    const terserer = prerender ? CreateTerserPluginForPrerender() : CreateTerserPlugin();
    (_configMutator$raw$op3 = configMutator.raw.optimization) === null || _configMutator$raw$op3 === void 0 ? void 0 : _configMutator$raw$op3.minimizer.push(terserer);
    return configMutator;
  };
}
function CreateTerserPlugin() {
  return new (_terserWebpackPlugin().default)({
    minify: _terserWebpackPlugin().default.esbuildMinify,
    // `terserOptions` options will be passed to `esbuild`
    // Link to options - https://esbuild.github.io/api/#minify
    terserOptions: {
      minify: true
    }
  });
}
function CreateTerserPluginForPrerender() {
  return new (_terserWebpackPlugin().default)({
    extractComments: false,
    terserOptions: {
      parse: {
        // We want terser to parse ecma 8 code. However, we don't want it
        // to apply any minification steps that turns valid ecma 5 code
        // into invalid ecma 5 code. This is why the 'compress' and 'output'
        // sections only apply transformations that are ecma 5 safe
        // https://github.com/facebook/create-react-app/pull/4234
        ecma: 8
      },
      compress: {
        ecma: 5,
        warnings: false,
        // Disabled because of an issue with Uglify breaking seemingly valid code:
        // https://github.com/facebook/create-react-app/issues/2376
        // Pending further investigation:
        // https://github.com/mishoo/UglifyJS2/issues/2011
        comparisons: false,
        // Disabled because of an issue with Terser breaking valid code:
        // https://github.com/facebook/create-react-app/issues/5250
        // Pending further investigation:
        // https://github.com/terser-js/terser/issues/120
        inline: 2
      },
      mangle: {
        safari10: true
      },
      output: {
        ecma: 5,
        comments: false,
        // Turned on because emoji and regex is not minified properly using default
        // https://github.com/facebook/create-react-app/issues/2488
        ascii_only: true
      }
    }
  });
}

//# sourceMappingURL=mutators.js.map