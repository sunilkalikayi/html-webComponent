{"version":3,"names":["useFoobarSnapshot","describe","it","ctx","name","namePascalCase","nameCamelCase","componentId","ComponentID","fromString","result","indexFile","expect","content","toEqual"],"sources":["index-file.spec.ts"],"sourcesContent":["import { ComponentID } from '@teambit/component-id';\nimport type { ComponentContext } from '@teambit/generator';\nimport { indexFile } from './index-file';\n\n// react hook convention is `useX` (lowercase \"use\")\n// it is required to enable hook-specific linting rules\nconst useFoobarSnapshot = `export { useFooBar } from './use-foo-bar';\n`; // trailing line break\n\ndescribe('templates: react-hook, index-file', () => {\n  it('should match snapshot', () => {\n    const ctx: ComponentContext = {\n      name: 'use-foo-bar',\n      namePascalCase: 'UseFooBar',\n      nameCamelCase: 'useFooBar',\n      componentId: ComponentID.fromString('baz.qux/use/foo/bar'),\n    };\n\n    const result = indexFile(ctx);\n\n    expect(result.content).toEqual(useFoobarSnapshot);\n  });\n});\n"],"mappings":";;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;AACA;AACA,MAAMA,iBAAiB,GAAI;AAC3B,CAAC,CAAC,CAAC;;AAEHC,QAAQ,CAAC,mCAAmC,EAAE,MAAM;EAClDC,EAAE,CAAC,uBAAuB,EAAE,MAAM;IAChC,MAAMC,GAAqB,GAAG;MAC5BC,IAAI,EAAE,aAAa;MACnBC,cAAc,EAAE,WAAW;MAC3BC,aAAa,EAAE,WAAW;MAC1BC,WAAW,EAAEC,0BAAW,CAACC,UAAU,CAAC,qBAAqB;IAC3D,CAAC;IAED,MAAMC,MAAM,GAAG,IAAAC,sBAAS,EAACR,GAAG,CAAC;IAE7BS,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC,CAACC,OAAO,CAACd,iBAAiB,CAAC;EACnD,CAAC,CAAC;AACJ,CAAC,CAAC"}