"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reactEnvTemplate = void 0;
function _index() {
  const data = require("./files/index");
  _index = function () {
    return data;
  };
  return data;
}
function _doc() {
  const data = require("./files/doc");
  _doc = function () {
    return data;
  };
  return data;
}
function _main() {
  const data = require("./files/main.runtime");
  _main = function () {
    return data;
  };
  return data;
}
function _preview() {
  const data = require("./files/preview.runtime");
  _preview = function () {
    return data;
  };
  return data;
}
function _aspect() {
  const data = require("./files/aspect");
  _aspect = function () {
    return data;
  };
  return data;
}
function _webpack() {
  const data = require("./files/webpack.config");
  _webpack = function () {
    return data;
  };
  return data;
}
function _typescript() {
  const data = require("./files/typescript/typescript.config");
  _typescript = function () {
    return data;
  };
  return data;
}
function _styles() {
  const data = require("./files/typescript/styles");
  _styles = function () {
    return data;
  };
  return data;
}
function _tsTransformer() {
  const data = require("./files/typescript/ts-transformer");
  _tsTransformer = function () {
    return data;
  };
  return data;
}
function _jest() {
  const data = require("./files/jest.config");
  _jest = function () {
    return data;
  };
  return data;
}
const reactEnvTemplate = {
  name: 'react-env',
  description: 'customize the base React env with your configs and tools',
  generateFiles: context => {
    return [{
      relativePath: 'index.ts',
      content: (0, _index().indexFile)(context),
      isMain: true
    }, {
      relativePath: `${context.name}.docs.mdx`,
      content: (0, _doc().docFile)(context)
    }, {
      relativePath: `${context.name}.main.runtime.ts`,
      content: (0, _main().mainRuntimeFile)(context)
    }, {
      relativePath: `${context.name}.preview.runtime.ts`,
      content: (0, _preview().previewRuntimeFile)(context)
    }, {
      relativePath: `${context.name}.aspect.ts`,
      content: (0, _aspect().aspectFile)(context)
    }, {
      relativePath: `webpack/webpack-transformers.ts`,
      content: (0, _webpack().webpackConfigFile)()
    }, {
      relativePath: `typescript/tsconfig.json`,
      content: (0, _typescript().typescriptConfigFile)()
    }, {
      relativePath: `typescript/styles.d.ts`,
      content: (0, _styles().globalStylesFile)()
    }, {
      relativePath: `typescript/ts-transformer.ts`,
      content: (0, _tsTransformer().tsTransformerFile)()
    }, {
      relativePath: `jest/jest.config.js`,
      content: (0, _jest().jestConfigFile)()
    }];
  },
  config: {
    'teambit.envs/env': {},
    'teambit.envs/envs': {
      env: 'teambit.envs/env'
    }
  }
};
exports.reactEnvTemplate = reactEnvTemplate;

//# sourceMappingURL=index.js.map