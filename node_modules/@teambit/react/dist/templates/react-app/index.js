"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reactAppTemplate = void 0;
function _appPlugin() {
  const data = require("./files/app-plugin");
  _appPlugin = function () {
    return data;
  };
  return data;
}
function _index() {
  const data = require("./files/index");
  _index = function () {
    return data;
  };
  return data;
}
function _doc() {
  const data = require("./files/doc");
  _doc = function () {
    return data;
  };
  return data;
}
function _compositions() {
  const data = require("./files/compositions");
  _compositions = function () {
    return data;
  };
  return data;
}
function _app() {
  const data = require("./files/app");
  _app = function () {
    return data;
  };
  return data;
}
function _appRoot() {
  const data = require("./files/app-root");
  _appRoot = function () {
    return data;
  };
  return data;
}
const reactAppTemplate = {
  name: 'react-app',
  hidden: true,
  description: 'Creates a React app',
  generateFiles: context => {
    return [{
      relativePath: 'index.ts',
      content: (0, _index().indexFile)(context),
      isMain: true
    }, {
      relativePath: `${context.name}.docs.mdx`,
      content: (0, _doc().docFile)(context)
    }, {
      relativePath: `${context.name}.react-app.ts`,
      content: (0, _appPlugin().appPlugin)(context)
    }, {
      relativePath: `${context.name}.compositions.tsx`,
      content: (0, _compositions().compositionsFile)(context)
    }, {
      relativePath: `app.tsx`,
      content: (0, _app().appFile)(context)
    }, {
      relativePath: `${context.name}.app-root.tsx`,
      content: (0, _appRoot().appRootFile)(context)
    }];
  },
  config: {
    'teambit.harmony/aspect': {},
    'teambit.envs/envs': {
      env: 'teambit.harmony/aspect'
    }
  }
};
exports.reactAppTemplate = reactAppTemplate;

//# sourceMappingURL=index.js.map