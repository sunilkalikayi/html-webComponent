{"version":3,"names":["MDXCompiler","constructor","id","config","displayConfig","JSON","stringify","getDistDir","distDir","transpileFile","fileContent","options","afterMdxCompile","mdxCompileSync","filepath","filePath","bitFlavour","filePathAfterMdxCompile","replaceFileExtToJs","afterBabelCompile","babelTranspileFileContent","contents","rootDir","componentDir","babelTransformOptions","build","context","capsules","capsuleNetwork","seedersCapsules","componentsResults","map","capsule","srcFiles","component","filesystem","files","filter","file","isFileSupported","relative","errors","srcFile","transpiled","toString","path","undefined","outputFileSync","join","getDistPathBySrcPath","outputPath","outputText","length","err","artifacts","name","globPatterns","srcPath","fileWithNewExt","replace","ignoredExtensions","ignoredExt","find","ext","endsWith","ignoredPatterns","ignoredPattern","pattern","minimatch","version"],"sources":["mdx.compiler.ts"],"sourcesContent":["import { join } from 'path';\nimport { outputFileSync } from 'fs-extra';\nimport { Compiler, TranspileFileOutput, TranspileFileParams } from '@teambit/compiler';\nimport { BuiltTaskResult, BuildContext } from '@teambit/builder';\nimport { compileSync as mdxCompileSync } from '@teambit/mdx.modules.mdx-compiler';\nimport minimatch from 'minimatch';\nimport { transpileFileContent as babelTranspileFileContent } from '@teambit/compilation.modules.babel-compiler';\nimport type { TransformOptions } from '@babel/core';\n\nexport type MDXCompilerOpts = {\n  ignoredExtensions?: string[];\n  ignoredPatterns?: string[];\n  babelTransformOptions?: TransformOptions;\n};\nexport class MDXCompiler implements Compiler {\n  displayName = 'MDX';\n\n  shouldCopyNonSupportedFiles = true;\n\n  distDir = 'dist';\n\n  constructor(readonly id: string, readonly config: MDXCompilerOpts) {}\n\n  displayConfig() {\n    return JSON.stringify(this.config, null, 2);\n  }\n\n  getDistDir() {\n    return this.distDir;\n  }\n\n  transpileFile(fileContent: string, options: TranspileFileParams): TranspileFileOutput {\n    const afterMdxCompile = mdxCompileSync(fileContent, {\n      filepath: options.filePath,\n      // this compiler is not indented to compile according to the bit flavour.\n      bitFlavour: false,\n    });\n    const filePathAfterMdxCompile = this.replaceFileExtToJs(options.filePath);\n    const afterBabelCompile = babelTranspileFileContent(\n      afterMdxCompile.contents,\n      {\n        rootDir: options.componentDir,\n        filePath: filePathAfterMdxCompile,\n      },\n      this.config.babelTransformOptions || {}\n    );\n\n    return afterBabelCompile;\n  }\n\n  /**\n   * compile components inside isolated capsules. this being used during tag for the release.\n   * meaning, the final package of the component has the dists generated by this method.\n   */\n  async build(context: BuildContext): Promise<BuiltTaskResult> {\n    const capsules = context.capsuleNetwork.seedersCapsules;\n    const componentsResults = capsules.map((capsule) => {\n      const srcFiles = capsule.component.filesystem.files.filter((file) => {\n        return this.isFileSupported(file.relative);\n      });\n\n      const errors = srcFiles.map((srcFile) => {\n        try {\n          const transpiled = this.transpileFile(srcFile.contents.toString('utf-8'), {\n            filePath: this.replaceFileExtToJs(srcFile.relative),\n            componentDir: capsule.path,\n          });\n\n          if (!transpiled) {\n            return undefined;\n          }\n\n          outputFileSync(\n            join(capsule.path, this.getDistPathBySrcPath(transpiled[0].outputPath)),\n            transpiled[0].outputText\n          );\n          if (transpiled.length > 1) {\n            outputFileSync(join(capsule.path, this.distDir, transpiled[1].outputPath), transpiled[1].outputText);\n          }\n          return undefined;\n        } catch (err: any) {\n          return err;\n        }\n      });\n\n      return {\n        errors: errors.filter((err) => !!err),\n        component: capsule.component,\n      };\n    });\n\n    return {\n      componentsResults,\n      artifacts: [\n        {\n          name: 'dist',\n          globPatterns: [`${this.distDir}/**`],\n        },\n      ],\n    };\n  }\n\n  /**\n   * given a source file, return its parallel in the dists. e.g. \"index.ts\" => \"dist/index.js\"\n   * both, the return path and the given path are relative paths.\n   */\n  getDistPathBySrcPath(srcPath: string): string {\n    const fileWithNewExt = this.replaceFileExtToJs(srcPath);\n    return join(this.distDir, fileWithNewExt);\n  }\n\n  private replaceFileExtToJs(srcPath: string): string {\n    let fileWithNewExt = srcPath;\n    if (this.isFileSupported(srcPath)) {\n      fileWithNewExt = srcPath.replace('.mdx', '.mdx.js');\n    }\n    return fileWithNewExt;\n  }\n\n  /**\n   * only supported files matching get compiled. others, are copied to the dist dir.\n   */\n  isFileSupported(filePath: string): boolean {\n    const ignoredExtensions = this.config.ignoredExtensions ?? [];\n    const ignoredExt = ignoredExtensions.find((ext) => filePath.endsWith(ext));\n    const ignoredPatterns = this.config.ignoredPatterns ?? [];\n    const ignoredPattern = ignoredPatterns.find((pattern) => minimatch(filePath, pattern));\n    return !ignoredExt && !ignoredPattern && (filePath.endsWith('.mdx') || filePath.endsWith('.md'));\n  }\n\n  /**\n   * returns the version of the current compiler instance (e.g. '4.0.1').\n   */\n  version(): string {\n    return '';\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAQO,MAAMA,WAAW,CAAqB;EAO3CC,WAAW,CAAUC,EAAU,EAAWC,MAAuB,EAAE;IAAA,KAA9CD,EAAU,GAAVA,EAAU;IAAA,KAAWC,MAAuB,GAAvBA,MAAuB;IAAA,qDANnD,KAAK;IAAA,qEAEW,IAAI;IAAA,iDAExB,MAAM;EAEoD;EAEpEC,aAAa,GAAG;IACd,OAAOC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACH,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;EAC7C;EAEAI,UAAU,GAAG;IACX,OAAO,IAAI,CAACC,OAAO;EACrB;EAEAC,aAAa,CAACC,WAAmB,EAAEC,OAA4B,EAAuB;IACpF,MAAMC,eAAe,GAAG,IAAAC,yBAAc,EAACH,WAAW,EAAE;MAClDI,QAAQ,EAAEH,OAAO,CAACI,QAAQ;MAC1B;MACAC,UAAU,EAAE;IACd,CAAC,CAAC;IACF,MAAMC,uBAAuB,GAAG,IAAI,CAACC,kBAAkB,CAACP,OAAO,CAACI,QAAQ,CAAC;IACzE,MAAMI,iBAAiB,GAAG,IAAAC,0CAAyB,EACjDR,eAAe,CAACS,QAAQ,EACxB;MACEC,OAAO,EAAEX,OAAO,CAACY,YAAY;MAC7BR,QAAQ,EAAEE;IACZ,CAAC,EACD,IAAI,CAACd,MAAM,CAACqB,qBAAqB,IAAI,CAAC,CAAC,CACxC;IAED,OAAOL,iBAAiB;EAC1B;;EAEA;AACF;AACA;AACA;EACE,MAAMM,KAAK,CAACC,OAAqB,EAA4B;IAC3D,MAAMC,QAAQ,GAAGD,OAAO,CAACE,cAAc,CAACC,eAAe;IACvD,MAAMC,iBAAiB,GAAGH,QAAQ,CAACI,GAAG,CAAEC,OAAO,IAAK;MAClD,MAAMC,QAAQ,GAAGD,OAAO,CAACE,SAAS,CAACC,UAAU,CAACC,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAK;QACnE,OAAO,IAAI,CAACC,eAAe,CAACD,IAAI,CAACE,QAAQ,CAAC;MAC5C,CAAC,CAAC;MAEF,MAAMC,MAAM,GAAGR,QAAQ,CAACF,GAAG,CAAEW,OAAO,IAAK;QACvC,IAAI;UACF,MAAMC,UAAU,GAAG,IAAI,CAAClC,aAAa,CAACiC,OAAO,CAACrB,QAAQ,CAACuB,QAAQ,CAAC,OAAO,CAAC,EAAE;YACxE7B,QAAQ,EAAE,IAAI,CAACG,kBAAkB,CAACwB,OAAO,CAACF,QAAQ,CAAC;YACnDjB,YAAY,EAAES,OAAO,CAACa;UACxB,CAAC,CAAC;UAEF,IAAI,CAACF,UAAU,EAAE;YACf,OAAOG,SAAS;UAClB;UAEA,IAAAC,yBAAc,EACZ,IAAAC,YAAI,EAAChB,OAAO,CAACa,IAAI,EAAE,IAAI,CAACI,oBAAoB,CAACN,UAAU,CAAC,CAAC,CAAC,CAACO,UAAU,CAAC,CAAC,EACvEP,UAAU,CAAC,CAAC,CAAC,CAACQ,UAAU,CACzB;UACD,IAAIR,UAAU,CAACS,MAAM,GAAG,CAAC,EAAE;YACzB,IAAAL,yBAAc,EAAC,IAAAC,YAAI,EAAChB,OAAO,CAACa,IAAI,EAAE,IAAI,CAACrC,OAAO,EAAEmC,UAAU,CAAC,CAAC,CAAC,CAACO,UAAU,CAAC,EAAEP,UAAU,CAAC,CAAC,CAAC,CAACQ,UAAU,CAAC;UACtG;UACA,OAAOL,SAAS;QAClB,CAAC,CAAC,OAAOO,GAAQ,EAAE;UACjB,OAAOA,GAAG;QACZ;MACF,CAAC,CAAC;MAEF,OAAO;QACLZ,MAAM,EAAEA,MAAM,CAACJ,MAAM,CAAEgB,GAAG,IAAK,CAAC,CAACA,GAAG,CAAC;QACrCnB,SAAS,EAAEF,OAAO,CAACE;MACrB,CAAC;IACH,CAAC,CAAC;IAEF,OAAO;MACLJ,iBAAiB;MACjBwB,SAAS,EAAE,CACT;QACEC,IAAI,EAAE,MAAM;QACZC,YAAY,EAAE,CAAE,GAAE,IAAI,CAAChD,OAAQ,KAAI;MACrC,CAAC;IAEL,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEyC,oBAAoB,CAACQ,OAAe,EAAU;IAC5C,MAAMC,cAAc,GAAG,IAAI,CAACxC,kBAAkB,CAACuC,OAAO,CAAC;IACvD,OAAO,IAAAT,YAAI,EAAC,IAAI,CAACxC,OAAO,EAAEkD,cAAc,CAAC;EAC3C;EAEQxC,kBAAkB,CAACuC,OAAe,EAAU;IAClD,IAAIC,cAAc,GAAGD,OAAO;IAC5B,IAAI,IAAI,CAAClB,eAAe,CAACkB,OAAO,CAAC,EAAE;MACjCC,cAAc,GAAGD,OAAO,CAACE,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC;IACrD;IACA,OAAOD,cAAc;EACvB;;EAEA;AACF;AACA;EACEnB,eAAe,CAACxB,QAAgB,EAAW;IAAA;IACzC,MAAM6C,iBAAiB,4BAAG,IAAI,CAACzD,MAAM,CAACyD,iBAAiB,yEAAI,EAAE;IAC7D,MAAMC,UAAU,GAAGD,iBAAiB,CAACE,IAAI,CAAEC,GAAG,IAAKhD,QAAQ,CAACiD,QAAQ,CAACD,GAAG,CAAC,CAAC;IAC1E,MAAME,eAAe,4BAAG,IAAI,CAAC9D,MAAM,CAAC8D,eAAe,yEAAI,EAAE;IACzD,MAAMC,cAAc,GAAGD,eAAe,CAACH,IAAI,CAAEK,OAAO,IAAK,IAAAC,oBAAS,EAACrD,QAAQ,EAAEoD,OAAO,CAAC,CAAC;IACtF,OAAO,CAACN,UAAU,IAAI,CAACK,cAAc,KAAKnD,QAAQ,CAACiD,QAAQ,CAAC,MAAM,CAAC,IAAIjD,QAAQ,CAACiD,QAAQ,CAAC,KAAK,CAAC,CAAC;EAClG;;EAEA;AACF;AACA;EACEK,OAAO,GAAW;IAChB,OAAO,EAAE;EACX;AACF;AAAC"}