{"version":3,"names":["MDXDependencyDetector","constructor","supportedExtensions","isSupported","context","includes","ext","detect","source","output","compileSync","imports","getImportSpecifiers","files","map","importSpec","fromModule"],"sources":["mdx.detector.ts"],"sourcesContent":["import { DependencyDetector, FileContext } from '@teambit/dependency-resolver';\nimport { compileSync } from '@teambit/mdx.modules.mdx-compiler';\n\nexport class MDXDependencyDetector implements DependencyDetector {\n  constructor(private supportedExtensions: string[]) {}\n\n  isSupported(context: FileContext): boolean {\n    return this.supportedExtensions.includes(context.ext);\n  }\n\n  detect(source: string): string[] {\n    const output = compileSync(source);\n    const imports = output.getImportSpecifiers();\n    if (!imports) return [];\n    const files: string[] = imports.map((importSpec) => {\n      return importSpec.fromModule;\n    });\n\n    return files;\n  }\n}\n"],"mappings":";;;;;;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEO,MAAMA,qBAAqB,CAA+B;EAC/DC,WAAW,CAASC,mBAA6B,EAAE;IAAA,KAA/BA,mBAA6B,GAA7BA,mBAA6B;EAAG;EAEpDC,WAAW,CAACC,OAAoB,EAAW;IACzC,OAAO,IAAI,CAACF,mBAAmB,CAACG,QAAQ,CAACD,OAAO,CAACE,GAAG,CAAC;EACvD;EAEAC,MAAM,CAACC,MAAc,EAAY;IAC/B,MAAMC,MAAM,GAAG,IAAAC,yBAAW,EAACF,MAAM,CAAC;IAClC,MAAMG,OAAO,GAAGF,MAAM,CAACG,mBAAmB,EAAE;IAC5C,IAAI,CAACD,OAAO,EAAE,OAAO,EAAE;IACvB,MAAME,KAAe,GAAGF,OAAO,CAACG,GAAG,CAAEC,UAAU,IAAK;MAClD,OAAOA,UAAU,CAACC,UAAU;IAC9B,CAAC,CAAC;IAEF,OAAOH,KAAK;EACd;AACF;AAAC"}