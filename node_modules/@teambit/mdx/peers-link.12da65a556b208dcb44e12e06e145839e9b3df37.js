// @ts-nocheck
import * as React from "react";
import * as ReactDom from "react-dom";
import * as TeambitMdxUiMdxScopeContext from "@teambit/mdx.ui.mdx-scope-context";
import * as MdxJsReact from "@mdx-js/react";

const globalObj = window;

guard("React", React);
guard("ReactDom", ReactDom);
guard("TeambitMdxUiMdxScopeContext", TeambitMdxUiMdxScopeContext);
guard("MdxJsReact", MdxJsReact);

globalObj["React"] = React;
globalObj["ReactDom"] = ReactDom;
globalObj["TeambitMdxUiMdxScopeContext"] = TeambitMdxUiMdxScopeContext;
globalObj["MdxJsReact"] = MdxJsReact;

function guard(property, expected) {
  var existing = globalObj[property];

  if (existing === expected && expected !== undefined)
    console.warn('[expose-peers] "' + property + '" already exists in global scope, but with correct value');
  else if (existing !== undefined)
    throw new Error('[expose-peers] "' + property + '" already exists in the global scope, cannot overwrite');
}
