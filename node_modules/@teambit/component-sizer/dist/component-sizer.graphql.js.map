{"version":3,"names":["componentSizerSchema","componentSizerMain","typeDefs","gql","resolvers","Component","size","component","getComponentSize"],"sources":["component-sizer.graphql.ts"],"sourcesContent":["import { Component } from '@teambit/component';\nimport { Schema } from '@teambit/graphql';\nimport gql from 'graphql-tag';\n\nimport { ComponentSizerMain } from './component-sizer.main.runtime';\n\nexport function componentSizerSchema(componentSizerMain: ComponentSizerMain): Schema {\n  return {\n    typeDefs: gql`\n      type ComponentSizedFile {\n        name: String\n        size: Int\n        compressedSize: Int\n      }\n\n      type ComponentSize {\n        # breakdown for the component files sizes\n        files: [ComponentSizedFile]\n        # breakdown for the component assets sizes\n        assets: [ComponentSizedFile]\n        # total size of the component files (like js and css) (without assets)\n        totalFiles: Int\n        # total size of the component assets (like pngs) (without files)\n        totalAssets: Int\n        # total size of the component files and assets\n        total: Int\n\n        compressedTotalFiles: Int\n        compressedTotalAssets: Int\n        compressedTotal: Int\n      }\n\n      extend type Component {\n        # size of the component bundle\n        size: ComponentSize\n      }\n    `,\n    resolvers: {\n      Component: {\n        size: (component: Component) => {\n          return componentSizerMain.getComponentSize(component);\n        },\n      },\n    },\n  };\n}\n"],"mappings":";;;;;;;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAIO,SAASA,oBAAoB,CAACC,kBAAsC,EAAU;EACnF,OAAO;IACLC,QAAQ,EAAE,IAAAC,qBAAG,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACDC,SAAS,EAAE;MACTC,SAAS,EAAE;QACTC,IAAI,EAAGC,SAAoB,IAAK;UAC9B,OAAON,kBAAkB,CAACO,gBAAgB,CAACD,SAAS,CAAC;QACvD;MACF;IACF;EACF,CAAC;AACH"}