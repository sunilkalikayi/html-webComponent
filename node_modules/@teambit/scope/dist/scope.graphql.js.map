{"version":3,"names":["scopeSchema","scopeMain","typeDefs","gql","resolvers","Scope","name","scope","description","icon","backgroundIconColor","components","props","list","includeCache","get","id","ComponentID","fromString","_getLegacy","resolvedId","resolveId","component","state","_consumer","toString","_legacyLatestVersions","ids","latestVersions","path","_legacyList","namespaces","listData","forEach","data","getLogs","getMany","map","str","Query"],"sources":["scope.graphql.ts"],"sourcesContent":["import { ComponentID } from '@teambit/component';\nimport gql from 'graphql-tag';\nimport { latestVersions } from '@teambit/legacy/dist/api/scope';\nimport list from '@teambit/legacy/dist/api/scope/lib/scope-list';\nimport { ScopeMain } from './scope.main.runtime';\n\nexport function scopeSchema(scopeMain: ScopeMain) {\n  return {\n    typeDefs: gql`\n      type Scope {\n        # name of the scope.\n        name: String\n\n        # description of the scope.\n        description: String\n\n        # icon of the scope.\n        icon: String\n\n        # background color of the icon.\n        backgroundIconColor: String\n\n        # path of the scope.\n        path: String\n\n        # list of components contained in the scope.\n        components(offset: Int, limit: Int, includeCache: Boolean, namespaces: [String!]): [Component]\n\n        # get a specific component.\n        get(id: String!): Component\n\n        # get serialized legacy component. deprecated. PLEASE DO NOT USE THIS API.\n        _getLegacy(id: String!): String\n\n        # get logs.\n        getLogs(id: String!): [Log]\n\n        # get many components by ID.\n        getMany(ids: [String]!): [Component]\n\n        # get serialized legacy component ids with versions. deprecated. PLEASE DO NOT USE THIS API.\n        _legacyLatestVersions(ids: [String]!): [String]\n\n        # get serialized list component of components. deprecated. PLEASE DO NOT USE THIS API.\n        _legacyList(namespaces: String): [LegacyMeta] @deprecated(reason: \"Use the component query on Scope\")\n      }\n\n      type Log {\n        message: String\n        username: String\n        email: String\n        date: String\n        hash: String!\n        tag: String\n      }\n\n      type LegacyMeta {\n        id: String\n        deprecated: Boolean\n      }\n\n      type Query {\n        scope: Scope\n      }\n    `,\n    resolvers: {\n      Scope: {\n        name: (scope: ScopeMain) => {\n          return scope.name;\n        },\n        description: (scope: ScopeMain) => {\n          return scope.description;\n        },\n        icon: (scope: ScopeMain) => {\n          return scope.icon;\n        },\n        backgroundIconColor: (scope: ScopeMain) => {\n          return scope.backgroundIconColor;\n        },\n        components: (\n          scope: ScopeMain,\n          props?: { offset: number; limit: number; includeCache?: boolean; namespaces?: string[] }\n        ) => {\n          if (!props) return scope.list();\n          return scope.list({ ...props }, props.includeCache);\n        },\n\n        get: async (scope: ScopeMain, { id }: { id: string }) => {\n          return scope.get(ComponentID.fromString(id));\n        },\n\n        _getLegacy: async (scope: ScopeMain, { id }: { id: string }) => {\n          const resolvedId = await scope.resolveId(id);\n          const component = await scope.get(resolvedId);\n          if (!component) return null;\n          return component.state._consumer.toString();\n        },\n\n        _legacyLatestVersions: async (scope: ScopeMain, { ids }: { ids: string[] }) => {\n          return latestVersions(scope.path, ids);\n        },\n\n        _legacyList: async (scope: ScopeMain, { namespaces }: { namespaces: string }) => {\n          const listData: any = await list(scope.path, namespaces);\n          listData.forEach((data) => {\n            data.id = data.id.toString();\n          });\n          return listData;\n        },\n\n        getLogs: async (scope: ScopeMain, { id }: { id: string }) => {\n          return scope.getLogs(ComponentID.fromString(id));\n        },\n\n        getMany: async (scope: ScopeMain, { ids }: { ids: string[] }) => {\n          return scope.getMany(ids.map((str) => ComponentID.fromString(str)));\n        },\n        // delete: async (scope: ScopeMain, props: {  }) => {\n\n        // }\n      },\n      Query: {\n        scope: () => scopeMain,\n      },\n    },\n  };\n}\n"],"mappings":"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"}