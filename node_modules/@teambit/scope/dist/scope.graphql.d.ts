import { ScopeMain } from './scope.main.runtime';
export declare function scopeSchema(scopeMain: ScopeMain): {
    typeDefs: import("graphql").DocumentNode;
    resolvers: {
        Scope: {
            name: (scope: ScopeMain) => string;
            description: (scope: ScopeMain) => string | undefined;
            icon: (scope: ScopeMain) => string | undefined;
            backgroundIconColor: (scope: ScopeMain) => string | undefined;
            components: (scope: ScopeMain, props?: {
                offset: number;
                limit: number;
                includeCache?: boolean | undefined;
                namespaces?: string[] | undefined;
            } | undefined) => Promise<import("@teambit/component").Component[]>;
            get: (scope: ScopeMain, { id }: {
                id: string;
            }) => Promise<import("@teambit/component").Component | undefined>;
            _getLegacy: (scope: ScopeMain, { id }: {
                id: string;
            }) => Promise<any>;
            _legacyLatestVersions: (scope: ScopeMain, { ids }: {
                ids: string[];
            }) => Promise<string[]>;
            _legacyList: (scope: ScopeMain, { namespaces }: {
                namespaces: string;
            }) => Promise<any>;
            getLogs: (scope: ScopeMain, { id }: {
                id: string;
            }) => Promise<import("@teambit/legacy/scopes/component/legacy-component-log").LegacyComponentLog[]>;
            getMany: (scope: ScopeMain, { ids }: {
                ids: string[];
            }) => Promise<import("@teambit/component").Component[]>;
        };
        Query: {
            scope: () => ScopeMain;
        };
    };
};
