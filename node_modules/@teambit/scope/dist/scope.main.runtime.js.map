{"version":3,"names":["ScopeMain","constructor","harmony","legacyScope","componentExtension","config","postPutSlot","postDeleteSlot","postExportSlot","postObjectsPersist","preFetchObjects","isolator","aspectLoader","logger","envs","componentLoader","ScopeComponentLoader","name","icon","backgroundIconColor","description","path","isLegacy","reloadAspectsWithNewVersion","components","host","getHost","getUserAspectsIdsWithoutRootIds","allUserAspectIds","getUserAspects","rootIds","Object","keys","toObject","diffIds","difference","getAspectsByPreviouslyUsedVersion","harmonyIds","aspectsIds","aspectsP","map","component","newId","resolveComponentId","id","previouslyUsedVersion","version","newIdWithPreviouslyUsedVersion","changeVersion","includes","toString","push","Promise","all","idsToLoad","loadAspects","getManyByLegacy","mapSeries","getFromConsumerComponent","clearCache","debug","objects","builderDataMapToLegacyOnTagResults","builderDataComponentMap","builderDataToLegacyExtension","builderData","existingBuilder","state","aspects","get","BuilderAspect","legacy","builderExtension","ExtensionDataEntry","undefined","data","toArray","_legacy","onPostPut","postPutFn","register","onPostDelete","postDeleteFn","registerOnPostExport","postExportFn","registerOnPreFetchObjects","preFetchObjectsFn","registerOnPostObjectsPersist","postObjectsPersistFn","fetch","ids","persist","options","delete","force","lanes","headers","authData","getAuthDataFromHeader","authorization","result","remove","fns","values","metadata","auth","componentIds","ComponentID","fromString","fn","err","error","toObjectList","types","list","ObjectList","fromBitObjects","toJs","str","endsWith","replace","parseLocalAspect","localAspects","dirPaths","localAspect","resolve","nonExistsDirPaths","filter","existsSync","forEach","warn","existsDirPaths","findRuntime","dirPath","runtime","files","readdirSync","join","find","loadAspectFromPath","manifests","scopeRuntime","module","require","default","loadExtensionsByManifests","throwOnError","neededFor","callId","Math","floor","random","loggerPrefix","info","length","grouped","groupAspectIdsByEnvOfTheList","envsManifestsIds","getManifestsAndLoadAspects","other","otherManifestsIds","concat","getNonLoadedAspects","envsIds","uniq","getEnvId","envId","isCoreEnv","groupBy","scopeManifests","potentialPluginsIds","getManifestsGraphRecursively","scopePluginsManifests","allManifests","compact","manifest","visited","opts","nonVisitedId","customEnvsIds","requireAspects","index","isValidAspect","depsToLoad","dependencies","_runtimes","depIds","d","loaded","notLoadedIds","isAspectLoaded","coreAspectsStringIds","getCoreAspectIds","idsWithoutCore","aspectIds","startsWith","resolveMultipleComponentIds","import","reFetchUnBuiltVersion","resolveLocalAspects","dirs","dir","runtimeManifest","AspectDefinition","getResolvedAspects","network","isolateComponents","c","baseDir","getAspectCapsulePath","skipIfExists","seedersOnly","includeFromNestedHosts","installOptions","copyPeerToRuntimeOnRoot","packageManagerConfigRootDir","useNesting","copyPeerToRuntimeOnComponents","installPeersFromEnvs","capsules","seedersCapsules","capsule","RequireableComponent","plugins","getPlugins","has","compileIfNoDist","load","MainRuntime","aspect","getRuntimePath","mainRuntime","runtimePath","env","getEnv","compiler","getCompiler","distDir","DEFAULT_DIST_DIRNAME","distExists","compiledCode","filesystem","flatMap","file","isFileSupported","outputText","contents","outputPath","transpileFile","filePath","componentDir","compiledFile","getDistPathBySrcPath","outputFile","tryCompile","requirableAspect","requireableExtensions","erroredId","requireWithCatch","requireableAspects","requireableExtension","doRequire","code","newErr","resolvedAspectsAgain","manifestAgain","handleExtensionLoadingError","resolveUserAspects","runtimeName","userAspectsIds","getMany","aspectDefs","resolveAspects","getCapsule","Error","localPath","aspectPath","originalStringIds","defaultOpts","excludeCore","requestedOnly","mergedOpts","coreAspectsIds","requestedCoreStringIds","groupedByIsCore","false","true","toStringWithoutVersion","withoutLocalAspects","aspectId","fullName","userAspectsDefs","localResolved","coreAspectsDefs","getCoreAspectDefs","allDefs","afterExclusion","userAspectsIdsWithoutVersion","userAspectsIdsWithoutVersionAndCoreRequested","def","getId","isTarget","isCore","coreId","uniqDefs","uniqBy","defs","componentIdsString","getLegacyGraph","comp","legacyIds","bitId","hasScope","changeScope","legacyGraph","buildOneGraphForComponentsUsingScope","useCache","throwIfNotExist","lane","legacyId","scope","withoutOwnScopeAndLocals","ComponentsIds","fromArray","consumerComponent","getRemoteComponent","getManyRemoteComponents","includeCache","includeFromLanes","patternsWithScope","namespaces","pattern","componentsIds","listIds","limit","slice","offset","listInvalid","patterns","allModelComponents","filterByCacheAndLanes","modelComponent","cacheFilter","exists","lanesFilter","hasHead","modelComponentsToList","fromLegacy","toBitIdWithLatestVersion","some","isMatchNamespacePatternItem","match","hasId","componentId","includeOrphaned","includeVersion","hasIdNested","idsWithoutEmpty","componentsP","getOrThrow","loadMany","ComponentNotFound","getState","hash","getSnap","getLogs","shortHash","startsFrom","loadComponentLogs","getStagedConfig","currentLaneId","StagedConfig","idStr","loadModelComponentByIdStr","getIdToCheck","IdToCheck","BitId","getParsedId","byPattern","idsByPattern","throwForNoMatch","BitError","filterIdsFromPoolIdsByPattern","split","p","trim","every","unshift","idsToCheck","idsFiltered","multimatch","NoIdMatchPattern","getExactVersionBySemverRange","range","getModelComponent","versions","listVersions","semver","maxSatisfying","includePrerelease","resumeExport","exportId","remotes","resolveId","_legacyRemotes","getScopeRemotes","listRemoteScope","scopeName","remote","results","isAspectComponent","loadComponentsAspect","isModified","write","provider","componentExt","ui","graphql","cli","express","loggerMain","postObjectsPersistSlot","preFetchObjectsSlot","bitConfig","loadScopeIfExist","cwd","createLogger","ScopeAspect","registerOnStart","hasWorkspace","getNotLoadedConfiguredExtensions","ScopeCmd","onPutHook","getAuthData","token","Http","getToken","type","DEFAULT_AUTH_TYPE","credentials","onPostExportHook","onPostObjectsPersistHook","ExportPersist","PostSign","Scope","onPostExport","Repository","onPostObjectsPersist","PutRoute","FetchRoute","ActionRoute","DeleteRoute","registerUiRoot","ScopeUIRoot","scopeSchema","registerHost","Slot","withType","ComponentAspect","UIAspect","GraphqlAspect","CLIAspect","IsolatorAspect","AspectLoaderAspect","ExpressAspect","LoggerAspect","EnvsAspect","httpTimeOut","addRuntime"],"sources":["scope.main.runtime.ts"],"sourcesContent":["import mapSeries from 'p-map-series';\nimport semver from 'semver';\nimport multimatch from 'multimatch';\nimport type { AspectLoaderMain } from '@teambit/aspect-loader';\nimport { RawBuilderData, BuilderAspect } from '@teambit/builder';\nimport { readdirSync, existsSync } from 'fs-extra';\nimport { resolve, join } from 'path';\nimport { AspectLoaderAspect, AspectDefinition } from '@teambit/aspect-loader';\nimport { CLIAspect, CLIMain, MainRuntime } from '@teambit/cli';\nimport type { ComponentMain, ComponentMap, ResolveAspectsOptions } from '@teambit/component';\nimport { Component, ComponentAspect, ComponentFactory, ComponentID, Snap, State } from '@teambit/component';\nimport type { GraphqlMain } from '@teambit/graphql';\nimport { GraphqlAspect } from '@teambit/graphql';\nimport { Harmony, Slot, SlotRegistry, ExtensionManifest, Aspect } from '@teambit/harmony';\nimport { Capsule, IsolatorAspect, IsolatorMain } from '@teambit/isolator';\nimport { LoggerAspect, LoggerMain, Logger } from '@teambit/logger';\nimport { ExpressAspect, ExpressMain } from '@teambit/express';\nimport type { UiMain } from '@teambit/ui';\nimport { UIAspect } from '@teambit/ui';\nimport { RequireableComponent } from '@teambit/harmony.modules.requireable-component';\nimport { BitId } from '@teambit/legacy-bit-id';\nimport { BitIds as ComponentsIds } from '@teambit/legacy/dist/bit-id';\nimport { ModelComponent, Lane } from '@teambit/legacy/dist/scope/models';\nimport { Repository } from '@teambit/legacy/dist/scope/objects';\nimport LegacyScope, { LegacyOnTagResult } from '@teambit/legacy/dist/scope/scope';\nimport { ComponentLog } from '@teambit/legacy/dist/scope/models/model-component';\nimport { loadScopeIfExist } from '@teambit/legacy/dist/scope/scope-loader';\nimport { PersistOptions } from '@teambit/legacy/dist/scope/types';\nimport { DEFAULT_DIST_DIRNAME } from '@teambit/legacy/dist/constants';\nimport LegacyGraph from '@teambit/legacy/dist/scope/graph/graph';\nimport { ExportPersist, PostSign } from '@teambit/legacy/dist/scope/actions';\nimport { getScopeRemotes } from '@teambit/legacy/dist/scope/scope-remotes';\nimport { Remotes } from '@teambit/legacy/dist/remotes';\nimport { isMatchNamespacePatternItem } from '@teambit/workspace.modules.match-pattern';\nimport { Scope } from '@teambit/legacy/dist/scope';\nimport { Types } from '@teambit/legacy/dist/scope/object-registrar';\nimport { FETCH_OPTIONS } from '@teambit/legacy/dist/api/scope/lib/fetch';\nimport { ObjectList } from '@teambit/legacy/dist/scope/objects/object-list';\nimport { Http, DEFAULT_AUTH_TYPE, AuthData, getAuthDataFromHeader } from '@teambit/legacy/dist/scope/network/http/http';\nimport { buildOneGraphForComponentsUsingScope } from '@teambit/legacy/dist/scope/graph/components-graph';\nimport { remove } from '@teambit/legacy/dist/api/scope';\nimport { BitError } from '@teambit/bit-error';\nimport ConsumerComponent from '@teambit/legacy/dist/consumer/component';\nimport { resumeExport } from '@teambit/legacy/dist/scope/component-ops/export-scope-components';\nimport { ExtensionDataEntry } from '@teambit/legacy/dist/consumer/config';\nimport EnvsAspect, { EnvsMain } from '@teambit/envs';\nimport { Compiler } from '@teambit/compiler';\nimport { compact, uniq, slice, uniqBy, difference, groupBy } from 'lodash';\nimport { ComponentNotFound } from './exceptions';\nimport { ScopeAspect } from './scope.aspect';\nimport { scopeSchema } from './scope.graphql';\nimport { ScopeUIRoot } from './scope.ui-root';\nimport { PutRoute, FetchRoute, ActionRoute, DeleteRoute } from './routes';\nimport { ScopeComponentLoader } from './scope-component-loader';\nimport { ScopeCmd } from './scope-cmd';\nimport { StagedConfig } from './staged-config';\nimport { NoIdMatchPattern } from './exceptions/no-id-match-pattern';\n\ntype ManifestOrAspect = ExtensionManifest | Aspect;\n\ntype RemoteEventMetadata = { auth?: AuthData; headers?: {} };\ntype RemoteEvent<Data> = (data: Data, metadata: RemoteEventMetadata, errors?: Array<string | Error>) => Promise<void>;\ntype OnPostPutData = { ids: ComponentID[]; lanes: Lane[] };\ntype OnPostDeleteData = { ids: ComponentID[] };\ntype OnPreFetchObjectData = { ids: string[]; fetchOptions: FETCH_OPTIONS };\n\ntype OnPostPut = RemoteEvent<OnPostPutData>;\ntype OnPostExport = RemoteEvent<OnPostPutData>;\ntype OnPostDelete = RemoteEvent<OnPostDeleteData>;\ntype OnPostObjectsPersist = RemoteEvent<undefined>;\ntype OnPreFetchObjects = RemoteEvent<OnPreFetchObjectData>;\n\nexport type OnPostPutSlot = SlotRegistry<OnPostPut>;\nexport type OnPostDeleteSlot = SlotRegistry<OnPostDelete>;\nexport type OnPostExportSlot = SlotRegistry<OnPostExport>;\nexport type OnPostObjectsPersistSlot = SlotRegistry<OnPostObjectsPersist>;\nexport type OnPreFetchObjectsSlot = SlotRegistry<OnPreFetchObjects>;\n\nexport type ScopeConfig = {\n  httpTimeOut: number;\n  description?: string;\n  icon?: string;\n  backgroundIconColor?: string;\n};\n\nexport class ScopeMain implements ComponentFactory {\n  componentLoader: ScopeComponentLoader;\n  constructor(\n    /**\n     * private reference to the instance of Harmony.\n     */\n    private harmony: Harmony,\n    /**\n     * legacy scope\n     */\n    readonly legacyScope: LegacyScope,\n\n    /**\n     * component extension.\n     */\n    readonly componentExtension: ComponentMain,\n\n    /**\n     * slot registry for subscribing to build\n     */\n\n    readonly config: ScopeConfig,\n\n    private postPutSlot: OnPostPutSlot,\n\n    private postDeleteSlot: OnPostDeleteSlot,\n\n    private postExportSlot: OnPostExportSlot,\n\n    private postObjectsPersist: OnPostObjectsPersistSlot,\n\n    public preFetchObjects: OnPreFetchObjectsSlot,\n\n    private isolator: IsolatorMain,\n\n    private aspectLoader: AspectLoaderMain,\n\n    private logger: Logger,\n\n    private envs: EnvsMain\n  ) {\n    this.componentLoader = new ScopeComponentLoader(this, this.logger);\n  }\n\n  /**\n   * name of the scope\n   */\n  get name(): string {\n    return this.legacyScope.name;\n  }\n\n  get icon(): string | undefined {\n    return this.config.icon;\n  }\n\n  get backgroundIconColor(): string | undefined {\n    return this.config.backgroundIconColor;\n  }\n\n  get description(): string | undefined {\n    return this.config.description;\n  }\n\n  get path(): string {\n    return this.legacyScope.path;\n  }\n\n  get isLegacy(): boolean {\n    return this.legacyScope.isLegacy;\n  }\n\n  // We need to reload the aspects with their new version since:\n  // during get many by legacy, we go load component which in turn go to getEnv\n  // get env validates that the env written on the component is really exist by checking the envs slot registry\n  // when we load here, it's env version in the aspect list already has the new version in case the env itself is being tagged\n  // so we are search for the env in the registry with the new version number\n  // but since the env only registered during the on load of the bit process (before the tag) it's version in the registry is only the old one\n  // once we reload them we will have it registered with the new version as well\n  async reloadAspectsWithNewVersion(components: ConsumerComponent[]): Promise<void> {\n    const host = this.componentExtension.getHost();\n\n    // Return only aspects that defined on components but not in the root config file (workspace.jsonc/scope.jsonc)\n    const getUserAspectsIdsWithoutRootIds = (): string[] => {\n      const allUserAspectIds = this.aspectLoader.getUserAspects();\n      const rootIds = Object.keys(this.harmony.config.toObject());\n      const diffIds = difference(allUserAspectIds, rootIds);\n      return diffIds;\n    };\n\n    // Based on the list of components to be tagged return those who are loaded to harmony with their used version\n    const getAspectsByPreviouslyUsedVersion = async (): Promise<string[]> => {\n      const harmonyIds = getUserAspectsIdsWithoutRootIds();\n      const aspectsIds: string[] = [];\n      const aspectsP = components.map(async (component) => {\n        const newId = await host.resolveComponentId(component.id);\n        if (\n          component.previouslyUsedVersion &&\n          component.version &&\n          component.previouslyUsedVersion !== component.version\n        ) {\n          const newIdWithPreviouslyUsedVersion = newId.changeVersion(component.previouslyUsedVersion);\n          if (harmonyIds.includes(newIdWithPreviouslyUsedVersion.toString())) {\n            aspectsIds.push(newId.toString());\n          }\n        }\n      });\n      await Promise.all(aspectsP);\n      return aspectsIds;\n    };\n\n    const idsToLoad = await getAspectsByPreviouslyUsedVersion();\n    await host.loadAspects(idsToLoad, false, 'scope.reloadAspectsWithNewVersion');\n  }\n\n  getManyByLegacy(components: ConsumerComponent[]): Promise<Component[]> {\n    return mapSeries(components, async (component) => this.getFromConsumerComponent(component));\n  }\n\n  clearCache() {\n    this.logger.debug('clearing the components and the legacy cache');\n    this.componentLoader.clearCache();\n    this.legacyScope.objects.clearCache();\n  }\n\n  builderDataMapToLegacyOnTagResults(builderDataComponentMap: ComponentMap<RawBuilderData>): LegacyOnTagResult[] {\n    const builderDataToLegacyExtension = (component: Component, builderData: RawBuilderData) => {\n      const existingBuilder = component.state.aspects.get(BuilderAspect.id)?.legacy;\n      const builderExtension = existingBuilder || new ExtensionDataEntry(undefined, undefined, BuilderAspect.id);\n      builderExtension.data = builderData;\n      return builderExtension;\n    };\n    return builderDataComponentMap.toArray().map(([component, builderData]) => ({\n      id: component.id._legacy,\n      builderData: builderDataToLegacyExtension(component, builderData),\n    }));\n  }\n\n  /**\n   * register to the post-export slot.\n   */\n  onPostPut(postPutFn: OnPostPut) {\n    this.postPutSlot.register(postPutFn);\n    return this;\n  }\n\n  /**\n   * register to the post-delete slot.\n   */\n  onPostDelete(postDeleteFn: OnPostDelete) {\n    this.postDeleteSlot.register(postDeleteFn);\n    return this;\n  }\n\n  /**\n   * register to the post-export slot.\n   */\n  registerOnPostExport(postExportFn: OnPostExport) {\n    this.postExportSlot.register(postExportFn);\n    return this;\n  }\n\n  registerOnPreFetchObjects(preFetchObjectsFn: OnPreFetchObjects) {\n    this.preFetchObjects.register(preFetchObjectsFn);\n    return this;\n  }\n\n  registerOnPostObjectsPersist(postObjectsPersistFn: OnPostObjectsPersist) {\n    this.postObjectsPersist.register(postObjectsPersistFn);\n    return this;\n  }\n\n  /**\n   * Will fetch a list of components into the current scope.\n   * This will only fetch the object and won't write the files to the actual FS\n   *\n   * @param {ComponentsIds} ids list of ids to fetch\n   */\n  fetch(ids: ComponentsIds) {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\n  /**\n   * This function will get a component and sealed it's current state into the scope\n   *\n   * @param {Component[]} components A list of components to seal with specific persist options (such as message and version number)\n   * @param {PersistOptions} persistGeneralOptions General persistence options such as verbose\n   */\n  persist(components: Component[], options: PersistOptions) {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\n  async delete(\n    { ids, force, lanes }: { ids: string[]; force: boolean; lanes: boolean },\n    headers?: Record<string, any>\n  ) {\n    const authData = getAuthDataFromHeader(headers?.authorization);\n    const result = await remove({\n      path: this.path,\n      ids,\n      force,\n      lanes,\n    });\n\n    const fns = this.postDeleteSlot.values();\n    const metadata = { auth: authData, headers };\n    const componentIds = lanes ? [] : ids.map((id) => ComponentID.fromString(id));\n    await mapSeries(fns, async (fn) => {\n      try {\n        await fn({ ids: componentIds }, metadata);\n      } catch (err: any) {\n        this.logger.error('failed to run delete slot', err);\n      }\n    });\n    return result;\n  }\n\n  async toObjectList(types: Types): Promise<ObjectList> {\n    const objects = await this.legacyScope.objects.list(types);\n    return ObjectList.fromBitObjects(objects);\n  }\n\n  // TODO: temporary compiler workaround - discuss this with david.\n  private toJs(str: string) {\n    if (str.endsWith('.ts')) return str.replace('.ts', '.js');\n    return str;\n  }\n\n  private parseLocalAspect(localAspects: string[]) {\n    const dirPaths = localAspects.map((localAspect) => resolve(localAspect.replace('file://', '')));\n    const nonExistsDirPaths = dirPaths.filter((path) => !existsSync(path));\n    nonExistsDirPaths.forEach((path) => this.logger.warn(`no such file or directory: ${path}`));\n    const existsDirPaths = dirPaths.filter((path) => existsSync(path));\n    return existsDirPaths;\n  }\n\n  private findRuntime(dirPath: string, runtime: string) {\n    const files = readdirSync(join(dirPath, 'dist'));\n    return files.find((path) => path.includes(`${runtime}.runtime.js`));\n  }\n\n  private async loadAspectFromPath(localAspects: string[]) {\n    const dirPaths = this.parseLocalAspect(localAspects);\n    const manifests = dirPaths.map((dirPath) => {\n      const scopeRuntime = this.findRuntime(dirPath, 'scope');\n      if (scopeRuntime) {\n        // eslint-disable-next-line global-require, import/no-dynamic-require\n        const module = require(join(dirPath, 'dist', scopeRuntime));\n        return module.default || module;\n      }\n      // eslint-disable-next-line global-require, import/no-dynamic-require\n      const module = require(dirPath);\n      return module.default || module;\n    });\n\n    await this.aspectLoader.loadExtensionsByManifests(manifests, true);\n  }\n\n  private localAspects: string[] = [];\n\n  async loadAspects(ids: string[], throwOnError = false, neededFor?: string): Promise<string[]> {\n    // generate a random callId to be able to identify the call from the logs\n    const callId = Math.floor(Math.random() * 1000);\n    const loggerPrefix = `[${callId}] loadAspects,`;\n    this.logger.info(`${loggerPrefix} loading ${ids.length} aspects.\nids: ${ids.join(', ')}\nneeded-for: ${neededFor || '<unknown>'}`);\n    const grouped = await this.groupAspectIdsByEnvOfTheList(ids);\n    this.logger.info(`${loggerPrefix} getManifestsAndLoadAspects for grouped.envs, total ${grouped.envs?.length || 0}`);\n    const envsManifestsIds = await this.getManifestsAndLoadAspects(grouped.envs, throwOnError);\n    this.logger.info(\n      `${loggerPrefix} getManifestsAndLoadAspects for grouped.other, total ${grouped.other?.length || 0}`\n    );\n    const otherManifestsIds = await this.getManifestsAndLoadAspects(grouped.other, throwOnError);\n    this.logger.debug(`${loggerPrefix} finish loading aspects`);\n    return envsManifestsIds.concat(otherManifestsIds);\n  }\n\n  /**\n   * This function get's a list of aspect ids and return them grouped by whether any of them is the env of other from the list\n   * @param ids\n   */\n  async groupAspectIdsByEnvOfTheList(ids: string[]): Promise<{ envs?: string[]; other?: string[] }> {\n    const components = await this.getNonLoadedAspects(ids);\n    const envsIds = uniq(\n      components\n        .map((component) => this.envs.getEnvId(component))\n        .filter((envId) => !this.aspectLoader.isCoreEnv(envId))\n    );\n    const grouped = groupBy(ids, (id) => {\n      if (envsIds.includes(id)) return 'envs';\n      return 'other';\n    });\n    return grouped as { envs: string[]; other: string[] };\n  }\n\n  private async getManifestsAndLoadAspects(ids: string[] = [], throwOnError = false): Promise<string[]> {\n    const { manifests: scopeManifests, potentialPluginsIds } = await this.getManifestsGraphRecursively(\n      ids,\n      [],\n      throwOnError\n    );\n    await this.aspectLoader.loadExtensionsByManifests(scopeManifests);\n    const { manifests: scopePluginsManifests } = await this.getManifestsGraphRecursively(\n      potentialPluginsIds,\n      [],\n      throwOnError\n    );\n    await this.aspectLoader.loadExtensionsByManifests(scopePluginsManifests);\n    const allManifests = scopeManifests.concat(scopePluginsManifests);\n    return compact(allManifests.map((manifest) => manifest.id));\n  }\n\n  async getManifestsGraphRecursively(\n    ids: string[],\n    visited: string[] = [],\n    throwOnError = false,\n    opts: {\n      packageManagerConfigRootDir?: string;\n    } = {}\n  ): Promise<{ manifests: ManifestOrAspect[]; potentialPluginsIds: string[] }> {\n    ids = uniq(ids);\n    this.logger.debug(`getManifestsGraphRecursively, ids:\\n${ids.join('\\n')}`);\n    const nonVisitedId = ids.filter((id) => !visited.includes(id));\n    if (!nonVisitedId.length) {\n      return { manifests: [], potentialPluginsIds: [] };\n    }\n    const components = await this.getNonLoadedAspects(nonVisitedId);\n    // Adding all the envs ids to the array to support case when one (or more) of the aspects has custom aspect env\n    const customEnvsIds = components\n      .map((component) => this.envs.getEnvId(component))\n      .filter((envId) => !this.aspectLoader.isCoreEnv(envId));\n    // In case there is custom env we need to load it right away, otherwise we will fail during the require aspects\n    await this.getManifestsAndLoadAspects(customEnvsIds);\n    visited.push(...nonVisitedId);\n    const manifests = await this.requireAspects(components, throwOnError, opts);\n    const potentialPluginsIds = compact(\n      manifests.map((manifest, index) => {\n        if (this.aspectLoader.isValidAspect(manifest)) return undefined;\n        // return index;\n        return components[index].id.toString();\n      })\n    );\n\n    const depsToLoad: Array<ExtensionManifest | Aspect> = [];\n    await mapSeries(manifests, async (manifest) => {\n      depsToLoad.push(...(manifest.dependencies || []));\n      // @ts-ignore\n      (manifest._runtimes || []).forEach((runtime) => {\n        depsToLoad.push(...(runtime.dependencies || []));\n      });\n      const depIds = depsToLoad.map((d) => d.id).filter((id) => id) as string[];\n      this.logger.debug(\n        `getManifestsGraphRecursively, id: ${manifest.id || '<unknown>'}, found ${depIds.length}: ${depIds.join(', ')}`\n      );\n      const { manifests: loaded } = await this.getManifestsGraphRecursively(depIds, visited, throwOnError);\n      manifests.push(...loaded);\n    });\n\n    return { manifests, potentialPluginsIds };\n  }\n\n  private async getNonLoadedAspects(ids: string[]): Promise<Component[]> {\n    const notLoadedIds = ids.filter((id) => !this.aspectLoader.isAspectLoaded(id));\n    if (!notLoadedIds.length) return [];\n    const coreAspectsStringIds = this.aspectLoader.getCoreAspectIds();\n    const idsWithoutCore: string[] = difference(ids, coreAspectsStringIds);\n    const aspectIds = idsWithoutCore.filter((id) => !id.startsWith('file://'));\n    // TODO: use diff instead of filter twice\n    const localAspects = ids.filter((id) => id.startsWith('file://'));\n    this.localAspects = this.localAspects.concat(localAspects);\n    // load local aspects for debugging purposes.\n    await this.loadAspectFromPath(localAspects);\n    const componentIds = await this.resolveMultipleComponentIds(aspectIds);\n    if (!componentIds || !componentIds.length) return [];\n    const components = await this.import(componentIds, { reFetchUnBuiltVersion: false });\n\n    return components;\n  }\n\n  private async resolveLocalAspects(ids: string[], runtime?: string) {\n    const dirs = this.parseLocalAspect(ids);\n\n    return dirs.map((dir) => {\n      const runtimeManifest = runtime ? this.findRuntime(dir, runtime) : undefined;\n      return new AspectDefinition(\n        dir,\n        runtimeManifest ? join(dir, 'dist', runtimeManifest) : null,\n        undefined,\n        undefined,\n        true\n      );\n    });\n  }\n\n  async getResolvedAspects(\n    components: Component[],\n    opts?: { skipIfExists?: boolean; packageManagerConfigRootDir?: string }\n  ): Promise<RequireableComponent[]> {\n    if (!components || !components.length) return [];\n    const network = await this.isolator.isolateComponents(\n      components.map((c) => c.id),\n      // includeFromNestedHosts - to support case when you are in a workspace, trying to load aspect defined in the workspace.jsonc but not part of the workspace\n      {\n        baseDir: this.getAspectCapsulePath(),\n        skipIfExists: opts?.skipIfExists ?? true,\n        seedersOnly: true,\n        includeFromNestedHosts: true,\n        installOptions: {\n          copyPeerToRuntimeOnRoot: true,\n          packageManagerConfigRootDir: opts?.packageManagerConfigRootDir,\n          useNesting: true,\n          copyPeerToRuntimeOnComponents: true,\n          installPeersFromEnvs: true,\n        },\n      },\n      this.legacyScope\n    );\n\n    const capsules = network.seedersCapsules;\n\n    return capsules.map((capsule) => {\n      return new RequireableComponent(\n        capsule.component,\n        async () => {\n          // eslint-disable-next-line global-require, import/no-dynamic-require\n          const plugins = this.aspectLoader.getPlugins(capsule.component, capsule.path);\n          if (plugins.has()) {\n            await this.compileIfNoDist(capsule, capsule.component);\n            return plugins.load(MainRuntime.name);\n          }\n          // eslint-disable-next-line global-require, import/no-dynamic-require\n          const aspect = require(capsule.path);\n          const scopeRuntime = await this.aspectLoader.getRuntimePath(capsule.component, capsule.path, 'scope');\n          const mainRuntime = await this.aspectLoader.getRuntimePath(capsule.component, capsule.path, MainRuntime.name);\n          const runtimePath = scopeRuntime || mainRuntime;\n          // eslint-disable-next-line global-require, import/no-dynamic-require\n          if (runtimePath) require(runtimePath);\n          // eslint-disable-next-line global-require, import/no-dynamic-require\n          return aspect;\n        },\n        capsule\n      );\n    });\n  }\n\n  private async compileIfNoDist(capsule: Capsule, component: Component) {\n    const env = this.envs.getEnv(component);\n    const compiler: Compiler = env.env.getCompiler();\n    const distDir = compiler?.distDir || DEFAULT_DIST_DIRNAME;\n    const distExists = existsSync(join(capsule.path, distDir));\n    if (distExists) return;\n\n    const compiledCode = component.filesystem.files.flatMap((file) => {\n      if (!compiler.isFileSupported(file.path)) {\n        return [\n          {\n            outputText: file.contents.toString('utf8'),\n            outputPath: file.path,\n          },\n        ];\n      }\n\n      if (compiler.transpileFile) {\n        return compiler.transpileFile(file.contents.toString('utf8'), {\n          filePath: file.path,\n          componentDir: capsule.path,\n        });\n      }\n\n      return [];\n    });\n\n    await Promise.all(\n      compact(compiledCode).map((compiledFile) => {\n        const path = compiler.getDistPathBySrcPath(compiledFile.outputPath);\n        return capsule?.outputFile(path, compiledFile.outputText);\n      })\n    );\n  }\n\n  private async tryCompile(requirableAspect: RequireableComponent) {\n    if (requirableAspect.capsule) return this.compileIfNoDist(requirableAspect.capsule, requirableAspect.component);\n    return undefined;\n  }\n\n  async requireAspects(\n    components: Component[],\n    throwOnError = false,\n    opts: { packageManagerConfigRootDir?: string } = {}\n  ): Promise<Array<ExtensionManifest | Aspect>> {\n    const requireableExtensions = await this.getResolvedAspects(components, opts);\n    if (!requireableExtensions) {\n      return [];\n    }\n    let error: any;\n    let erroredId = '';\n    const requireWithCatch = async (requireableAspects: RequireableComponent[]) => {\n      error = undefined;\n      try {\n        const manifests = await mapSeries(requireableAspects, async (requireableExtension) => {\n          try {\n            return await this.aspectLoader.doRequire(requireableExtension);\n          } catch (err: any) {\n            erroredId = requireableExtension.component.id.toString();\n            if (err.code === 'MODULE_NOT_FOUND') {\n              try {\n                await this.tryCompile(requireableExtension);\n                return await this.aspectLoader.doRequire(requireableExtension);\n              } catch (newErr: any) {\n                error = newErr;\n                throw newErr;\n              }\n            }\n            error = err;\n            throw err;\n          }\n        });\n        return manifests;\n      } catch (err) {\n        return null;\n      }\n    };\n    const manifests = await requireWithCatch(requireableExtensions);\n    if (!error) {\n      return compact(manifests);\n    }\n    if (error.code === 'MODULE_NOT_FOUND') {\n      this.logger.warn(\n        `failed loading aspects from capsules due to MODULE_NOT_FOUND error, re-creating the capsules and trying again`\n      );\n      const resolvedAspectsAgain = await this.getResolvedAspects(components, {\n        ...opts,\n        skipIfExists: false,\n      });\n      const manifestAgain = await requireWithCatch(resolvedAspectsAgain);\n      if (!error) {\n        return compact(manifestAgain);\n      }\n    }\n\n    this.aspectLoader.handleExtensionLoadingError(error, erroredId, throwOnError);\n    return [];\n  }\n\n  getAspectCapsulePath() {\n    return `${this.path}-aspects`;\n  }\n\n  private async resolveUserAspects(runtimeName?: string, userAspectsIds?: ComponentID[]): Promise<AspectDefinition[]> {\n    if (!userAspectsIds || !userAspectsIds.length) return [];\n    const components = await this.getMany(userAspectsIds);\n    const network = await this.isolator.isolateComponents(\n      userAspectsIds,\n      {\n        baseDir: this.getAspectCapsulePath(),\n        skipIfExists: true,\n        // for some reason this needs to be false, otherwise tagging components in some workspaces\n        // result in error during Preview task:\n        // \"No matching version found for <some-component-on-the-workspace>\"\n        seedersOnly: true,\n        includeFromNestedHosts: true,\n        installOptions: {\n          copyPeerToRuntimeOnRoot: true,\n          useNesting: true,\n          copyPeerToRuntimeOnComponents: true,\n          installPeersFromEnvs: true,\n        },\n        host: this,\n      },\n      this.legacyScope\n    );\n\n    const capsules = network.seedersCapsules;\n    const aspectDefs = await this.aspectLoader.resolveAspects(components, async (component) => {\n      const capsule = capsules.getCapsule(component.id);\n      if (!capsule) throw new Error(`failed loading aspect: ${component.id.toString()}`);\n      const localPath = capsule.path;\n      const runtimePath = runtimeName\n        ? await this.aspectLoader.getRuntimePath(component, localPath, runtimeName)\n        : null;\n      this.logger.debug(\n        `scope resolveUserAspects, resolving id: ${component.id.toString()}, localPath: ${localPath}, runtimePath: ${runtimePath}`\n      );\n\n      return {\n        id: capsule.component.id,\n        aspectPath: localPath,\n        runtimePath,\n      };\n    });\n    return aspectDefs;\n  }\n\n  async resolveAspects(\n    runtimeName?: string,\n    componentIds?: ComponentID[],\n    opts?: ResolveAspectsOptions\n  ): Promise<AspectDefinition[]> {\n    const originalStringIds = componentIds?.map((id) => id.toString());\n    this.logger.debug(`scope resolveAspects, runtimeName: ${runtimeName}, componentIds: ${originalStringIds}`);\n\n    const defaultOpts: ResolveAspectsOptions = {\n      excludeCore: false,\n      requestedOnly: false,\n    };\n    const mergedOpts = { ...defaultOpts, ...opts };\n    const coreAspectsIds = this.aspectLoader.getCoreAspectIds();\n    let userAspectsIds;\n    let requestedCoreStringIds;\n    if (componentIds && componentIds.length) {\n      const groupedByIsCore = groupBy(componentIds, (id) => coreAspectsIds.includes(id.toString()));\n      userAspectsIds = groupedByIsCore.false || [];\n      requestedCoreStringIds = groupedByIsCore.true?.map((id) => id.toStringWithoutVersion()) || [];\n    } else {\n      userAspectsIds = await this.resolveMultipleComponentIds(this.aspectLoader.getUserAspects());\n    }\n\n    const withoutLocalAspects = userAspectsIds.filter((aspectId) => {\n      return !this.localAspects.find((localAspect) => {\n        return localAspect.includes(aspectId.fullName.replace('/', '.'));\n      });\n    });\n    const userAspectsDefs = await this.resolveUserAspects(runtimeName, withoutLocalAspects);\n    const localResolved = await this.resolveLocalAspects(this.localAspects, runtimeName);\n    const coreAspectsDefs = await this.aspectLoader.getCoreAspectDefs(runtimeName);\n\n    const allDefs = userAspectsDefs.concat(coreAspectsDefs).concat(localResolved);\n    let afterExclusion = allDefs;\n    if (mergedOpts.excludeCore) {\n      const userAspectsIdsWithoutVersion = userAspectsIds.map((aspectId) => aspectId.toStringWithoutVersion());\n      const userAspectsIdsWithoutVersionAndCoreRequested = userAspectsIdsWithoutVersion.concat(requestedCoreStringIds);\n      afterExclusion = allDefs.filter((def) => {\n        const id = ComponentID.fromString(def.getId || '');\n        const isTarget = userAspectsIdsWithoutVersionAndCoreRequested.includes(id.toStringWithoutVersion());\n        // If it's core, but requested explicitly, keep it\n        if (isTarget) return true;\n        const isCore = coreAspectsDefs.find((coreId) => def.getId === coreId.getId);\n        return !isCore;\n      });\n    }\n\n    const uniqDefs = uniqBy(afterExclusion, (def) => `${def.aspectPath}-${def.runtimePath}`);\n    let defs = uniqDefs;\n    if (runtimeName) {\n      defs = defs.filter((def) => def.runtimePath);\n    }\n\n    if (componentIds && componentIds.length && mergedOpts.requestedOnly) {\n      const componentIdsString = componentIds.map((id) => id.toString());\n      defs = defs.filter((def) => {\n        return (\n          (def.id && componentIdsString.includes(def.id)) ||\n          (def.component && componentIdsString.includes(def.component?.id.toString()))\n        );\n      });\n    }\n\n    return defs;\n  }\n\n  async getLegacyGraph(ids?: ComponentID[]): Promise<LegacyGraph> {\n    if (!ids || ids.length < 1) ids = (await this.list()).map((comp) => comp.id) || [];\n    const legacyIds = ids.map((id) => {\n      let bitId = id._legacy;\n      // The resolve bitId in scope will remove the scope name in case it's the same as the scope\n      // We restore it back to use it correctly in the legacy code.\n      if (!bitId.hasScope()) {\n        bitId = bitId.changeScope(this.legacyScope?.name);\n      }\n      return bitId;\n    });\n\n    const legacyGraph = await buildOneGraphForComponentsUsingScope(legacyIds, this.legacyScope);\n    return legacyGraph;\n  }\n\n  /**\n   * import components into the scope.\n   */\n  async import(\n    ids: ComponentID[],\n    {\n      useCache = true,\n      throwIfNotExist = false,\n      reFetchUnBuiltVersion = true,\n      lane,\n    }: {\n      /**\n       * if the component exists locally, don't go to the server to search for updates.\n       */\n      useCache?: boolean;\n      throwIfNotExist?: boolean;\n      /**\n       * if the Version objects exists locally, but its `buildStatus` is Pending or Failed, reach the remote to find\n       * whether the version was already built there.\n       */\n      reFetchUnBuiltVersion?: boolean;\n      /**\n       * if the component is on a lane, provide the lane object. the component will be fetched from the lane-scope and\n       * not from the component-scope.\n       */\n      lane?: Lane;\n    } = {}\n  ): Promise<Component[]> {\n    const legacyIds = ids.map((id) => {\n      const legacyId = id._legacy;\n      if (legacyId.scope === this.name) return legacyId.changeScope(null);\n      return legacyId;\n    });\n\n    const withoutOwnScopeAndLocals = legacyIds.filter((id) => {\n      return id.scope !== this.name && id.hasScope();\n    });\n    const lanes = lane ? [lane] : undefined;\n    await this.legacyScope.import(\n      ComponentsIds.fromArray(withoutOwnScopeAndLocals),\n      useCache,\n      reFetchUnBuiltVersion,\n      lanes\n    );\n\n    return this.getMany(ids, throwIfNotExist);\n  }\n\n  async get(id: ComponentID): Promise<Component | undefined> {\n    return this.componentLoader.get(id);\n  }\n\n  async getFromConsumerComponent(consumerComponent: ConsumerComponent): Promise<Component> {\n    return this.componentLoader.getFromConsumerComponent(consumerComponent);\n  }\n\n  /**\n   * get a component from a remote without importing it\n   */\n  async getRemoteComponent(id: ComponentID): Promise<Component> {\n    return this.componentLoader.getRemoteComponent(id);\n  }\n\n  /**\n   * get a component from a remote without importing it\n   */\n  async getManyRemoteComponents(ids: ComponentID[]): Promise<Component[]> {\n    return this.componentLoader.getManyRemoteComponents(ids);\n  }\n\n  /**\n   * list all components in the scope.\n   */\n  async list(\n    filter?: { offset: number; limit: number; namespaces?: string[] },\n    includeCache = false,\n    includeFromLanes = false\n  ): Promise<Component[]> {\n    const patternsWithScope =\n      (filter?.namespaces && filter?.namespaces.map((pattern) => `**/${pattern || '**'}`)) || undefined;\n    const componentsIds = await this.listIds(includeCache, includeFromLanes, patternsWithScope);\n\n    return this.getMany(\n      filter && filter.limit ? slice(componentsIds, filter.offset, filter.offset + filter.limit) : componentsIds\n    );\n  }\n\n  /**\n   * for now, list of invalid components are mostly useful for the workspace.\n   * in the future, this can return components that failed to load in the scope due to objects file\n   * corruption or similar issues.\n   */\n  async listInvalid() {\n    return [];\n  }\n\n  /**\n   * get ids of all scope components.\n   * @param includeCache whether or not include components that their scope-name is different than the current scope-name\n   */\n  async listIds(includeCache = false, includeFromLanes = false, patterns?: string[]): Promise<ComponentID[]> {\n    const allModelComponents = await this.legacyScope.list();\n    const filterByCacheAndLanes = (modelComponent: ModelComponent) => {\n      const cacheFilter = includeCache ? true : this.exists(modelComponent);\n      const lanesFilter = includeFromLanes ? true : modelComponent.hasHead();\n\n      return cacheFilter && lanesFilter;\n    };\n    const modelComponentsToList = allModelComponents.filter(filterByCacheAndLanes);\n    let ids = modelComponentsToList.map((component) =>\n      ComponentID.fromLegacy(component.toBitIdWithLatestVersion(), component.scope || this.name)\n    );\n    if (patterns && patterns.length > 0) {\n      ids = ids.filter((id) =>\n        patterns?.some((pattern) => isMatchNamespacePatternItem(id.toStringWithoutVersion(), pattern).match)\n      );\n    }\n    this.logger.debug(`scope listIds: total ${ids.length} components after filter scope`);\n    return ids;\n  }\n\n  /**\n   * Check if a specific id exist in the scope\n   * @param componentId\n   */\n  async hasId(componentId: ComponentID, includeCache = false): Promise<boolean> {\n    if (!includeCache && componentId.scope !== this.name) return false;\n    const opts = {\n      includeOrphaned: true,\n      includeVersion: true,\n    };\n\n    return this.legacyScope.hasId(componentId._legacy, opts);\n  }\n\n  async hasIdNested(componentId: ComponentID, includeCache = false): Promise<boolean> {\n    return this.hasId(componentId, includeCache);\n  }\n\n  /**\n   * determine whether a component exists in the scope.\n   */\n  exists(modelComponent: ModelComponent) {\n    return modelComponent.scope === this.name;\n  }\n\n  async getMany(ids: ComponentID[], throwIfNotExist = false): Promise<Component[]> {\n    const idsWithoutEmpty = compact(ids);\n    const componentsP = mapSeries(idsWithoutEmpty, async (id: ComponentID) => {\n      return throwIfNotExist ? this.getOrThrow(id) : this.get(id);\n    });\n    const components = await componentsP;\n    return compact(components);\n  }\n\n  /**\n   * load components from a scope and load their aspects\n   */\n  async loadMany(ids: ComponentID[]): Promise<Component[]> {\n    const components = await mapSeries(ids, (id) => this.load(id));\n    return compact(components);\n  }\n\n  /**\n   * get a component and throw an exception if not found.\n   * @param id component id\n   */\n  async getOrThrow(id: ComponentID): Promise<Component> {\n    const component = await this.get(id);\n    if (!component) throw new ComponentNotFound(id);\n    return component;\n  }\n\n  /**\n   * returns a specific state of a component.\n   * @param id component ID.\n   * @param hash state hash.\n   */\n  async getState(id: ComponentID, hash: string): Promise<State> {\n    return this.componentLoader.getState(id, hash);\n  }\n\n  async getSnap(id: ComponentID, hash: string): Promise<Snap> {\n    return this.componentLoader.getSnap(id, hash);\n  }\n\n  async getLogs(id: ComponentID, shortHash = false, startsFrom?: string): Promise<ComponentLog[]> {\n    return this.legacyScope.loadComponentLogs(id._legacy, shortHash, startsFrom);\n  }\n\n  async getStagedConfig() {\n    const currentLaneId = this.legacyScope.currentLaneId;\n    return StagedConfig.load(this.path, currentLaneId);\n  }\n\n  /**\n   * resolve a component ID.\n   * @param id component ID.\n   */\n  async resolveComponentId(id: string | ComponentID | BitId): Promise<ComponentID> {\n    const idStr = id.toString();\n    const component = await this.legacyScope.loadModelComponentByIdStr(idStr);\n    const getIdToCheck = () => {\n      if (component) return idStr; // component exists in the scope with the scope-name.\n      if (idStr.startsWith(`${this.name}/`)) {\n        // component with the full name doesn't exist in the scope, it might be locally tagged\n        return idStr.replace(`${this.name}/`, '');\n      }\n      return idStr;\n    };\n    const IdToCheck = getIdToCheck();\n    const legacyId = id instanceof BitId ? id : await this.legacyScope.getParsedId(IdToCheck);\n    if (!legacyId.scope) return ComponentID.fromLegacy(legacyId, this.name);\n    return ComponentID.fromLegacy(legacyId);\n  }\n\n  async resolveMultipleComponentIds(ids: Array<string | ComponentID | BitId>) {\n    return Promise.all(ids.map(async (id) => this.resolveComponentId(id)));\n  }\n\n  /**\n   * @deprecated use `this.idsByPattern` instead for consistency, which supports also negation and list of patterns.\n   */\n  async byPattern(patterns: string[], scope = '**'): Promise<Component[]> {\n    const patternsWithScope = patterns.map((pattern) => `${scope}/${pattern || '**'}`);\n\n    const ids = await this.listIds(true, false, patternsWithScope);\n\n    const components = await this.getMany(ids);\n    return components;\n  }\n\n  /**\n   * get component-ids matching the given pattern. a pattern can have multiple patterns separated by a comma.\n   * it uses multimatch (https://www.npmjs.com/package/multimatch) package for the matching algorithm, which supports\n   * (among others) negate character \"!\" to exclude ids. See the package page for more supported characters.\n   */\n  async idsByPattern(pattern: string, throwForNoMatch = true): Promise<ComponentID[]> {\n    if (!pattern.includes('*') && !pattern.includes(',')) {\n      // if it's not a pattern but just id, resolve it without multimatch to support specifying id without scope-name\n      const id = await this.resolveComponentId(pattern);\n      const exists = await this.hasId(id, true);\n      if (exists) return [id];\n      if (throwForNoMatch) throw new BitError(`unable to find \"${pattern}\" in the scope`);\n      return [];\n    }\n    const ids = await this.listIds(true);\n    return this.filterIdsFromPoolIdsByPattern(pattern, ids, throwForNoMatch);\n  }\n\n  // todo: move this to somewhere else (where?)\n  filterIdsFromPoolIdsByPattern(pattern: string, ids: ComponentID[], throwForNoMatch = true) {\n    const patterns = pattern.split(',').map((p) => p.trim());\n    if (patterns.every((p) => p.startsWith('!'))) {\n      // otherwise it'll never match anything. don't use \".push()\". it must be the first item in the array.\n      patterns.unshift('**');\n    }\n    // check also as legacyId.toString, as it doesn't have the defaultScope\n    const idsToCheck = (id: ComponentID) => [id.toStringWithoutVersion(), id._legacy.toStringWithoutVersion()];\n    const idsFiltered = ids.filter((id) => multimatch(idsToCheck(id), patterns).length);\n    if (throwForNoMatch && !idsFiltered.length) {\n      throw new NoIdMatchPattern(pattern);\n    }\n    return idsFiltered;\n  }\n\n  async getExactVersionBySemverRange(id: ComponentID, range: string): Promise<string | undefined> {\n    const modelComponent = await this.legacyScope.getModelComponent(id._legacy);\n    const versions = modelComponent.listVersions();\n    return semver.maxSatisfying<string>(versions, range, { includePrerelease: true })?.toString();\n  }\n\n  async resumeExport(exportId: string, remotes: string[]): Promise<string[]> {\n    return resumeExport(this.legacyScope, exportId, remotes);\n  }\n\n  async resolveId(id: string): Promise<ComponentID> {\n    const legacyId = await this.legacyScope.getParsedId(id);\n    return ComponentID.fromLegacy(legacyId);\n  }\n\n  // TODO: add new API for this\n  async _legacyRemotes(): Promise<Remotes> {\n    return getScopeRemotes(this.legacyScope);\n  }\n\n  /**\n   * list all component ids from a remote-scope\n   */\n  async listRemoteScope(scopeName: string): Promise<ComponentID[]> {\n    const remotes = await this._legacyRemotes();\n    const remote = await remotes.resolve(scopeName, this.legacyScope);\n    const results = await remote.list();\n    return results.map(({ id }) => ComponentID.fromLegacy(id));\n  }\n\n  /**\n   * get a component and load its aspect\n   */\n  async load(id: ComponentID): Promise<Component | undefined> {\n    const component = await this.get(id);\n    if (!component) return undefined;\n    const aspectIds = component.state.aspects.ids;\n    // load components from type aspects as aspects.\n    if (this.aspectLoader.isAspectComponent(component)) {\n      aspectIds.push(component.id.toString());\n    }\n    await this.loadAspects(aspectIds, true, id.toString());\n\n    return component;\n  }\n\n  async loadComponentsAspect(component: Component) {\n    const aspectIds = component.state.aspects.ids;\n    await this.loadAspects(aspectIds, true, component.id.toString());\n  }\n\n  async isModified(): Promise<boolean> {\n    return false;\n  }\n\n  async write() {\n    // no-op (it's relevant for the workspace only)\n  }\n\n  /**\n   * declare the slots of scope extension.\n   */\n  static slots = [\n    Slot.withType<OnPostPut>(),\n    Slot.withType<OnPostDelete>(),\n    Slot.withType<OnPostExport>(),\n    Slot.withType<OnPostObjectsPersist>(),\n    Slot.withType<OnPreFetchObjects>(),\n  ];\n  static runtime = MainRuntime;\n\n  static dependencies = [\n    ComponentAspect,\n    UIAspect,\n    GraphqlAspect,\n    CLIAspect,\n    IsolatorAspect,\n    AspectLoaderAspect,\n    ExpressAspect,\n    LoggerAspect,\n    EnvsAspect,\n  ];\n\n  static defaultConfig: ScopeConfig = {\n    httpTimeOut: 600000,\n  };\n\n  static async provider(\n    [componentExt, ui, graphql, cli, isolator, aspectLoader, express, loggerMain, envs]: [\n      ComponentMain,\n      UiMain,\n      GraphqlMain,\n      CLIMain,\n      IsolatorMain,\n      AspectLoaderMain,\n      ExpressMain,\n      LoggerMain,\n      EnvsMain\n    ],\n    config: ScopeConfig,\n    [postPutSlot, postDeleteSlot, postExportSlot, postObjectsPersistSlot, preFetchObjectsSlot]: [\n      OnPostPutSlot,\n      OnPostDeleteSlot,\n      OnPostExportSlot,\n      OnPostObjectsPersistSlot,\n      OnPreFetchObjectsSlot\n    ],\n    harmony: Harmony\n  ) {\n    const bitConfig: any = harmony.config.get('teambit.harmony/bit');\n    const legacyScope = await loadScopeIfExist(bitConfig?.cwd);\n    if (!legacyScope) {\n      return undefined;\n    }\n\n    const logger = loggerMain.createLogger(ScopeAspect.id);\n    const scope = new ScopeMain(\n      harmony,\n      legacyScope,\n      componentExt,\n      config,\n      postPutSlot,\n      postDeleteSlot,\n      postExportSlot,\n      postObjectsPersistSlot,\n      preFetchObjectsSlot,\n      isolator,\n      aspectLoader,\n      logger,\n      envs\n    );\n    cli.registerOnStart(async (hasWorkspace: boolean) => {\n      if (hasWorkspace) return;\n      await scope.loadAspects(aspectLoader.getNotLoadedConfiguredExtensions(), undefined, 'scope.cli.registerOnStart');\n    });\n    cli.register(new ScopeCmd());\n\n    const onPutHook = async (ids: string[], lanes: Lane[], authData?: AuthData): Promise<void> => {\n      logger.debug(`onPutHook, started. (${ids.length} components)`);\n      scope.componentLoader.clearCache();\n      const componentIds = await scope.resolveMultipleComponentIds(ids);\n      const fns = postPutSlot.values();\n      const data = {\n        ids: componentIds,\n        lanes,\n      };\n      const metadata = { auth: authData };\n      await Promise.all(fns.map(async (fn) => fn(data, metadata)));\n      logger.debug(`onPutHook, completed. (${ids.length} components)`);\n    };\n\n    const getAuthData = (): AuthData | undefined => {\n      const token = Http.getToken();\n      return token ? { type: DEFAULT_AUTH_TYPE, credentials: token } : undefined;\n    };\n\n    const onPostExportHook = async (ids: BitId[], lanes: Lane[]): Promise<void> => {\n      logger.debug(`onPostExportHook, started. (${ids.length} components)`);\n      const componentIds = await scope.resolveMultipleComponentIds(ids);\n      const fns = postExportSlot.values();\n      const data = {\n        ids: componentIds,\n        lanes,\n      };\n      const metadata = { auth: getAuthData() };\n      await Promise.all(fns.map(async (fn) => fn(data, metadata)));\n      logger.debug(`onPostExportHook, completed. (${ids.length} components)`);\n    };\n\n    const onPostObjectsPersistHook = async (): Promise<void> => {\n      logger.debug(`onPostObjectsPersistHook, started`);\n      const fns = postObjectsPersistSlot.values();\n      const metadata = { auth: getAuthData() };\n      await Promise.all(fns.map(async (fn) => fn(undefined, metadata)));\n      logger.debug(`onPostObjectsPersistHook, completed`);\n    };\n\n    ExportPersist.onPutHook = onPutHook;\n    PostSign.onPutHook = onPutHook;\n    Scope.onPostExport = onPostExportHook;\n    Repository.onPostObjectsPersist = onPostObjectsPersistHook;\n\n    express.register([\n      new PutRoute(scope, postPutSlot),\n      new FetchRoute(scope, logger),\n      new ActionRoute(scope),\n      new DeleteRoute(scope),\n    ]);\n    // @ts-ignore - @ran to implement the missing functions and remove it\n    ui.registerUiRoot(new ScopeUIRoot(scope));\n    graphql.register(scopeSchema(scope));\n    componentExt.registerHost(scope);\n\n    return scope;\n  }\n}\n\nScopeAspect.addRuntime(ScopeMain);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAA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"}