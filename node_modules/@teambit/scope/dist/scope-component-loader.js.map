{"version":3,"names":["ScopeComponentLoader","constructor","scope","logger","componentsCache","createInMemoryCache","maxSize","getMaxSizeForComponents","importedComponentsCache","maxAge","get","id","importIfMissing","fromCache","getFromCache","idStr","toString","debug","legacyId","_legacy","modelComponent","legacyScope","getModelComponentIfExist","hasScope","import","BitIds","fromArray","set","changeScope","name","undefined","versionStr","version","latest","newId","changeVersion","loadVersion","objects","snap","getHeadSnap","state","createStateFromVersion","tagMap","getTagMap","component","Component","getFromConsumerComponent","consumerComponent","getModelComponent","resolveComponentId","pendingVersion","getRemoteComponent","compImport","ScopeComponentsImporter","objectList","getAll","forEach","obj","setCache","getConsumerComponent","getManyRemoteComponents","ids","legacyIds","map","pMapSeries","getState","hash","load","Ref","getSnap","getVersionObject","err","code","errMsg","error","Error","createSnapFromVersion","clearCache","deleteAll","isEqual","TagMap","allVersions","versionsIncludeOrphaned","Object","keys","tag","Tag","SemVer","head","getHeadRegardlessOfLane","Snap","Date","parseInt","log","date","parents","p","displayName","username","email","message","State","Config","mainFile","extensions","componentExtension","createAspectListFromLegacy","ComponentFS","fromVinyls","files","dependencies"],"sources":["scope-component-loader.ts"],"sourcesContent":["import { Component, ComponentFS, ComponentID, Config, Snap, State, Tag, TagMap } from '@teambit/component';\nimport pMapSeries from 'p-map-series';\nimport { Logger } from '@teambit/logger';\nimport { SemVer } from 'semver';\nimport ConsumerComponent from '@teambit/legacy/dist/consumer/component';\nimport ScopeComponentsImporter from '@teambit/legacy/dist/scope/component-ops/scope-components-importer';\nimport { ModelComponent, Version } from '@teambit/legacy/dist/scope/models';\nimport { BitIds } from '@teambit/legacy/dist/bit-id';\nimport { Ref } from '@teambit/legacy/dist/scope/objects';\nimport { getMaxSizeForComponents, InMemoryCache } from '@teambit/legacy/dist/cache/in-memory-cache';\nimport { createInMemoryCache } from '@teambit/legacy/dist/cache/cache-factory';\nimport type { ScopeMain } from './scope.main.runtime';\n\nexport class ScopeComponentLoader {\n  private componentsCache: InMemoryCache<Component>; // cache loaded components\n  private importedComponentsCache: InMemoryCache<boolean>;\n  constructor(private scope: ScopeMain, private logger: Logger) {\n    this.componentsCache = createInMemoryCache({ maxSize: getMaxSizeForComponents() });\n    this.importedComponentsCache = createInMemoryCache({ maxAge: 1000 * 60 * 30 }); // 30 min\n  }\n\n  async get(id: ComponentID, importIfMissing = true): Promise<Component | undefined> {\n    const fromCache = this.getFromCache(id);\n    if (fromCache) {\n      return fromCache;\n    }\n    const idStr = id.toString();\n    this.logger.debug(`ScopeComponentLoader.get, loading ${idStr}`);\n    const legacyId = id._legacy;\n    let modelComponent = await this.scope.legacyScope.getModelComponentIfExist(id._legacy);\n    // import if missing\n    if (\n      !modelComponent &&\n      importIfMissing &&\n      id._legacy.hasScope() &&\n      !this.importedComponentsCache.get(id.toString())\n    ) {\n      await this.scope.legacyScope.import(BitIds.fromArray([id._legacy]));\n      this.importedComponentsCache.set(id.toString(), true);\n      modelComponent = await this.scope.legacyScope.getModelComponentIfExist(id._legacy);\n    }\n    // Search with scope name for bare scopes\n    if (!modelComponent && !legacyId.scope) {\n      id = id.changeScope(this.scope.name);\n      modelComponent = await this.scope.legacyScope.getModelComponentIfExist(id._legacy);\n    }\n    if (!modelComponent) return undefined;\n\n    const versionStr = id.version && id.version !== 'latest' ? id.version : modelComponent.latest();\n    const newId = id.changeVersion(versionStr);\n    const version = await modelComponent.loadVersion(versionStr, this.scope.legacyScope.objects);\n    const snap = await this.getHeadSnap(modelComponent);\n    const state = await this.createStateFromVersion(id, version);\n    const tagMap = this.getTagMap(modelComponent);\n\n    const component = new Component(newId, snap, state, tagMap, this.scope);\n    this.componentsCache.set(idStr, component);\n    return component;\n  }\n\n  async getFromConsumerComponent(consumerComponent: ConsumerComponent): Promise<Component> {\n    const legacyId = consumerComponent.id;\n    const modelComponent = await this.scope.legacyScope.getModelComponent(legacyId);\n    // :TODO move to head snap once we have it merged, for now using `latest`.\n    const id = await this.scope.resolveComponentId(legacyId);\n    const version =\n      consumerComponent.pendingVersion ||\n      (await modelComponent.loadVersion(legacyId.version as string, this.scope.legacyScope.objects));\n    const snap = await this.getHeadSnap(modelComponent);\n    const state = await this.createStateFromVersion(id, version);\n    const tagMap = this.getTagMap(modelComponent);\n\n    return new Component(id, snap, state, tagMap, this.scope);\n  }\n\n  /**\n   * get a component from a remote without importing it\n   */\n  async getRemoteComponent(id: ComponentID): Promise<Component> {\n    const compImport = new ScopeComponentsImporter(this.scope.legacyScope);\n    const objectList = await compImport.getRemoteComponent(id._legacy);\n    // it's crucial to add all objects to the Repository cache. otherwise, later, when it asks\n    // for the consumerComponent from the legacyScope, it won't work.\n    objectList?.getAll().forEach((obj) => this.scope.legacyScope.objects.setCache(obj));\n    const consumerComponent = await this.scope.legacyScope.getConsumerComponent(id._legacy);\n    return this.getFromConsumerComponent(consumerComponent);\n  }\n\n  /**\n   * get components from a remote without importing it\n   */\n  async getManyRemoteComponents(ids: ComponentID[]): Promise<Component[]> {\n    const compImport = new ScopeComponentsImporter(this.scope.legacyScope);\n    const legacyIds = ids.map((id) => id._legacy);\n    const objectList = await compImport.getManyRemoteComponents(legacyIds);\n    // it's crucial to add all objects to the Repository cache. otherwise, later, when it asks\n    // for the consumerComponent from the legacyScope, it won't work.\n    objectList?.getAll().forEach((obj) => this.scope.legacyScope.objects.setCache(obj));\n    return pMapSeries(legacyIds, async (legacyId) => {\n      const consumerComponent = await this.scope.legacyScope.getConsumerComponent(legacyId);\n      return this.getFromConsumerComponent(consumerComponent);\n    });\n  }\n\n  async getState(id: ComponentID, hash: string): Promise<State> {\n    const version = (await this.scope.legacyScope.objects.load(new Ref(hash))) as Version;\n    return this.createStateFromVersion(id, version);\n  }\n\n  async getSnap(id: ComponentID, hash: string): Promise<Snap> {\n    const getVersionObject = async (): Promise<Version> => {\n      try {\n        const snap = await this.scope.legacyScope.objects.load(new Ref(hash), true);\n        return snap as Version;\n      } catch (err: any) {\n        if (err.code === 'ENOENT') {\n          const errMsg = `fatal: snap \"${hash}\" file for component \"${id.toString()}\" was not found in the filesystem`;\n          this.logger.error(errMsg, err);\n          throw new Error(errMsg);\n        } else {\n          throw err;\n        }\n      }\n    };\n    const version = await getVersionObject();\n    return this.createSnapFromVersion(version);\n  }\n\n  clearCache() {\n    this.componentsCache.deleteAll();\n  }\n\n  /**\n   * make sure that not only the id-str match, but also the legacy-id.\n   * this is needed because the ComponentID.toString() is the same whether or not the legacy-id has\n   * scope-name, as it includes the defaultScope if the scope is empty.\n   * as a result, when out-of-sync is happening and the id is changed to include scope-name in the\n   * legacy-id, the component is the cache has the old id.\n   */\n  private getFromCache(id: ComponentID): Component | undefined {\n    const idStr = id.toString();\n    const fromCache = this.componentsCache.get(idStr);\n    if (fromCache && fromCache.id._legacy.isEqual(id._legacy)) {\n      return fromCache;\n    }\n    return undefined;\n  }\n\n  private getTagMap(modelComponent: ModelComponent): TagMap {\n    const tagMap = new TagMap();\n    const allVersions = modelComponent.versionsIncludeOrphaned;\n    Object.keys(allVersions).forEach((versionStr: string) => {\n      const tag = new Tag(allVersions[versionStr].toString(), new SemVer(versionStr));\n      tagMap.set(tag.version, tag);\n    });\n    return tagMap;\n  }\n\n  private async getHeadSnap(modelComponent: ModelComponent): Promise<Snap | null> {\n    const head = modelComponent.getHeadRegardlessOfLane();\n    if (!head) {\n      // happens for example when on main and merging a lane.\n      return null;\n    }\n    const version = await modelComponent.loadVersion(head.toString(), this.scope.legacyScope.objects, false);\n    if (!version) {\n      // might happen when the component is just a dependency and a previous version was needed.\n      return null;\n    }\n    return this.createSnapFromVersion(version);\n  }\n\n  private createSnapFromVersion(version: Version): Snap {\n    return new Snap(\n      version.hash().toString(),\n      new Date(parseInt(version.log.date)),\n      version.parents.map((p) => p.toString()),\n      {\n        displayName: version.log.username || 'unknown',\n        email: version.log.email || 'unknown@anywhere',\n      },\n      version.log.message\n    );\n  }\n\n  private async createStateFromVersion(id: ComponentID, version: Version): Promise<State> {\n    const consumerComponent = await this.scope.legacyScope.getConsumerComponent(id._legacy);\n    const state = new State(\n      // We use here the consumerComponent.extensions instead of version.extensions\n      // because as part of the conversion to consumer component the artifacts are initialized as Artifact instances\n      new Config(version.mainFile, consumerComponent.extensions),\n      // todo: see the comment of this \"createAspectListFromLegacy\" method. the aspect ids may be incorrect.\n      // find a better way to get the ids correctly.\n      this.scope.componentExtension.createAspectListFromLegacy(consumerComponent.extensions, this.scope.name),\n      ComponentFS.fromVinyls(consumerComponent.files),\n      version.dependencies,\n      consumerComponent\n    );\n    return state;\n  }\n}\n"],"mappings":"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"}