import { ComponentID } from '@teambit/component-id';
import { LaneId } from '@teambit/lane-id';
declare type Config = Record<string, any> | undefined;
declare type ComponentConfig = {
    id: ComponentID;
    config: Config;
};
export declare class StagedConfig {
    private filePath;
    private componentsConfig;
    hasChanged: boolean;
    constructor(filePath: string, componentsConfig: ComponentConfig[]);
    static load(scopePath: string, laneId?: LaneId): Promise<StagedConfig>;
    toObject(): {
        id: import("@teambit/component-id").ComponentIdObj;
        config: Config;
    }[];
    write(): Promise<void>;
    getConfigPerId(id: ComponentID): Config;
    getAll(): ComponentConfig[];
    addComponentConfig(id: ComponentID, config: Config): void;
    removeComponentConfig(id: ComponentID): void;
}
export {};
