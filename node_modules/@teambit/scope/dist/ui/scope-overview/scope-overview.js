"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.symbol.description.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ScopeComponentCard = ScopeComponentCard;
exports.ScopeOverview = ScopeOverview;
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _explorerUiGallery() {
  const data = require("@teambit/explorer.ui.gallery.component-card");
  _explorerUiGallery = function () {
    return data;
  };
  return data;
}
function _explorerUiGallery2() {
  const data = require("@teambit/explorer.ui.gallery.component-grid");
  _explorerUiGallery2 = function () {
    return data;
  };
  return data;
}
function _scopeUi() {
  const data = require("@teambit/scope.ui.scope-details");
  _scopeUi = function () {
    return data;
  };
  return data;
}
function _previewUi() {
  const data = require("@teambit/preview.ui.preview-placeholder");
  _previewUi = function () {
    return data;
  };
  return data;
}
function _scopeUi2() {
  const data = require("@teambit/scope.ui.empty-scope");
  _scopeUi2 = function () {
    return data;
  };
  return data;
}
function _scopeUiHooks() {
  const data = require("@teambit/scope.ui.hooks.scope-context");
  _scopeUiHooks = function () {
    return data;
  };
  return data;
}
function _scopeOverviewModule() {
  const data = _interopRequireDefault(require("./scope-overview.module.scss"));
  _scopeOverviewModule = function () {
    return data;
  };
  return data;
}
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ScopeOverview({
  badgeSlot,
  overviewSlot,
  TargetOverview
}) {
  const scope = (0, _react().useContext)(_scopeUiHooks().ScopeContext);
  const {
    components
  } = scope;
  if (!components || components.length === 0) return /*#__PURE__*/_react().default.createElement(_scopeUi2().EmptyScope, {
    name: scope.name
  });
  return /*#__PURE__*/_react().default.createElement("div", {
    className: _scopeOverviewModule().default.container
  }, /*#__PURE__*/_react().default.createElement(_scopeUi().ScopeDetails, {
    scopeName: scope.name,
    icon: scope.icon,
    backgroundIconColor: scope.backgroundIconColor,
    badgeSlot: badgeSlot,
    overviewSlot: overviewSlot,
    description: scope.description,
    componentCount: scope.components.length
  }), TargetOverview ? /*#__PURE__*/_react().default.createElement(TargetOverview, null) : /*#__PURE__*/_react().default.createElement(_explorerUiGallery2().ComponentGrid, null, components.map((component, index) => {
    var _component$deprecatio;
    if ((_component$deprecatio = component.deprecation) !== null && _component$deprecatio !== void 0 && _component$deprecatio.isDeprecate) return null;
    return /*#__PURE__*/_react().default.createElement("div", {
      key: index
    }, /*#__PURE__*/_react().default.createElement(ScopeComponentCard, {
      component: component
    }));
  })));
}
function ScopeComponentCard({
  component,
  componentUrl
}) {
  var _component$environmen;
  const shouldShowPreview = component.compositions.length > 0;
  return /*#__PURE__*/_react().default.createElement(_explorerUiGallery().ComponentCard, {
    id: component.id.fullName,
    envIcon: (_component$environmen = component.environment) === null || _component$environmen === void 0 ? void 0 : _component$environmen.icon,
    description: component.description,
    version: component.version,
    href: componentUrl,
    preview: /*#__PURE__*/_react().default.createElement(_previewUi().PreviewPlaceholder, {
      component: component,
      shouldShowPreview: shouldShowPreview
    })
  });
}

//# sourceMappingURL=scope-overview.js.map