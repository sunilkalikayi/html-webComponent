{"version":3,"names":["ActionRoute","constructor","scope","Verb","WRITE","req","res","setTimeout","config","httpTimeOut","authData","getAuthDataFromHeader","headers","authorization","result","action","path","body","name","options","json"],"sources":["action.route.ts"],"sourcesContent":["import { Route, Verb, Request, Response } from '@teambit/express';\nimport { action } from '@teambit/legacy/dist/api/scope/lib/action';\nimport { getAuthDataFromHeader } from '@teambit/legacy/dist/scope/network/http/http';\nimport { ScopeMain } from '../scope.main.runtime';\n\nexport class ActionRoute implements Route {\n  constructor(private scope: ScopeMain) {}\n\n  method = 'post';\n  route = '/scope/action';\n  verb = Verb.WRITE;\n\n  middlewares = [\n    async (req: Request, res: Response) => {\n      req.setTimeout(this.scope.config.httpTimeOut);\n      const authData = getAuthDataFromHeader(req.headers.authorization);\n      const result = await action(this.scope.path, req.body.name, req.body.options, authData);\n      // in case the result is empty, send `{}` to make it a valid json.\n      res.json(result || {});\n    },\n  ];\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGO,MAAMA,WAAW,CAAkB;EACxCC,WAAW,CAASC,KAAgB,EAAE;IAAA,KAAlBA,KAAgB,GAAhBA,KAAgB;IAAA,gDAE3B,MAAM;IAAA,+CACP,eAAe;IAAA,8CAChBC,eAAI,CAACC,KAAK;IAAA,qDAEH,CACZ,OAAOC,GAAY,EAAEC,GAAa,KAAK;MACrCD,GAAG,CAACE,UAAU,CAAC,IAAI,CAACL,KAAK,CAACM,MAAM,CAACC,WAAW,CAAC;MAC7C,MAAMC,QAAQ,GAAG,IAAAC,6BAAqB,EAACN,GAAG,CAACO,OAAO,CAACC,aAAa,CAAC;MACjE,MAAMC,MAAM,GAAG,MAAM,IAAAC,gBAAM,EAAC,IAAI,CAACb,KAAK,CAACc,IAAI,EAAEX,GAAG,CAACY,IAAI,CAACC,IAAI,EAAEb,GAAG,CAACY,IAAI,CAACE,OAAO,EAAET,QAAQ,CAAC;MACvF;MACAJ,GAAG,CAACc,IAAI,CAACN,MAAM,IAAI,CAAC,CAAC,CAAC;IACxB,CAAC,CACF;EAdsC;AAezC;AAAC"}