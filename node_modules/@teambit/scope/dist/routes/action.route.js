"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActionRoute = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _express() {
  const data = require("@teambit/express");
  _express = function () {
    return data;
  };
  return data;
}
function _action() {
  const data = require("@teambit/legacy/dist/api/scope/lib/action");
  _action = function () {
    return data;
  };
  return data;
}
function _http() {
  const data = require("@teambit/legacy/dist/scope/network/http/http");
  _http = function () {
    return data;
  };
  return data;
}
class ActionRoute {
  constructor(scope) {
    this.scope = scope;
    (0, _defineProperty2().default)(this, "method", 'post');
    (0, _defineProperty2().default)(this, "route", '/scope/action');
    (0, _defineProperty2().default)(this, "verb", _express().Verb.WRITE);
    (0, _defineProperty2().default)(this, "middlewares", [async (req, res) => {
      req.setTimeout(this.scope.config.httpTimeOut);
      const authData = (0, _http().getAuthDataFromHeader)(req.headers.authorization);
      const result = await (0, _action().action)(this.scope.path, req.body.name, req.body.options, authData);
      // in case the result is empty, send `{}` to make it a valid json.
      res.json(result || {});
    }]);
  }
}
exports.ActionRoute = ActionRoute;

//# sourceMappingURL=action.route.js.map