"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PutRoute = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _express() {
  const data = require("@teambit/express");
  _express = function () {
    return data;
  };
  return data;
}
function _objectList() {
  const data = require("@teambit/legacy/dist/scope/objects/object-list");
  _objectList = function () {
    return data;
  };
  return data;
}
function _scope() {
  const data = require("@teambit/legacy/dist/api/scope");
  _scope = function () {
    return data;
  };
  return data;
}
class PutRoute {
  constructor(scope, postPutSlot) {
    this.scope = scope;
    this.postPutSlot = postPutSlot;
    (0, _defineProperty2().default)(this, "method", 'post');
    (0, _defineProperty2().default)(this, "route", '/scope/put');
    (0, _defineProperty2().default)(this, "verb", _express().Verb.WRITE);
    (0, _defineProperty2().default)(this, "middlewares", [async (req, res) => {
      req.setTimeout(this.scope.config.httpTimeOut);
      const pushOptionsStr = req.headers['push-options'];
      if (!pushOptionsStr) throw new Error('http is missing the push-options header');
      const pushOptions = JSON.parse(pushOptionsStr);
      const objectList = await _objectList().ObjectList.fromTar(req);
      const ids = await (0, _scope().put)({
        path: this.scope.path,
        objectList
      }, pushOptions);
      await Promise.all(ids.map(id => {
        return this.scope.resolveComponentId(id);
      }));
      res.json(ids);
    }]);
  }
}
exports.PutRoute = PutRoute;

//# sourceMappingURL=put.route.js.map