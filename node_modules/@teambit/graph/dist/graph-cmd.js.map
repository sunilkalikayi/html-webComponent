{"version":3,"names":["GraphCmd","report","id","remote","allVersions","layout","image","consumer","loadConsumerIfExist","ConsumerNotFound","graph","generateGraph","config","visualDependencyGraph","VisualDependencyGraph","loadFromGraphlib","getBitId","undefined","BitId","parse","getParsedId","bitId","highlightId","path","join","os","tmpdir","generateRandomStr","result","chalk","green","scopeName","scope","remoteScope","getRemoteByName","componentDepGraph","Error","onlyLatest","workspaceGraph","DependencyGraph","buildGraphFromWorkspace","dependencyGraph","componentGraph","getSubGraphOfConnectedComponents","json","GraphLib","write"],"sources":["graph-cmd.ts"],"sourcesContent":["import chalk from 'chalk';\nimport os from 'os';\nimport * as path from 'path';\nimport GraphLib from 'graphlib';\nimport { Command, CommandOptions } from '@teambit/cli';\nimport { BitId } from '@teambit/legacy-bit-id';\nimport { generateRandomStr } from '@teambit/legacy/dist/utils';\nimport VisualDependencyGraph from '@teambit/legacy/dist/scope/graph/vizgraph';\nimport { Consumer, loadConsumerIfExist } from '@teambit/legacy/dist/consumer';\nimport DependencyGraph from '@teambit/legacy/dist/scope/graph/scope-graph';\nimport { ConsumerNotFound } from '@teambit/legacy/dist/consumer/exceptions';\nimport getRemoteByName from '@teambit/legacy/dist/remotes/get-remote-by-name';\n\ntype GraphOpt = {\n  image?: string;\n  remote?: string;\n  allVersions?: boolean;\n  layout?: string;\n  json?: boolean;\n};\n\nexport class GraphCmd implements Command {\n  name = 'graph [id]';\n  description = 'EXPERIMENTAL. generate an image file with the dependencies graph';\n  group = 'discover';\n  alias = '';\n  options = [\n    ['i', 'image <image>', 'image path. use one of the following extensions: [gif, png, svg, pdf]'],\n    ['r', 'remote [remoteName]', 'remote name (name is optional, leave empty when id is specified)'],\n    ['', 'all-versions', 'enter all components versions into the graph, not only latest'],\n    [\n      '',\n      'layout <name>',\n      'GraphVis layout. default to \"dot\". options are [circo, dot, fdp, neato, osage, patchwork, sfdp, twopi]',\n    ],\n    ['j', 'json', 'json format'],\n  ] as CommandOptions;\n  remoteOp = true;\n\n  async report([id]: [string], { remote, allVersions, layout, image }: GraphOpt): Promise<string> {\n    const consumer = await loadConsumerIfExist();\n    if (!consumer && !remote) throw new ConsumerNotFound();\n\n    const graph = await this.generateGraph(consumer, id, remote, allVersions);\n\n    const config = {};\n    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n    if (layout) config.layout = layout;\n    const visualDependencyGraph = await VisualDependencyGraph.loadFromGraphlib(graph, config);\n\n    const getBitId = (): BitId | undefined => {\n      if (!id) return undefined;\n      if (remote) return BitId.parse(id, true); // user used --remote so we know it has a scope\n      return consumer?.getParsedId(id);\n    };\n    const bitId = getBitId();\n\n    if (bitId) {\n      visualDependencyGraph.highlightId(bitId);\n    }\n    image = image || path.join(os.tmpdir(), `${generateRandomStr()}.png`);\n    const result = await visualDependencyGraph.image(image);\n\n    return chalk.green(`image created at ${result}`);\n  }\n\n  private async generateGraph(\n    consumer?: Consumer,\n    id?: string,\n    remote?: string,\n    allVersions?: boolean\n  ): Promise<GraphLib.Graph> {\n    if (!consumer && !remote) throw new ConsumerNotFound();\n    const getBitId = (): BitId | undefined => {\n      if (!id) return undefined;\n      if (remote) return BitId.parse(id, true); // user used --remote so we know it has a scope\n      // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n      return consumer.getParsedId(id);\n    };\n    const bitId = getBitId();\n    if (remote) {\n      if (id) {\n        // @ts-ignore scope must be set as it came from a remote\n        const scopeName: string = typeof remote === 'string' ? remote : bitId.scope;\n        const remoteScope = await getRemoteByName(scopeName, consumer);\n        const componentDepGraph = await remoteScope.graph(bitId);\n        return componentDepGraph.graph;\n      }\n      if (typeof remote !== 'string') {\n        throw new Error('please specify remote scope name or enter an id');\n      }\n      const remoteScope = await getRemoteByName(remote, consumer);\n      const componentDepGraph = await remoteScope.graph();\n      return componentDepGraph.graph;\n    }\n\n    const onlyLatest = !allVersions;\n    // @ts-ignore consumer must be set here\n    const workspaceGraph = await DependencyGraph.buildGraphFromWorkspace(consumer, onlyLatest);\n    const dependencyGraph = new DependencyGraph(workspaceGraph);\n    if (id) {\n      // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n      const componentGraph = dependencyGraph.getSubGraphOfConnectedComponents(bitId);\n      const componentDepGraph = new DependencyGraph(componentGraph);\n      return componentDepGraph.graph;\n    }\n    return dependencyGraph.graph;\n  }\n\n  async json([id]: [string], { remote, allVersions }: GraphOpt) {\n    const consumer = await loadConsumerIfExist();\n    if (!consumer && !remote) throw new ConsumerNotFound();\n\n    const graph = await this.generateGraph(consumer, id, remote, allVersions);\n    return GraphLib.json.write(graph);\n  }\n}\n"],"mappings":"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"}