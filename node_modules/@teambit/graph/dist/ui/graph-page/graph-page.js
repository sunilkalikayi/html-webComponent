"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GraphPage = GraphPage;
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _documenterUi() {
  const data = require("@teambit/documenter.ui.heading");
  _documenterUi = function () {
    return data;
  };
  return data;
}
function _designUiPages() {
  const data = require("@teambit/design.ui.pages.not-found");
  _designUiPages = function () {
    return data;
  };
  return data;
}
function _designUiPages2() {
  const data = require("@teambit/design.ui.pages.server-error");
  _designUiPages2 = function () {
    return data;
  };
  return data;
}
function _component() {
  const data = require("@teambit/component");
  _component = function () {
    return data;
  };
  return data;
}
function _uiFoundationUi() {
  const data = require("@teambit/ui-foundation.ui.full-loader");
  _uiFoundationUi = function () {
    return data;
  };
  return data;
}
function _query() {
  const data = require("../query");
  _query = function () {
    return data;
  };
  return data;
}
function _dependenciesGraph() {
  const data = require("../dependencies-graph");
  _dependenciesGraph = function () {
    return data;
  };
  return data;
}
function _graphFilters() {
  const data = require("./graph-filters");
  _graphFilters = function () {
    return data;
  };
  return data;
}
function _graphPageModule() {
  const data = _interopRequireDefault(require("./graph-page.module.scss"));
  _graphPageModule = function () {
    return data;
  };
  return data;
}
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function GraphPage({
  componentWidgets
}) {
  const component = (0, _react().useContext)(_component().ComponentContext);
  const [filter, setFilter] = (0, _react().useState)('runtimeOnly');
  const onCheckFilter = isFiltered => {
    setFilter(isFiltered ? 'runtimeOnly' : undefined);
  };
  const {
    graph,
    error,
    loading
  } = (0, _query().useGraphQuery)([component.id.toString()], filter);
  if (error) return error.code === 404 ? /*#__PURE__*/_react().default.createElement(_designUiPages().NotFoundPage, null) : /*#__PURE__*/_react().default.createElement(_designUiPages2().ServerErrorPage, null);
  if (!graph) return /*#__PURE__*/_react().default.createElement(_uiFoundationUi().FullLoader, null);
  const isFiltered = filter === 'runtimeOnly';
  return /*#__PURE__*/_react().default.createElement("div", {
    className: _graphPageModule().default.page
  }, /*#__PURE__*/_react().default.createElement(_documenterUi().H2, {
    size: "xs"
  }, "Component Dependencies"), /*#__PURE__*/_react().default.createElement(_dependenciesGraph().DependenciesGraph, {
    componentWidgets: componentWidgets,
    graph: graph,
    rootNode: component.id,
    className: _graphPageModule().default.graph
  }, /*#__PURE__*/_react().default.createElement(_graphFilters().GraphFilters, {
    className: _graphPageModule().default.filters,
    disable: loading,
    isFiltered: isFiltered,
    onChangeFilter: onCheckFilter
  })));
}

//# sourceMappingURL=graph-page.js.map