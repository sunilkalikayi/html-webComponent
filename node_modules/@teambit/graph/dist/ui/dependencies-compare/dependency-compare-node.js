"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DependencyCompareNode = DependencyCompareNode;
function _extends2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
  _extends2 = function () {
    return data;
  };
  return data;
}
function _objectWithoutProperties2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
  _objectWithoutProperties2 = function () {
    return data;
  };
  return data;
}
function _baseUiRouting() {
  const data = require("@teambit/base-ui.routing.nav-link");
  _baseUiRouting = function () {
    return data;
  };
  return data;
}
function _baseUiSurfaces() {
  const data = require("@teambit/base-ui.surfaces.card");
  _baseUiSurfaces = function () {
    return data;
  };
  return data;
}
function _baseUiText() {
  const data = require("@teambit/base-ui.text.muted-text");
  _baseUiText = function () {
    return data;
  };
  return data;
}
function _component() {
  const data = require("@teambit/component");
  _component = function () {
    return data;
  };
  return data;
}
function _componentModules() {
  const data = require("@teambit/component.modules.component-url");
  _componentModules = function () {
    return data;
  };
  return data;
}
function _componentUi() {
  const data = require("@teambit/component.ui.compare");
  _componentUi = function () {
    return data;
  };
  return data;
}
function _componentUi2() {
  const data = require("@teambit/component.ui.deprecation-icon");
  _componentUi2 = function () {
    return data;
  };
  return data;
}
function _designUiStyles() {
  const data = require("@teambit/design.ui.styles.ellipsis");
  _designUiStyles = function () {
    return data;
  };
  return data;
}
function _envsUi() {
  const data = require("@teambit/envs.ui.env-icon");
  _envsUi = function () {
    return data;
  };
  return data;
}
function _graph() {
  const data = require("@teambit/graph");
  _graph = function () {
    return data;
  };
  return data;
}
function _classnames() {
  const data = _interopRequireDefault(require("classnames"));
  _classnames = function () {
    return data;
  };
  return data;
}
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _semver() {
  const data = require("semver");
  _semver = function () {
    return data;
  };
  return data;
}
function _dependencyCompareNodeModule() {
  const data = _interopRequireDefault(require("./dependency-compare-node.module.scss"));
  _dependencyCompareNodeModule = function () {
    return data;
  };
  return data;
}
function _dependencyCompareVariantsModule() {
  const data = _interopRequireDefault(require("./dependency-compare-variants.module.scss"));
  _dependencyCompareVariantsModule = function () {
    return data;
  };
  return data;
}
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function getVariant(nodeType) {
  switch (nodeType) {
    case 'defaultNode':
      return _graph().defaultNode;
    case 'root':
      return _dependencyCompareVariantsModule().default[nodeType];
    case 'external':
      return _graph().external;
    default:
      return null;
  }
}
function DependencyCompareNode(props) {
  const {
    node,
    type = 'defaultNode'
  } = props;
  const {
    id: baseIdStr,
    component: baseComponent,
    compareVersion,
    status
  } = node;
  const {
    version: baseVersion
  } = baseComponent;
  const baseId = _component().ComponentID.fromString(baseIdStr);
  const versionDiff = (0, _react().useMemo)(() => (0, _semver().valid)(baseVersion) && (0, _semver().valid)(compareVersion) && (0, _semver().compare)(baseVersion, compareVersion), [baseVersion, compareVersion]);
  return /*#__PURE__*/_react().default.createElement(_baseUiSurfaces().Card, {
    className: (0, _classnames().default)(_graph().componentNodeStyles.compNode, getVariant(type)),
    elevation: "none"
  }, /*#__PURE__*/_react().default.createElement("div", {
    className: _graph().componentNodeStyles.firstRow
  }, /*#__PURE__*/_react().default.createElement(_envsUi().EnvIcon, {
    component: baseComponent,
    className: _graph().componentNodeStyles.envIcon
  }), /*#__PURE__*/_react().default.createElement(Breadcrumbs, {
    componentId: baseId,
    className: _baseUiText().mutedText
  })), /*#__PURE__*/_react().default.createElement("div", {
    className: _graph().componentNodeStyles.nameLine
  }, /*#__PURE__*/_react().default.createElement(_baseUiRouting().NavLink, {
    className: _dependencyCompareNodeModule().default.link,
    external: true,
    href: _componentModules().ComponentUrl.toUrl(baseId, {
      includeVersion: false
    })
  }, /*#__PURE__*/_react().default.createElement("span", {
    className: (0, _classnames().default)(_graph().componentNodeStyles.name, _designUiStyles().ellipsis)
  }, baseId.name)), baseId.version && /*#__PURE__*/_react().default.createElement("span", {
    className: (0, _classnames().default)(_graph().componentNodeStyles.version, _designUiStyles().ellipsis)
  }, baseId.version), versionDiff !== 0 && /*#__PURE__*/_react().default.createElement("img", {
    className: (0, _classnames().default)([_dependencyCompareNodeModule().default.arrowIcon, _dependencyCompareNodeModule().default.versionUp]),
    src: "https://static.bit.dev/bit-icons/version-bump.svg"
  }), compareVersion && versionDiff !== 0 && /*#__PURE__*/_react().default.createElement("span", {
    className: (0, _classnames().default)(_dependencyCompareNodeModule().default.version, _graph().componentNodeStyles.version, _designUiStyles().ellipsis, versionDiff === -1 && _dependencyCompareNodeModule().default.versionUp, versionDiff === 1 && _dependencyCompareNodeModule().default.versionDown)
  }, compareVersion), /*#__PURE__*/_react().default.createElement("div", {
    className: _dependencyCompareNodeModule().default.buffs
  }, /*#__PURE__*/_react().default.createElement(_componentUi2().DeprecationIcon, {
    component: baseComponent
  }), status !== undefined && /*#__PURE__*/_react().default.createElement(_componentUi().CompareStatusResolver, {
    status: status
  }))));
}
function Breadcrumbs(_ref) {
  let {
      componentId,
      className
    } = _ref,
    rest = (0, _objectWithoutProperties2().default)(_ref, ["componentId", "className"]);
  const {
    scope,
    namespace
  } = componentId;
  const showSep = !!scope && !!namespace;
  return /*#__PURE__*/_react().default.createElement("div", (0, _extends2().default)({}, rest, {
    className: (0, _classnames().default)(_dependencyCompareNodeModule().default.breadcrumbs, _designUiStyles().ellipsis, className)
  }), scope, showSep && '/', namespace);
}

//# sourceMappingURL=dependency-compare-node.js.map