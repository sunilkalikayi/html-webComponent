{"version":3,"names":["ComponentNodeContainer","props","sourcePosition","Position","Top","targetPosition","Bottom","data","id","node","type","NodeTypes","ComponentNode","DependenciesGraph","graph","rootNode","componentWidgets","className","onLoad","children","rest","graphRef","useRef","elements","calcElements","context","useMemo","handleLoad","useCallback","instance","current","fitView","useEffect","undefined","classnames","styles","controls","calcMinimapColors","minimap"],"sources":["dependencies-graph.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport classnames from 'classnames';\nimport ReactFlow, {\n  Background,\n  Controls,\n  Handle,\n  MiniMap,\n  NodeProps,\n  NodeTypesType,\n  OnLoadParams,\n  Position,\n  ReactFlowProps,\n  ReactFlowProvider,\n} from 'react-flow-renderer';\nimport { ComponentID } from '@teambit/component';\n\nimport { ComponentWidgetSlot } from '../../graph.ui.runtime';\nimport { ComponentNode } from '../component-node';\nimport { EdgeModel, GraphModel, NodeModel } from '../query';\nimport { calcElements } from './calc-elements';\nimport { calcMinimapColors } from './minimap';\nimport { ComponentGraphContext } from './graph-context';\n\nimport styles from './dependencies-graph.module.scss';\n\nfunction ComponentNodeContainer(props: NodeProps) {\n  const { sourcePosition = Position.Top, targetPosition = Position.Bottom, data, id } = props;\n\n  return (\n    <div key={id}>\n      <Handle type=\"target\" position={targetPosition} isConnectable={false} />\n      <Handle type=\"source\" position={sourcePosition} isConnectable={false} />\n      <ComponentNode node={data.node} type={data.type} />\n    </div>\n  );\n}\n\n// @ts-ignore - incorrect NodeTypes https://github.com/wbkd/react-flow/issues/2101 (#5746)\nconst NodeTypes: NodeTypesType = { ComponentNode: ComponentNodeContainer };\n\nexport type DependenciesGraphProps = {\n  rootNode: ComponentID;\n  graph: GraphModel<NodeModel, EdgeModel>;\n  componentWidgets: ComponentWidgetSlot;\n  onLoad?: (instance: OnLoadParams) => void;\n} & Omit<ReactFlowProps, 'elements'>;\n\nexport function DependenciesGraph({\n  graph,\n  rootNode,\n  componentWidgets,\n  className,\n  onLoad,\n  children,\n  ...rest\n}: DependenciesGraphProps) {\n  const graphRef = useRef<OnLoadParams>();\n  const elements = calcElements(graph, { rootNode });\n  const context = useMemo(() => ({ componentWidgets }), [componentWidgets]);\n\n  const handleLoad = useCallback(\n    (instance: OnLoadParams) => {\n      graphRef.current = instance;\n      instance.fitView();\n      onLoad?.(instance);\n    },\n    [onLoad]\n  );\n\n  // clear ref on unmount\n  useEffect(() => () => (graphRef.current = undefined), []);\n\n  useEffect(() => {\n    graphRef.current?.fitView();\n  }, [graph]);\n\n  return (\n    <ComponentGraphContext.Provider value={context}>\n      {/* @ts-ignore - TODO - remove when ReactFlowProvider will be of type `FC<PropsWithChildren<{}>>` instead of `FC` (#5746) */}\n      <ReactFlowProvider>\n        <ReactFlow\n          draggable={false}\n          nodesDraggable={true}\n          selectNodesOnDrag={false}\n          nodesConnectable={false}\n          zoomOnDoubleClick={false}\n          elementsSelectable={false}\n          maxZoom={1}\n          {...rest}\n          className={classnames(styles.graph, className)}\n          elements={elements}\n          nodeTypes={NodeTypes}\n          onLoad={handleLoad}\n        >\n          <Background />\n          <Controls className={styles.controls} />\n          <MiniMap nodeColor={calcMinimapColors} className={styles.minimap} />\n          {children}\n        </ReactFlow>\n      </ReactFlowProvider>\n    </ComponentGraphContext.Provider>\n  );\n}\n"],"mappings":"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"}