{"version":3,"names":["AspectDefinition","constructor","aspectPath","runtimePath","component","id","local","getId","toString","from"],"sources":["aspect-definition.ts"],"sourcesContent":["import { Component } from '@teambit/component';\n\nexport type AspectDefinitionProps = {\n  id?: string;\n  component?: Component;\n  aspectPath: string;\n  runtimePath: string | null;\n};\n\nexport class AspectDefinition {\n  constructor(\n    /**\n     * path the the root directory of the aspect module.\n     */\n    readonly aspectPath: string,\n\n    /**\n     * path to the runtime entry\n     */\n    readonly runtimePath: string | null,\n    /**\n     * aspect component\n     */\n    readonly component?: Component,\n    /**\n     * id of the component (used instead of component in the case of core aspect)\n     */\n    readonly id?: string,\n    /**\n     * aspect defined using 'file://' protocol\n     */\n    readonly local?: boolean\n  ) {}\n\n  get getId() {\n    if (this.component) return this.component.id.toString();\n    if (this.id) return this.id;\n    return null;\n  }\n\n  static from({ component, aspectPath, runtimePath, id }: AspectDefinitionProps) {\n    return new AspectDefinition(aspectPath, runtimePath, component, id);\n  }\n}\n"],"mappings":";;;;;;AASO,MAAMA,gBAAgB,CAAC;EAC5BC,WAAW;EACT;AACJ;AACA;EACaC,UAAkB;EAE3B;AACJ;AACA;EACaC,WAA0B;EACnC;AACJ;AACA;EACaC,SAAqB;EAC9B;AACJ;AACA;EACaC,EAAW;EACpB;AACJ;AACA;EACaC,KAAe,EACxB;IAAA,KAlBSJ,UAAkB,GAAlBA,UAAkB;IAAA,KAKlBC,WAA0B,GAA1BA,WAA0B;IAAA,KAI1BC,SAAqB,GAArBA,SAAqB;IAAA,KAIrBC,EAAW,GAAXA,EAAW;IAAA,KAIXC,KAAe,GAAfA,KAAe;EACvB;EAEH,IAAIC,KAAK,GAAG;IACV,IAAI,IAAI,CAACH,SAAS,EAAE,OAAO,IAAI,CAACA,SAAS,CAACC,EAAE,CAACG,QAAQ,EAAE;IACvD,IAAI,IAAI,CAACH,EAAE,EAAE,OAAO,IAAI,CAACA,EAAE;IAC3B,OAAO,IAAI;EACb;EAEA,OAAOI,IAAI,CAAC;IAAEL,SAAS;IAAEF,UAAU;IAAEC,WAAW;IAAEE;EAA0B,CAAC,EAAE;IAC7E,OAAO,IAAIL,gBAAgB,CAACE,UAAU,EAAEC,WAAW,EAAEC,SAAS,EAAEC,EAAE,CAAC;EACrE;AACF;AAAC"}