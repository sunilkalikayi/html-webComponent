{"version":3,"names":["AspectLoaderMain","constructor","logger","envs","harmony","onAspectLoadErrorSlot","onLoadRequireableExtensionSlot","pluginSlot","getCompiler","component","env","getEnv","registerOnAspectLoadErrorSlot","onAspectLoadError","register","registerOnLoadRequireableExtensionSlot","onLoadRequireableExtension","triggerOnAspectLoadError","err","entries","toArray","isFixed","mapSeries","onAspectFailFunc","result","id","getRuntimePath","modulePath","runtime","runtimeFile","filesystem","files","find","file","relative","includes","compiler","join","dist","getDistPathBySrcPath","e","info","distPath","DEFAULT_DIST_DIRNAME","replaceFileExtToJs","isAspectLoaded","failedAspects","get","getDescriptor","instance","iconFn","icon","apply","undefined","getNotLoadedConfiguredExtensions","configuredAspects","Array","from","config","raw","keys","loadedExtensions","extensionsIds","extensionsToLoad","difference","loadDefinition","props","AspectDefinition","coreAspects","_coreAspects","isCoreAspect","ids","getCoreAspectIds","setCoreAspects","aspects","map","aspect","concat","_reserved","getCoreEnvsIds","envsIds","allIds","intersection","isCoreEnv","getUserAspects","coreAspectIds","getCoreAspectDefs","runtimeName","defs","Promise","all","rawDef","getAspectDef","filter","def","runtimePath","resolveAspects","components","resolver","promises","resolvedAspect","aspectPath","aspectDefs","mainAspect","_mainAspect","setMainAspect","failedLoadAspect","resetFailedLoadAspects","addFailure","push","cloneManifest","manifest","cloned","Object","assign","create","getPrototypeOf","provider","addRuntime","getRuntime","doRequire","requireableExtension","idStr","toString","require","default","newManifest","runOnLoadRequireableExtensionSubscribers","loadRequireableExtensions","requireableExtensions","throwOnError","manifests","getManifestsFromRequireableExtensions","loadExtensionsByManifests","manifestsP","firstErr","warn","errAfterReLoad","error","handleExtensionLoadingError","compact","errorMsg","message","split","msg","UNABLE_TO_LOAD_EXTENSION","console","CannotLoadExtension","isLoaderStarted","consoleFailure","updatedManifest","onLoadRequireableExtensionFunc","getPluginDefs","flatten","values","getPlugins","componentPath","Plugins","relativePath","isAspect","isValidAspect","isAspectComponent","isUsingAspectEnv","loadAspectsFromGlobalScope","aspectIds","globalScope","LegacyScope","ensure","GLOBAL_SCOPE","ensureDir","globalScopeHarmony","loadBit","path","scope","ScopeAspect","aspectLoader","AspectLoaderAspect","ComponentID","fromLegacy","BitId","parse","hasVersions","every","hasVersion","useCache","import","throwIfNotExist","resolvedAspects","getResolvedAspects","code","resolvedAspectsAgain","skipIfExists","prepareManifests","MainRuntime","Error","Aspect","registerPlugins","pluginDefs","extensionsManifests","seeders","isValid","preparedManifests","getOnlyDeclaredDependenciesManifests","length","manifestGraph","generateManifestGraph","nodes","seeder","successors","flat","seederNodes","node","allNodes","nodesUniq","uniqBy","n","attr","relevantManifests","load","warning","UNABLE_TO_LOAD_EXTENSION_FROM_LIST","graph","Graph","forEach","setNode","Node","deps","dependencies","dep","setEdge","Edge","loggerExt","createLogger","LoggerAspect","EnvsAspect","Slot","withType"],"sources":["aspect-loader.main.runtime.ts"],"sourcesContent":["import { join } from 'path';\nimport { Graph, Node, Edge } from '@teambit/graph.cleargraph';\nimport { BitId } from '@teambit/legacy-bit-id';\nimport LegacyScope from '@teambit/legacy/dist/scope/scope';\nimport { GLOBAL_SCOPE, DEFAULT_DIST_DIRNAME } from '@teambit/legacy/dist/constants';\nimport { MainRuntime } from '@teambit/cli';\nimport { ExtensionManifest, Harmony, Aspect, SlotRegistry, Slot } from '@teambit/harmony';\nimport type { LoggerMain } from '@teambit/logger';\nimport { ComponentID, Component } from '@teambit/component';\nimport { Logger, LoggerAspect } from '@teambit/logger';\nimport { RequireableComponent } from '@teambit/harmony.modules.requireable-component';\nimport { replaceFileExtToJs } from '@teambit/compilation.modules.babel-compiler';\nimport { EnvsAspect, EnvsMain } from '@teambit/envs';\nimport { loadBit } from '@teambit/bit';\nimport { ScopeAspect, ScopeMain } from '@teambit/scope';\nimport mapSeries from 'p-map-series';\nimport { difference, compact, flatten, intersection, uniqBy } from 'lodash';\nimport { AspectDefinition, AspectDefinitionProps } from './aspect-definition';\nimport { PluginDefinition } from './plugin-definition';\nimport { AspectLoaderAspect } from './aspect-loader.aspect';\nimport { UNABLE_TO_LOAD_EXTENSION, UNABLE_TO_LOAD_EXTENSION_FROM_LIST } from './constants';\nimport { CannotLoadExtension } from './exceptions';\nimport { getAspectDef } from './core-aspects';\nimport { Plugins } from './plugins';\n\nexport type PluginDefinitionSlot = SlotRegistry<PluginDefinition[]>;\n\nexport type AspectDescriptor = {\n  /**\n   * name of the extension.\n   */\n  id: string;\n\n  /**\n   * icon of the extension.\n   */\n  icon?: string;\n};\n\nexport type AspectResolver = (component: Component) => Promise<ResolvedAspect>;\n\nexport type ResolvedAspect = {\n  aspectPath: string;\n  runtimePath: string | null;\n};\n\ntype OnAspectLoadError = (err: Error, id: ComponentID) => Promise<boolean>;\nexport type OnAspectLoadErrorSlot = SlotRegistry<OnAspectLoadError>;\n\nexport type OnLoadRequireableExtension = (\n  requireableExtension: RequireableComponent,\n  manifest: ExtensionManifest | Aspect\n) => Promise<ExtensionManifest | Aspect>;\n/**\n * A slot which run during loading the requirable extension (after first manifest calculation)\n */\nexport type OnLoadRequireableExtensionSlot = SlotRegistry<OnLoadRequireableExtension>;\n\nexport type MainAspect = {\n  /**\n   * path to the main aspect.\n   */\n  path: string;\n\n  /**\n   * version of the aspect.\n   */\n  version: string | undefined;\n\n  /**\n   * package name of the aspect\n   */\n  packageName: string | undefined;\n\n  /**\n   * reference to aspect manifest.\n   */\n  aspect: Aspect;\n\n  /**\n   * The name of the aspect (without the scope prefix)\n   */\n  name: string;\n\n  /**\n   * The name of the aspect\n   */\n  id: string;\n};\n\nexport class AspectLoaderMain {\n  constructor(\n    private logger: Logger,\n    private envs: EnvsMain,\n    private harmony: Harmony,\n    private onAspectLoadErrorSlot: OnAspectLoadErrorSlot,\n    private onLoadRequireableExtensionSlot: OnLoadRequireableExtensionSlot,\n    private pluginSlot: PluginDefinitionSlot\n  ) {}\n\n  private getCompiler(component: Component) {\n    const env = this.envs.getEnv(component)?.env;\n    return env?.getCompiler();\n  }\n\n  registerOnAspectLoadErrorSlot(onAspectLoadError: OnAspectLoadError) {\n    this.onAspectLoadErrorSlot.register(onAspectLoadError);\n  }\n\n  registerOnLoadRequireableExtensionSlot(onLoadRequireableExtension: OnLoadRequireableExtension) {\n    this.onLoadRequireableExtensionSlot.register(onLoadRequireableExtension);\n  }\n\n  /**\n   * returns whether the aspect-load issue has been fixed.\n   */\n  async triggerOnAspectLoadError(err: Error, component: Component): Promise<boolean> {\n    const entries = this.onAspectLoadErrorSlot.toArray(); // e.g. [ [ 'teambit.bit/compiler', [Function: bound onAspectLoadError] ] ]\n    let isFixed = false;\n    await mapSeries(entries, async ([, onAspectFailFunc]) => {\n      const result = await onAspectFailFunc(err, component.id);\n      if (result) isFixed = true;\n    });\n\n    return isFixed;\n  }\n\n  async getRuntimePath(component: Component, modulePath: string, runtime: string): Promise<string | null> {\n    const runtimeFile = component.filesystem.files.find((file: any) => {\n      return file.relative.includes(`.${runtime}.runtime`);\n    });\n\n    // @david we should add a compiler api for this.\n    if (!runtimeFile) return null;\n    try {\n      const compiler = this.getCompiler(component);\n\n      if (!compiler) {\n        return join(modulePath, runtimeFile.relative);\n      }\n\n      const dist = compiler.getDistPathBySrcPath(runtimeFile.relative);\n      return join(modulePath, dist);\n    } catch (e) {\n      this.logger.info(`got an error during get runtime path, probably the env is not loaded yet ${e}`);\n      // TODO: we are manually adding the dist here and replace the file name to handle case when\n      // we load aspects from scope, and their env in the same iteration, but we get into the aspect before its\n      // env, so it's env doesn't exist yet\n      // we should make sure to first load the env correctly before loading the aspect\n      const distPath = join(modulePath, DEFAULT_DIST_DIRNAME, replaceFileExtToJs(runtimeFile.relative));\n      return distPath;\n    }\n  }\n\n  isAspectLoaded(id: string) {\n    if (this.failedAspects.includes(id)) return true;\n    try {\n      return this.harmony.get(id);\n    } catch (err: any) {\n      return false;\n    }\n  }\n\n  getDescriptor(id: string): AspectDescriptor {\n    const instance = this.harmony.get<any>(id);\n    const iconFn = instance.icon;\n\n    const icon = iconFn ? iconFn.apply(instance) : undefined;\n\n    return {\n      id,\n      icon,\n    };\n  }\n\n  getNotLoadedConfiguredExtensions() {\n    const configuredAspects = Array.from(this.harmony.config.raw.keys());\n    const loadedExtensions = this.harmony.extensionsIds;\n    const extensionsToLoad = difference(configuredAspects, loadedExtensions);\n    return extensionsToLoad;\n  }\n\n  loadDefinition(props: AspectDefinitionProps): AspectDefinition {\n    return AspectDefinition.from(props);\n  }\n\n  private _coreAspects: Aspect[] = [];\n\n  get coreAspects() {\n    return this._coreAspects;\n  }\n\n  isCoreAspect(id: string) {\n    const ids = this.getCoreAspectIds();\n    return ids.includes(id);\n  }\n\n  setCoreAspects(aspects: Aspect[]) {\n    this._coreAspects = aspects;\n    return this;\n  }\n\n  getCoreAspectIds() {\n    const ids = this.coreAspects.map((aspect) => aspect.id);\n    return ids.concat(this._reserved);\n  }\n\n  /**\n   * Get all the core envs ids which is still register in the bit manifest as core aspect\n   */\n  getCoreEnvsIds(): string[] {\n    const envsIds = this.envs.getCoreEnvsIds();\n    const allIds = this.getCoreAspectIds();\n    return intersection(allIds, envsIds);\n  }\n\n  isCoreEnv(id: string): boolean {\n    const ids = this.getCoreEnvsIds();\n    return ids.includes(id);\n  }\n\n  private _reserved = ['teambit.harmony/bit', 'teambit.harmony/config'];\n\n  getUserAspects(): string[] {\n    const coreAspectIds = this.getCoreAspectIds();\n    return difference(this.harmony.extensionsIds, coreAspectIds);\n  }\n\n  async getCoreAspectDefs(runtimeName?: string) {\n    const defs = await Promise.all(\n      this.coreAspects.map(async (aspect) => {\n        const id = aspect.id;\n        const rawDef = await getAspectDef(id, runtimeName);\n        return this.loadDefinition(rawDef);\n      })\n    );\n\n    return defs.filter((def) => def.runtimePath);\n  }\n\n  async resolveAspects(components: Component[], resolver: AspectResolver): Promise<AspectDefinition[]> {\n    const promises = components.map(async (component) => {\n      const resolvedAspect = await resolver(component);\n      return new AspectDefinition(resolvedAspect.aspectPath, resolvedAspect.runtimePath, component);\n    });\n\n    const aspectDefs = await Promise.all(promises);\n    // return aspectDefs.filter((def) => def.runtimePath);\n    return aspectDefs;\n  }\n\n  private _mainAspect: MainAspect;\n\n  get mainAspect() {\n    return this._mainAspect;\n  }\n\n  setMainAspect(mainAspect: MainAspect) {\n    this._mainAspect = mainAspect;\n    return this;\n  }\n\n  private failedLoadAspect: string[] = [];\n\n  get failedAspects() {\n    return this.failedLoadAspect;\n  }\n\n  public resetFailedLoadAspects() {\n    this.failedLoadAspect = [];\n  }\n\n  private addFailure(id: string): void {\n    if (this.failedAspects.includes(id)) return;\n    this.failedLoadAspect.push(id);\n  }\n\n  cloneManifest(manifest: any) {\n    const cloned = Object.assign(Object.create(Object.getPrototypeOf(manifest)), manifest);\n    cloned.provider = manifest.provider;\n    cloned.addRuntime = manifest.addRuntime;\n    cloned.getRuntime = manifest.getRuntime;\n    return cloned;\n  }\n\n  /**\n   * run \"require\" of the component code to get the manifest\n   */\n  async doRequire(requireableExtension: RequireableComponent): Promise<ExtensionManifest | Aspect> {\n    const idStr = requireableExtension.component.id.toString();\n    const aspect = await requireableExtension.require();\n    const manifest = aspect.default || aspect;\n    manifest.id = idStr;\n    // It's important to clone deep the manifest here to prevent mutate dependencies of other manifests as they point to the same location in memory\n    const cloned = this.cloneManifest(manifest);\n    const newManifest = await this.runOnLoadRequireableExtensionSubscribers(requireableExtension, cloned);\n    return newManifest;\n  }\n\n  /**\n   * in case the extension failed to load, prefer to throw an error, unless `throwOnError` param\n   * passed as `false`.\n   * there are cases when throwing an error blocks the user from doing anything else. for example,\n   * when a user develops an extension and deletes the node-modules, the extension on the workspace\n   * cannot be loaded anymore until \"bit compile\" is running. however, if this function throws an\n   * error, it'll throw for \"bit compile\" as well, which blocks the user.\n   * for the CI, it is important to throw an error because errors on console can be ignored.\n   * for now, when loading the extension from the workspace the throwOnError is passed as false.\n   * when loading from the scope (CI) it should be true.\n   *\n   * the console printing here is done directly by \"console.error\" and not by the logger. the reason\n   * is that the logger.console only prints when the loader started (which, btw, happens after\n   * entering this function, so it can't work) and here we want it to be printed regardless of the\n   * rules of starting the loader. e.g. if by mistake the CI got it as throwOnError=false, it's ok\n   * to break the output by the console.error.\n   *\n   * @todo: this is not the final word however about throwing/non throwing errors here.\n   * in some cases, such as \"bit tag\", it's better not to tag if an extension changes the model.\n   */\n  async loadRequireableExtensions(requireableExtensions: RequireableComponent[], throwOnError = false): Promise<void> {\n    const manifests = await this.getManifestsFromRequireableExtensions(requireableExtensions, throwOnError);\n    return this.loadExtensionsByManifests(manifests, throwOnError);\n  }\n\n  async getManifestsFromRequireableExtensions(\n    requireableExtensions: RequireableComponent[],\n    throwOnError = false\n  ): Promise<Array<ExtensionManifest | Aspect>> {\n    const manifestsP = mapSeries(requireableExtensions, async (requireableExtension) => {\n      if (!requireableExtensions) return undefined;\n      const idStr = requireableExtension.component.id.toString();\n      try {\n        return await this.doRequire(requireableExtension);\n      } catch (firstErr: any) {\n        this.addFailure(idStr);\n        this.logger.warn(`failed loading an aspect \"${idStr}\", will try to fix and reload`, firstErr);\n        const isFixed = await this.triggerOnAspectLoadError(firstErr, requireableExtension.component);\n        let errAfterReLoad;\n        if (isFixed) {\n          this.logger.info(`the loading issue might be fixed now, re-loading ${idStr}`);\n          try {\n            return await this.doRequire(requireableExtension);\n          } catch (err: any) {\n            this.logger.warn(`re-load of the aspect \"${idStr}\" failed as well`, err);\n            errAfterReLoad = err;\n          }\n        }\n        const error = errAfterReLoad || firstErr;\n        this.handleExtensionLoadingError(error, idStr, throwOnError);\n      }\n      return undefined;\n    });\n    const manifests = await manifestsP;\n\n    // Remove empty manifests as a result of loading issue\n    return compact(manifests);\n  }\n\n  handleExtensionLoadingError(error: Error, idStr: string, throwOnError: boolean) {\n    const errorMsg = error.message.split('\\n')[0]; // show only the first line if the error is long (e.g. happens with MODULE_NOT_FOUND errors)\n    const msg = UNABLE_TO_LOAD_EXTENSION(idStr, errorMsg);\n    if (throwOnError) {\n      // @ts-ignore\n      this.logger.console(error);\n      throw new CannotLoadExtension(idStr, error);\n    }\n    this.logger.error(msg, error);\n    if (this.logger.isLoaderStarted) {\n      this.logger.consoleFailure(msg);\n    } else {\n      this.logger.console(msg);\n    }\n  }\n\n  async runOnLoadRequireableExtensionSubscribers(\n    requireableExtension: RequireableComponent,\n    manifest: ExtensionManifest | Aspect\n  ): Promise<ExtensionManifest | Aspect> {\n    let updatedManifest = manifest;\n    const entries = this.onLoadRequireableExtensionSlot.toArray();\n    await mapSeries(entries, async ([, onLoadRequireableExtensionFunc]) => {\n      updatedManifest = await onLoadRequireableExtensionFunc(requireableExtension, updatedManifest);\n    });\n    return updatedManifest;\n  }\n\n  getPluginDefs() {\n    return flatten(this.pluginSlot.values());\n  }\n\n  getPlugins(component: Component, componentPath: string): Plugins {\n    const defs = this.getPluginDefs();\n    return Plugins.from(component, defs, (relativePath) => {\n      const compiler = this.getCompiler(component);\n      if (!compiler) {\n        return join(componentPath, relativePath);\n      }\n\n      const dist = compiler.getDistPathBySrcPath(relativePath);\n      return join(componentPath, dist);\n    });\n  }\n\n  isAspect(manifest: any) {\n    return !!(manifest.addRuntime && manifest.getRuntime);\n  }\n\n  isValidAspect(manifest: any): boolean {\n    return this.isAspect(manifest) || manifest.provider;\n  }\n\n  isAspectComponent(component: Component): boolean {\n    return this.envs.isUsingAspectEnv(component);\n  }\n\n  /**\n   * get or create a global scope, import the non-core aspects, load bit from that scope, create\n   * capsules for the aspects and load them from the capsules.\n   */\n  async loadAspectsFromGlobalScope(\n    aspectIds: string[]\n  ): Promise<{ components: Component[]; globalScopeHarmony: Harmony }> {\n    const globalScope = await LegacyScope.ensure(GLOBAL_SCOPE, 'global-scope');\n    await globalScope.ensureDir();\n    const globalScopeHarmony = await loadBit(globalScope.path);\n    const scope = globalScopeHarmony.get<ScopeMain>(ScopeAspect.id);\n    const aspectLoader = globalScopeHarmony.get<AspectLoaderMain>(AspectLoaderAspect.id);\n    // @todo: Gilad make this work\n    // const ids = await scope.resolveMultipleComponentIds(aspectIds);\n    const ids = aspectIds.map((id) => ComponentID.fromLegacy(BitId.parse(id, true)));\n    const hasVersions = ids.every((id) => id.hasVersion());\n    const useCache = hasVersions; // if all components has versions, try to use the cached aspects\n    const components = await scope.import(ids, { useCache, throwIfNotExist: true });\n\n    // don't use `await scope.loadAspectsFromCapsules(components, true);`\n    // it won't work for globalScope because `this !== scope.aspectLoader` (this instance\n    // is not the same as the aspectLoader instance Scope has)\n    const resolvedAspects = await scope.getResolvedAspects(components);\n    try {\n      await aspectLoader.loadRequireableExtensions(resolvedAspects, true);\n    } catch (err: any) {\n      if (err?.error.code === 'MODULE_NOT_FOUND') {\n        const resolvedAspectsAgain = await scope.getResolvedAspects(components, { skipIfExists: false });\n        await aspectLoader.loadRequireableExtensions(resolvedAspectsAgain, true);\n      } else {\n        throw err;\n      }\n    }\n\n    return { components, globalScopeHarmony };\n  }\n\n  private prepareManifests(manifests: Array<ExtensionManifest | Aspect>): Aspect[] {\n    return manifests.map((manifest: any) => {\n      if (this.isAspect(manifest)) return manifest as Aspect;\n      manifest.runtime = MainRuntime;\n      if (!manifest.id) throw new Error('manifest must have static id');\n      const aspect = Aspect.create({\n        id: manifest.id,\n      });\n      aspect.addRuntime(manifest);\n      return aspect;\n    });\n  }\n\n  /**\n   * register a plugin.\n   */\n  registerPlugins(pluginDefs: PluginDefinition[]) {\n    this.pluginSlot.register(pluginDefs);\n  }\n\n  async loadExtensionsByManifests(\n    extensionsManifests: Array<ExtensionManifest | Aspect>,\n    throwOnError = true,\n    seeders: string[] = []\n  ) {\n    try {\n      const manifests = extensionsManifests.filter((manifest) => {\n        const isValid = this.isValidAspect(manifest);\n        if (!isValid) this.logger.warn(`${manifest.id} is invalid. please make sure the extension is valid.`);\n        return isValid;\n      });\n      const preparedManifests = this.prepareManifests(manifests);\n      // don't let harmony load all aspects. if seeders were sent, find their manifests, check for their static\n      // dependencies, and load only them.\n      const getOnlyDeclaredDependenciesManifests = () => {\n        if (!seeders.length || seeders.length === preparedManifests.length) {\n          return preparedManifests;\n        }\n        const manifestGraph = this.generateManifestGraph(preparedManifests);\n        const nodes = seeders.map((seeder) => manifestGraph.successors(seeder)).flat();\n        const seederNodes = compact(seeders.map((seeder) => manifestGraph.node(seeder)));\n        const allNodes = [...nodes, ...seederNodes];\n        const nodesUniq = uniqBy(allNodes, 'id');\n        return nodesUniq.map((n) => n.attr);\n      };\n      const relevantManifests = getOnlyDeclaredDependenciesManifests();\n      // @ts-ignore TODO: fix this\n      await this.harmony.load(relevantManifests);\n    } catch (e: any) {\n      const ids = extensionsManifests.map((manifest) => manifest.id || 'unknown');\n      // TODO: improve texts\n      const errorMsg = e.message.split('\\n')[0];\n      const warning = UNABLE_TO_LOAD_EXTENSION_FROM_LIST(ids, errorMsg);\n      this.logger.error(warning, e);\n      if (this.logger.isLoaderStarted) {\n        this.logger.consoleFailure(warning);\n      } else {\n        this.logger.console(warning);\n        this.logger.console(e);\n      }\n      if (throwOnError) {\n        throw e;\n      }\n    }\n  }\n\n  private generateManifestGraph(manifests: Aspect[]) {\n    const graph = new Graph<Aspect, string>();\n    manifests.forEach((manifest) => graph.setNode(new Node(manifest.id, manifest)));\n    manifests.forEach((manifest) => {\n      const deps = manifest.getRuntime(MainRuntime)?.dependencies?.map((dep) => dep.id);\n      deps?.forEach((dep) => {\n        if (graph.node(dep)) {\n          graph.setEdge(new Edge(manifest.id, dep, 'dep'));\n        }\n      });\n    });\n    return graph;\n  }\n\n  static runtime = MainRuntime;\n  static dependencies = [LoggerAspect, EnvsAspect];\n  static slots = [\n    Slot.withType<OnAspectLoadError>(),\n    Slot.withType<OnLoadRequireableExtension>(),\n    Slot.withType<PluginDefinition[]>(),\n  ];\n\n  static async provider(\n    [loggerExt, envs]: [LoggerMain, EnvsMain],\n    config,\n    [onAspectLoadErrorSlot, onLoadRequireableExtensionSlot, pluginSlot]: [\n      OnAspectLoadErrorSlot,\n      OnLoadRequireableExtensionSlot,\n      PluginDefinitionSlot\n    ],\n    harmony: Harmony\n  ) {\n    const logger = loggerExt.createLogger(AspectLoaderAspect.id);\n    const aspectLoader = new AspectLoaderMain(\n      logger,\n      envs,\n      harmony,\n      onAspectLoadErrorSlot,\n      onLoadRequireableExtensionSlot,\n      pluginSlot\n    );\n\n    return aspectLoader;\n  }\n}\n\nAspectLoaderAspect.addRuntime(AspectLoaderMain);\n\nexport default AspectLoaderMain;\n"],"mappings":"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"}