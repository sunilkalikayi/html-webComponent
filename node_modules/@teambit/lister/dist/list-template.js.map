{"version":3,"names":["listTemplate","listScopeResults","json","showRemoteVersion","tabulateComponent","listScopeResult","id","toStringWithoutVersion","version","hasVersion","color","remoteVersion","semver","gt","c","getFormattedId","deprecated","laneReadmeOf","formattedId","white","length","forEach","laneName","yellow","data","localVersion","currentVersion","currentlyUsedVersion","toJsonComponent","map","rows","head","push","table","Table","style","row","Object","values","toString"],"sources":["list-template.ts"],"sourcesContent":["import c from 'chalk';\nimport semver from 'semver';\nimport Table from 'cli-table';\nimport { ListScopeResult } from './lister.main.runtime';\n\ntype Row = { id: string; localVersion: string; currentVersion: string; remoteVersion?: string };\n\nexport function listTemplate(listScopeResults: ListScopeResult[], json: boolean, showRemoteVersion: boolean) {\n  function tabulateComponent(listScopeResult: ListScopeResult): Row {\n    const id = listScopeResult.id.toStringWithoutVersion();\n    let version = listScopeResult.id.hasVersion() ? (listScopeResult.id.version as string) : '<new>';\n    if (!json && showRemoteVersion) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const color = listScopeResult.remoteVersion && semver.gt(listScopeResult.remoteVersion, version!) ? 'red' : null;\n      // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n      version = color ? c[color](version) : version;\n    }\n    const getFormattedId = () => {\n      const { deprecated, laneReadmeOf } = listScopeResult;\n      let formattedId = c.white(`${id}`);\n      if (deprecated) {\n        formattedId = c.white(`${formattedId} [Deprecated]`);\n      }\n      if (laneReadmeOf && laneReadmeOf.length > 0) {\n        formattedId = `${formattedId}\\n`;\n        laneReadmeOf.forEach((laneName) => {\n          formattedId = `${formattedId}${c.yellow(`[Lane Readme]: ${laneName}\\n`)}`;\n        });\n      }\n      return formattedId;\n    };\n\n    const data: Row = {\n      id: getFormattedId(),\n      localVersion: version,\n      currentVersion: listScopeResult.currentlyUsedVersion || 'N/A',\n    };\n\n    if (showRemoteVersion) {\n      let remoteVersion = listScopeResult.remoteVersion || 'N/A';\n      const color =\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        listScopeResult.remoteVersion && semver.gt(listScopeResult.id.version!, listScopeResult.remoteVersion)\n          ? 'red'\n          : null;\n      remoteVersion = color ? c[color](remoteVersion) : remoteVersion;\n      data.remoteVersion = remoteVersion;\n    }\n    return data;\n  }\n\n  function toJsonComponent(listScopeResult: ListScopeResult): Record<string, any> {\n    const id = listScopeResult.id.toStringWithoutVersion();\n    const localVersion = listScopeResult.id.hasVersion() ? (listScopeResult.id.version as string) : '<new>';\n    const data = {\n      id,\n      localVersion,\n      deprecated: listScopeResult.deprecated,\n      currentVersion: listScopeResult.currentlyUsedVersion || 'N/A',\n      remoteVersion: listScopeResult.remoteVersion || 'N/A',\n    };\n    return data;\n  }\n\n  if (json) {\n    return listScopeResults.map(toJsonComponent);\n  }\n  const rows = listScopeResults.map(tabulateComponent);\n  const head = ['component ID', 'latest in scope', 'used in workspace'];\n  if (showRemoteVersion) {\n    head.push('latest in remote scope');\n  }\n\n  const table = new Table({ head, style: { head: ['cyan'] } });\n  rows.map((row) => table.push(Object.values(row)));\n  return table.toString();\n}\n"],"mappings":"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"}