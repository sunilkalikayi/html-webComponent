{"version":3,"names":["ReactRouterUI","constructor","routeSlot","routeChangeListener","Routing","url","path","action","state","undefined","navigate","replace","location","listeners","values","forEach","listener","children","renderCtx","routingMode","initialLocation","handleLocationChange","nav","static","browserInit","window","pathname","search","hash","serverInit","browser","reactClientContext","RoutingContext","reactServerContext","ServerRouting","renderRoutes","routes","setRoutingMode","routing","register","route","registerListener","provider","deps","config","routeChangeSlot","Slot","withType","UIRuntime","ReactRouterAspect","addRuntime"],"sources":["react-router.ui.runtime.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport { NavigateFunction } from 'react-router-dom';\nimport type { Location, NavigationType, RouteProps } from 'react-router-dom';\nimport { Slot, SlotRegistry } from '@teambit/harmony';\nimport { UIRuntime } from '@teambit/ui';\nimport type { SSR } from '@teambit/ui';\nimport { RouteSlot } from '@teambit/ui-foundation.ui.react-router.slot-router';\n\nimport { ReactRouterAspect } from './react-router.aspect';\nimport { RouteContext, RootRoute } from './route-context';\nimport { Routing } from './routing-method';\nimport { LocationHooks } from './LocationHooks';\n\nexport type LocationListener = (location: Location, action: NavigationType) => void;\ntype RouteChangeSlot = SlotRegistry<LocationListener>;\ntype RenderContext = { initialLocation?: string };\n\nexport class ReactRouterUI {\n  private routingMode = Routing.url;\n\n  constructor(\n    /**\n     * route slot.\n     */\n    private routeSlot: RouteSlot,\n    /**\n     *\n     */\n    private routeChangeListener: RouteChangeSlot\n  ) {}\n\n  /**\n   * render all slot routes.\n   */\n  renderRoutes(routes: RouteProps[]) {\n    return <RootRoute routeSlot={this.routeSlot} rootRoutes={routes} />;\n  }\n\n  /** decides how navigation is stored and applied.\n   * Url - updates the `window.location.pathname`.\n   * Hash - updates `window.location.hash`.\n   * InMemory - store state internally and don't update the browser.\n   */\n  setRoutingMode(routing: Routing) {\n    this.routingMode = routing;\n  }\n\n  /**\n   * register a new route.\n   */\n  register(route: RouteProps) {\n    this.routeSlot.register(route);\n    return this;\n  }\n\n  registerListener(listener: LocationListener) {\n    this.routeChangeListener.register(listener);\n  }\n\n  /**\n   * change browser location\n   */\n  navigateTo = (\n    /** destination */\n    path: Location | string,\n    /** history action to execute (pop / push / replace) */\n    action?: NavigationType\n  ) => {\n    const state = typeof path !== 'string' ? path.state : undefined;\n\n    switch (action) {\n      case 'POP':\n        return; // TBD;\n      case 'REPLACE':\n        this.navigate?.(path, { replace: true, state });\n        return;\n      case 'PUSH':\n      default:\n        this.navigate?.(path, { state });\n    }\n  };\n\n  private navigate?: NavigateFunction = undefined;\n\n  private handleLocationChange = (location: Location, action: NavigationType) => {\n    const listeners = this.routeChangeListener.values();\n    listeners.forEach((listener) => listener(location, action));\n  };\n\n  private RoutingContext = ({ children, renderCtx }: { children: ReactNode; renderCtx?: RenderContext }) => {\n    return (\n      <RouteContext reactRouterUi={this} routing={this.routingMode} location={renderCtx?.initialLocation}>\n        {children}\n        <LocationHooks\n          onLocationChange={this.handleLocationChange}\n          onNavigatorChange={(nav) => (this.navigate = nav)}\n        />\n      </RouteContext>\n    );\n  };\n\n  private ServerRouting = ({ children, renderCtx }: { children: ReactNode; renderCtx?: RenderContext }) => {\n    return (\n      <RouteContext reactRouterUi={this} routing={Routing.static} location={renderCtx?.initialLocation}>\n        {children}\n        <LocationHooks\n          onLocationChange={this.handleLocationChange}\n          onNavigatorChange={(nav) => (this.navigate = nav)}\n        />\n      </RouteContext>\n    );\n  };\n\n  public renderPlugin: SSR.RenderPlugin<RenderContext> = {\n    browserInit: () => {\n      const initialLocation = `${window.location.pathname}${window.location.search}${window.location.hash}`;\n      return { initialLocation };\n    },\n    serverInit: ({ browser }) => {\n      const initialLocation = browser?.location.url;\n      return { initialLocation };\n    },\n    reactClientContext: this.RoutingContext,\n    reactServerContext: this.ServerRouting,\n  };\n\n  static slots = [Slot.withType<RouteProps>(), Slot.withType<LocationListener>()];\n  static runtime = UIRuntime;\n\n  static async provider(deps, config, [routeSlot, routeChangeSlot]: [RouteSlot, RouteChangeSlot]) {\n    return new ReactRouterUI(routeSlot, routeChangeSlot);\n  }\n}\n\nReactRouterAspect.addRuntime(ReactRouterUI);\n"],"mappings":"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"}