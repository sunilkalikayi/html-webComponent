import { Command, CommandOptions } from '@teambit/cli';
import { ForkingMain } from '.';
export declare type ForkOptions = {
    scope?: string;
    path?: string;
    refactor?: boolean;
    skipDependencyInstallation?: boolean;
};
export declare class ForkCmd implements Command {
    private forking;
    name: string;
    description: string;
    arguments: {
        name: string;
        description: string;
    }[];
    group: string;
    skipWorkspace: boolean;
    alias: string;
    options: CommandOptions;
    example: [
        {
            cmd: 'fork teambit.base-ui/input/button ui/button';
            description: "create a component named 'ui/button' out of the remote 'input/button' component";
        }
    ];
    loader: boolean;
    migration: boolean;
    remoteOp: boolean;
    constructor(forking: ForkingMain);
    report([sourceId, targetId]: [string, string], options: ForkOptions): Promise<string>;
}
