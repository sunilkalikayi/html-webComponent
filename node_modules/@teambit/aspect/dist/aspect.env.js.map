{"version":3,"names":["tsconfig","require","AspectEnvType","AspectEnv","constructor","reactEnv","aspectLoader","__getDescriptor","type","getTsConfig","tsConfig","targetConf","merge","createTsCompiler","getTsCjsCompiler","getTester","jestConfigPath","jestModulePath","config","resolve","getCjsJestTester","getTemplateBundler","context","transformers","createTemplateWebpackBundler","getPackageJsonProps","getCjsPackageJsonProps","getNpmIgnore","patterns","CAPSULE_ARTIFACTS_DIR","isCoreEnv","component","id","toStringWithoutVersion","push","getPreviewConfig","strategyName","splitComponentBundle","getDependencies","dependencies","react","devDependencies","peerDependencies"],"sources":["aspect.env.ts"],"sourcesContent":["import { Compiler } from '@teambit/compiler';\nimport type { DependenciesEnv, PackageEnv, GetNpmIgnoreContext, PreviewEnv } from '@teambit/envs';\nimport { merge } from 'lodash';\nimport { PackageJsonProps } from '@teambit/pkg';\nimport { TsConfigSourceFile } from 'typescript';\nimport { ReactEnv } from '@teambit/react';\nimport { CAPSULE_ARTIFACTS_DIR } from '@teambit/builder';\nimport type { AspectLoaderMain } from '@teambit/aspect-loader';\nimport { Bundler, BundlerContext } from '@teambit/bundler';\nimport { WebpackConfigTransformer } from '@teambit/webpack';\nimport { Tester } from '@teambit/tester';\n\nconst tsconfig = require('./typescript/tsconfig.json');\n\nexport const AspectEnvType = 'aspect';\n\n/**\n * a component environment built for Aspects .\n */\nexport class AspectEnv implements DependenciesEnv, PackageEnv, PreviewEnv {\n  constructor(private reactEnv: ReactEnv, private aspectLoader: AspectLoaderMain) {}\n\n  icon = 'https://static.bit.dev/extensions-icons/default.svg';\n\n  async __getDescriptor() {\n    return {\n      type: AspectEnvType,\n    };\n  }\n\n  getTsConfig(tsConfig: TsConfigSourceFile) {\n    const targetConf = merge(tsconfig, tsConfig);\n    return targetConf;\n  }\n\n  // TODO: should probably use the transformer from the main runtime?\n  // TODO: this doesn't seems to work as expected, the getTsConfig is not a transformer and the react env API expect a transformers array not an object\n  createTsCompiler(tsConfig: TsConfigSourceFile): Compiler {\n    return this.reactEnv.getTsCjsCompiler(this.getTsConfig(tsConfig));\n  }\n\n  /**\n   * returns a component tester.\n   */\n  getTester(jestConfigPath: string, jestModulePath?: string): Tester {\n    const config = jestConfigPath || require.resolve('@teambit/node/jest/jest.config');\n    return this.reactEnv.getCjsJestTester(config, jestModulePath);\n  }\n\n  async getTemplateBundler(context: BundlerContext, transformers: WebpackConfigTransformer[] = []): Promise<Bundler> {\n    return this.createTemplateWebpackBundler(context, transformers);\n  }\n\n  async createTemplateWebpackBundler(\n    context: BundlerContext,\n    transformers: WebpackConfigTransformer[] = []\n  ): Promise<Bundler> {\n    return this.reactEnv.createTemplateWebpackBundler(context, transformers);\n  }\n\n  getPackageJsonProps(): PackageJsonProps {\n    return this.reactEnv.getCjsPackageJsonProps();\n  }\n\n  getNpmIgnore(context?: GetNpmIgnoreContext) {\n    // ignores only .ts files in the root directory, so d.ts files inside dists are unaffected.\n    // without this change, the package has \"index.ts\" file in the root, causing typescript to parse it instead of the\n    // d.ts files. (changing the \"types\" prop in the package.json file doesn't help).\n    const patterns = ['/*.ts', `${CAPSULE_ARTIFACTS_DIR}/`];\n\n    // In order to load the env preview template from core aspects we need it to be in the package of the core envs\n    // This is because we don't have the core envs in the local scope so we load it from the package itself in the bvm installation\n    // as this will be excluded from the package tar by default (as it's under the CAPSULE_ARTIFACTS_DIR)\n    // we want to make sure to add it for the core envs\n    if (context && this.aspectLoader.isCoreEnv(context.component.id.toStringWithoutVersion())) {\n      patterns.push(`!${CAPSULE_ARTIFACTS_DIR}/env-template`);\n    }\n    return patterns;\n  }\n\n  getPreviewConfig() {\n    return {\n      strategyName: 'component',\n      splitComponentBundle: false,\n    };\n  }\n\n  async getDependencies() {\n    return {\n      dependencies: {\n        react: '-',\n        'react-dom': '-',\n        'core-js': '^3.0.0',\n        // For aspects the babel runtime should be a runtime dep not only dev as they are compiled by babel\n        '@babel/runtime': '7.12.18',\n      },\n      // TODO: add this only if using ts\n      devDependencies: {\n        react: '-',\n        'react-dom': '-',\n        '@types/mocha': '-',\n        '@types/node': '12.20.4',\n        '@types/react': '^17.0.8',\n        '@types/react-dom': '^17.0.5',\n        '@types/jest': '^26.0.0',\n        '@types/testing-library__jest-dom': '5.9.5',\n      },\n      peerDependencies: {\n        // TODO: check if we really need react for aspects (maybe for ink support)\n        react: '^16.8.0 || ^17.0.0',\n        'react-dom': '^16.8.0 || ^17.0.0',\n      },\n    };\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAIA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAMA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AAE/C,MAAMC,aAAa,GAAG,QAAQ;;AAErC;AACA;AACA;AAFA;AAGO,MAAMC,SAAS,CAAoD;EACxEC,WAAW,CAASC,QAAkB,EAAUC,YAA8B,EAAE;IAAA,KAA5DD,QAAkB,GAAlBA,QAAkB;IAAA,KAAUC,YAA8B,GAA9BA,YAA8B;IAAA,8CAEvE,qDAAqD;EAFqB;EAIjF,MAAMC,eAAe,GAAG;IACtB,OAAO;MACLC,IAAI,EAAEN;IACR,CAAC;EACH;EAEAO,WAAW,CAACC,QAA4B,EAAE;IACxC,MAAMC,UAAU,GAAG,IAAAC,eAAK,EAACZ,QAAQ,EAAEU,QAAQ,CAAC;IAC5C,OAAOC,UAAU;EACnB;;EAEA;EACA;EACAE,gBAAgB,CAACH,QAA4B,EAAY;IACvD,OAAO,IAAI,CAACL,QAAQ,CAACS,gBAAgB,CAAC,IAAI,CAACL,WAAW,CAACC,QAAQ,CAAC,CAAC;EACnE;;EAEA;AACF;AACA;EACEK,SAAS,CAACC,cAAsB,EAAEC,cAAuB,EAAU;IACjE,MAAMC,MAAM,GAAGF,cAAc,IAAIf,OAAO,CAACkB,OAAO,CAAC,gCAAgC,CAAC;IAClF,OAAO,IAAI,CAACd,QAAQ,CAACe,gBAAgB,CAACF,MAAM,EAAED,cAAc,CAAC;EAC/D;EAEA,MAAMI,kBAAkB,CAACC,OAAuB,EAAEC,YAAwC,GAAG,EAAE,EAAoB;IACjH,OAAO,IAAI,CAACC,4BAA4B,CAACF,OAAO,EAAEC,YAAY,CAAC;EACjE;EAEA,MAAMC,4BAA4B,CAChCF,OAAuB,EACvBC,YAAwC,GAAG,EAAE,EAC3B;IAClB,OAAO,IAAI,CAAClB,QAAQ,CAACmB,4BAA4B,CAACF,OAAO,EAAEC,YAAY,CAAC;EAC1E;EAEAE,mBAAmB,GAAqB;IACtC,OAAO,IAAI,CAACpB,QAAQ,CAACqB,sBAAsB,EAAE;EAC/C;EAEAC,YAAY,CAACL,OAA6B,EAAE;IAC1C;IACA;IACA;IACA,MAAMM,QAAQ,GAAG,CAAC,OAAO,EAAG,GAAEC,gCAAsB,GAAE,CAAC;;IAEvD;IACA;IACA;IACA;IACA,IAAIP,OAAO,IAAI,IAAI,CAAChB,YAAY,CAACwB,SAAS,CAACR,OAAO,CAACS,SAAS,CAACC,EAAE,CAACC,sBAAsB,EAAE,CAAC,EAAE;MACzFL,QAAQ,CAACM,IAAI,CAAE,IAAGL,gCAAsB,eAAc,CAAC;IACzD;IACA,OAAOD,QAAQ;EACjB;EAEAO,gBAAgB,GAAG;IACjB,OAAO;MACLC,YAAY,EAAE,WAAW;MACzBC,oBAAoB,EAAE;IACxB,CAAC;EACH;EAEA,MAAMC,eAAe,GAAG;IACtB,OAAO;MACLC,YAAY,EAAE;QACZC,KAAK,EAAE,GAAG;QACV,WAAW,EAAE,GAAG;QAChB,SAAS,EAAE,QAAQ;QACnB;QACA,gBAAgB,EAAE;MACpB,CAAC;MACD;MACAC,eAAe,EAAE;QACfD,KAAK,EAAE,GAAG;QACV,WAAW,EAAE,GAAG;QAChB,cAAc,EAAE,GAAG;QACnB,aAAa,EAAE,SAAS;QACxB,cAAc,EAAE,SAAS;QACzB,kBAAkB,EAAE,SAAS;QAC7B,aAAa,EAAE,SAAS;QACxB,kCAAkC,EAAE;MACtC,CAAC;MACDE,gBAAgB,EAAE;QAChB;QACAF,KAAK,EAAE,oBAAoB;QAC3B,WAAW,EAAE;MACf;IACF,CAAC;EACH;AACF;AAAC"}