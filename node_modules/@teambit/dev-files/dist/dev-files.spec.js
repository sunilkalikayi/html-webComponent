"use strict";

function _chai() {
  const data = require("chai");
  _chai = function () {
    return data;
  };
  return data;
}
function _devFiles() {
  const data = require("./dev-files");
  _devFiles = function () {
    return data;
  };
  return data;
}
describe('DevFiles', () => {
  let devFiles = new (_devFiles().DevFiles)({});
  beforeEach(() => {
    devFiles = new (_devFiles().DevFiles)({
      'teambit.defender/tester': ['button.spec.tsx'],
      'teambit.compositions/compositions': ['button.composition.tsx'],
      'teambit.docs/docs': ['button.docs.ts']
    });
  });
  describe('get()', () => {
    it('get all dev files of the docs aspect', () => {
      (0, _chai().expect)(devFiles.get('teambit.docs/docs')).to.deep.eq(['button.docs.ts']);
    });
    it('should get undefined as there are no files for aspect id', () => {
      (0, _chai().expect)(devFiles.get('teambit.compositions')).to.deep.eq([]);
    });
  });
  describe('list()', () => {
    it('should list all dev files', () => {
      const allFiles = devFiles.list();
      (0, _chai().expect)(allFiles).to.include.deep.eq(['button.spec.tsx', 'button.composition.tsx', 'button.docs.ts']);
    });
  });
});

//# sourceMappingURL=dev-files.spec.js.map