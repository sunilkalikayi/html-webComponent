"use strict";

require("core-js/modules/es.array.iterator.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DevFiles = void 0;
function _lodash() {
  const data = require("lodash");
  _lodash = function () {
    return data;
  };
  return data;
}
class DevFiles {
  constructor(raw) {
    this.raw = raw;
  }

  /**
   * get all dev files of an aspect (for example: teambit.defender/tester)
   */
  get(aspectId) {
    return this.raw[aspectId] || [];
  }
  toTupleArray() {
    return (0, _lodash().flatten)(Object.entries(this.raw).map(([aspectId, files]) => {
      return files.map(file => [file, aspectId]);
    }));
  }

  /**
   * list all dev files.
   */
  list() {
    return (0, _lodash().flatten)(Object.values(this.raw));
  }

  /**
   * determine whether a file is included in the dev files.
   * @param filePath
   */
  includes(filePath) {
    return this.list().includes(filePath);
  }

  /**
   * return a plain object with all dev files.
   */
  toObject() {
    return this.raw;
  }

  /**
   * serialize all dev files into a JSON string.
   */
  toString(pretty = false) {
    return JSON.stringify(this.toObject(), null, pretty ? 2 : 0);
  }
}
exports.DevFiles = DevFiles;

//# sourceMappingURL=dev-files.js.map