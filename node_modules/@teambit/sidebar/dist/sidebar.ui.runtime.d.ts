import { ComponentModel } from '@teambit/component';
import { SlotRegistry } from '@teambit/harmony';
import { ComponentType } from 'react';
import type { DrawerType } from '@teambit/ui-foundation.ui.tree.drawer';
import { SideBarProps } from './ui';
export declare type ComponentTypeProps = {
    component: ComponentModel;
};
export declare type SidebarItem = {
    weight?: number;
    component?: ComponentType;
};
export declare type SidebarItemSlot = SlotRegistry<SidebarItem[]>;
export declare type DrawerSlot = SlotRegistry<DrawerType[]>;
export declare class SidebarUI {
    private drawerSlot;
    constructor(drawerSlot: DrawerSlot);
    /**
     * register a new drawer into the component sidebar.
     */
    registerDrawer(...drawer: DrawerType[]): this;
    /**
     * render the sidebar.
     */
    render: (props: Partial<SideBarProps>) => JSX.Element;
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    static slots: ((registerFn: () => string) => SlotRegistry<DrawerType>)[];
    static dependencies: never[];
    static provider(deps: any, config: any, [drawerSlot]: [DrawerSlot]): Promise<SidebarUI>;
}
