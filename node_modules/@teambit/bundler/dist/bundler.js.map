{"version":3,"names":[],"sources":["bundler.ts"],"sourcesContent":["import { Component } from '@teambit/component';\n\nexport interface DevServer {\n  start(): void;\n}\n\nexport type Asset = {\n  /**\n   * name of the asset.\n   */\n  name: string;\n\n  /**\n   * size of the asset in bytes.\n   */\n  size: number;\n\n  /**\n   * size of the compressed asset in bytes.\n   */\n  compressedSize?: number;\n};\n\nexport type ChunksAssetsMap = {\n  [assetName: string]: string[];\n};\n\nexport type EntryAssets = {\n  assets: Asset[];\n  auxiliaryAssets: Asset[];\n  assetsSize: number;\n  compressedAssetsSize?: number;\n  auxiliaryAssetsSize: number;\n  compressedAuxiliaryAssetsSize: number;\n};\n\nexport type EntriesAssetsMap = {\n  [entryId: string]: EntryAssets;\n};\n\nexport type BundlerResult = {\n  /**\n   * list of generated assets.\n   */\n  assets: Asset[];\n\n  /**\n   * A map of assets names for each chunk\n   */\n  assetsByChunkName?: ChunksAssetsMap;\n\n  /**\n   * A map of assets for each entry point\n   */\n  entriesAssetsMap?: EntriesAssetsMap;\n\n  /**\n   * errors thrown during the bundling process.\n   */\n  errors: Error[];\n\n  /**\n   * warnings thrown during the bundling process.\n   */\n  warnings: string[];\n\n  /**\n   * components included in the bundling process.\n   */\n  components: Component[];\n\n  /**\n   * timestamp in milliseconds when the task started\n   */\n  startTime?: number;\n\n  /**\n   * timestamp in milliseconds when the task ended\n   */\n  endTime?: number;\n\n  /**\n   * out put path of the Bundler Result\n   */\n  outputPath?: string;\n};\n\nexport interface Bundler {\n  run(): Promise<BundlerResult[]>;\n}\n\nexport type BundlerMode = 'dev' | 'prod';\n"],"mappings":""}