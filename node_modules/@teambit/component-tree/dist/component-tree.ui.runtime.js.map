{"version":3,"names":["ComponentTreeUI","constructor","treeNodeSlot","registerTreeNode","treeNode","register","provider","deps","config","UIRuntime","Slot","withType","ComponentTreeAspect","addRuntime"],"sources":["component-tree.ui.runtime.tsx"],"sourcesContent":["import { Slot, SlotRegistry } from '@teambit/harmony';\nimport { UIRuntime } from '@teambit/ui';\n\nimport { ComponentTreeNode } from './component-tree-node';\nimport { ComponentTreeAspect } from './component-tree.aspect';\n\nexport type ComponentTreeSlot = SlotRegistry<ComponentTreeNode>;\n\nexport class ComponentTreeUI {\n  constructor(private treeNodeSlot: ComponentTreeSlot) {}\n\n  registerTreeNode(treeNode: ComponentTreeNode) {\n    this.treeNodeSlot.register(treeNode);\n    return this;\n  }\n\n  static runtime = UIRuntime;\n\n  static slots = [Slot.withType<ComponentTreeNode>()];\n\n  static dependencies = [];\n\n  static async provider(deps, config, [treeNodeSlot]: [ComponentTreeSlot]) {\n    return new ComponentTreeUI(treeNodeSlot);\n  }\n}\n\nComponentTreeAspect.addRuntime(ComponentTreeUI);\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAIO,MAAMA,eAAe,CAAC;EAC3BC,WAAW,CAASC,YAA+B,EAAE;IAAA,KAAjCA,YAA+B,GAA/BA,YAA+B;EAAG;EAEtDC,gBAAgB,CAACC,QAA2B,EAAE;IAC5C,IAAI,CAACF,YAAY,CAACG,QAAQ,CAACD,QAAQ,CAAC;IACpC,OAAO,IAAI;EACb;EAQA,aAAaE,QAAQ,CAACC,IAAI,EAAEC,MAAM,EAAE,CAACN,YAAY,CAAsB,EAAE;IACvE,OAAO,IAAIF,eAAe,CAACE,YAAY,CAAC;EAC1C;AACF;AAAC;AAAA,gCAjBYF,eAAe,aAQTS,eAAS;AAAA,gCARfT,eAAe,WAUX,CAACU,eAAI,CAACC,QAAQ,EAAqB,CAAC;AAAA,gCAVxCX,eAAe,kBAYJ,EAAE;AAO1BY,oCAAmB,CAACC,UAAU,CAACb,eAAe,CAAC"}