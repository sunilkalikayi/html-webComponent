{"version":3,"names":["CheckoutCmd","constructor","checkout","name","description","COMPONENT_PATTERN_HELP","report","to","componentPattern","interactiveMerge","ours","theirs","manual","reset","all","verbose","skipNpmInstall","skipDependencyInstallation","BitError","console","log","chalk","yellow","checkoutProps","promptMergeOptions","mergeStrategy","getMergeStrategy","isLane","components","version","failedComponents","leftUnresolvedConflicts","checkoutByCLIValues","isLatest","isReset","getFailureOutput","realFailedComponents","filter","f","unchangedLegitimately","length","title","body","map","failedComponent","bold","id","toString","red","failureMessage","join","getNeutralOutput","neutralComponents","green","getConflictSummary","suggestion","underline","conflictSummaryReport","getSuccessfulOutput","component","componentName","toStringWithoutVersion","applyVersionReport","versionOutput","showVersion","componentsStr"],"sources":["checkout-cmd.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { BitError } from '@teambit/bit-error';\nimport { Command, CommandOptions } from '@teambit/cli';\nimport { COMPONENT_PATTERN_HELP } from '@teambit/legacy/dist/constants';\nimport {\n  ApplyVersionResults,\n  getMergeStrategy,\n  applyVersionReport,\n  conflictSummaryReport,\n} from '@teambit/legacy/dist/consumer/versions-ops/merge-version';\nimport { CheckoutMain, CheckoutProps } from './checkout.main.runtime';\n\nexport class CheckoutCmd implements Command {\n  name = 'checkout <to> [component-pattern]';\n  arguments = [\n    {\n      name: 'to',\n      description:\n        \"permitted values: [head, reset, specific-version]. 'head' - last snap/tag. 'reset' - removes local changes\",\n    },\n    {\n      name: 'component-pattern',\n      description: COMPONENT_PATTERN_HELP,\n    },\n  ];\n  description = 'switch between component versions or remove local changes';\n  group = 'development';\n  extendedDescription = `\n  \\`bit checkout <version> [component-pattern]\\` => checkout the specified ids (or all components when --all is used) to the specified version\n  \\`bit checkout head [component-pattern]\\` => checkout to the last snap/tag, omit [component-pattern] to checkout head for all\n  \\`bit checkout reset [component-pattern]\\` => remove local modifications from the specified ids (or all components when --all is used)`;\n  alias = 'U';\n  options = [\n    [\n      'i',\n      'interactive-merge',\n      'when a component is modified and the merge process found conflicts, display options to resolve them',\n    ],\n    ['o', 'ours', 'in case of a conflict, override the used version with the current modification'],\n    ['t', 'theirs', 'in case of a conflict, override the current modification with the specified version'],\n    ['m', 'manual', 'in case of a conflict, leave the files with a conflict state to resolve them manually later'],\n    ['r', 'reset', 'revert changes that were not snapped/tagged'],\n    ['a', 'all', 'all components'],\n    ['v', 'verbose', 'showing verbose output for inspection'],\n    ['', 'reset', 'DEPRECATED. run \"bit checkout reset\" instead'],\n    ['', 'skip-npm-install', 'DEPRECATED. use \"--skip-dependency-installation\" instead'],\n    ['', 'skip-dependency-installation', 'do not install packages of the imported components'],\n  ] as CommandOptions;\n  loader = true;\n\n  constructor(private checkout: CheckoutMain) {}\n\n  async report(\n    [to, componentPattern]: [string, string],\n    {\n      interactiveMerge = false,\n      ours = false,\n      theirs = false,\n      manual = false,\n      reset = false,\n      all = false,\n      verbose = false,\n      skipNpmInstall = false,\n      skipDependencyInstallation = false,\n    }: {\n      interactiveMerge?: boolean;\n      ours?: boolean;\n      theirs?: boolean;\n      manual?: boolean;\n      reset?: boolean;\n      all?: boolean;\n      verbose?: boolean;\n      skipNpmInstall?: boolean;\n      skipDependencyInstallation?: boolean;\n    }\n  ) {\n    if (reset) {\n      throw new BitError(`--reset flag has been removed. please run \"bit checkout reset\" instead`);\n    }\n    if (skipNpmInstall) {\n      // eslint-disable-next-line no-console\n      console.log(\n        chalk.yellow(`\"--skip-npm-install\" has been deprecated, please use \"--skip-dependency-installation\" instead`)\n      );\n      skipDependencyInstallation = true;\n    }\n    const checkoutProps: CheckoutProps = {\n      promptMergeOptions: interactiveMerge,\n      mergeStrategy: getMergeStrategy(ours, theirs, manual),\n      all,\n      verbose,\n      isLane: false,\n      skipNpmInstall: skipDependencyInstallation,\n    };\n    const { components, version, failedComponents, leftUnresolvedConflicts }: ApplyVersionResults =\n      await this.checkout.checkoutByCLIValues(to, componentPattern || '', checkoutProps);\n    const isLatest = to === 'head';\n    const isReset = to === 'reset';\n    const getFailureOutput = () => {\n      // components that failed for no legitimate reason. e.g. merge-conflict.\n      const realFailedComponents = failedComponents?.filter((f) => !f.unchangedLegitimately);\n      if (!realFailedComponents || !realFailedComponents.length) return '';\n      const title = 'the checkout has been canceled on the following component(s)';\n      const body = realFailedComponents\n        .map(\n          (failedComponent) =>\n            `${chalk.bold(failedComponent.id.toString())} - ${chalk.red(failedComponent.failureMessage)}`\n        )\n        .join('\\n');\n      return `${title}\\n${body}\\n\\n`;\n    };\n    const getNeutralOutput = () => {\n      // components that weren't checked out for legitimate reasons, e.g. up-to-date.\n      const neutralComponents = (failedComponents || []).filter((f) => f.unchangedLegitimately);\n      if (!neutralComponents.length) return '';\n      if (!verbose && all) {\n        return chalk.green(\n          `checkout was not needed for ${chalk.bold(\n            neutralComponents.length.toString()\n          )} components (use --verbose to get more details)\\n`\n        );\n      }\n\n      const title = 'the checkout was not needed on the following component(s)';\n      const body = neutralComponents\n        .map((failedComponent) => `${chalk.bold(failedComponent.id.toString())} - ${failedComponent.failureMessage}`)\n        .join('\\n');\n      return `${title}\\n${body}\\n\\n`;\n    };\n    const getConflictSummary = () => {\n      if (!components || !components.length || !leftUnresolvedConflicts) return '';\n      const title = `\\n\\nfiles with conflicts summary\\n`;\n      const suggestion = `\\n\\nfix the conflicts above manually and then run \"bit install\" and \"bit compile\".\nonce ready, snap/tag the components to persist the changes`;\n      return chalk.underline(title) + conflictSummaryReport(components) + chalk.yellow(suggestion);\n    };\n\n    const getSuccessfulOutput = () => {\n      if (!components || !components.length) return '';\n      if (components.length === 1) {\n        const component = components[0];\n        const componentName = isReset ? component.id.toString() : component.id.toStringWithoutVersion();\n        if (isReset) return `successfully reset ${chalk.bold(componentName)}\\n`;\n        const title = `successfully switched ${chalk.bold(componentName)} to version ${chalk.bold(\n          // $FlowFixMe version is defined when !isReset\n          // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n          isLatest ? component.id.version : version\n        )}\\n`;\n        return `${title} ${applyVersionReport(components, false)}`;\n      }\n      if (isReset) {\n        const title = 'successfully reset the following components\\n\\n';\n        const body = components.map((component) => chalk.bold(component.id.toString())).join('\\n');\n        return title + body;\n      }\n      // $FlowFixMe version is defined when !isReset\n      // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n      const versionOutput = isLatest ? 'their latest version' : `version ${chalk.bold(version)}`;\n      const title = `successfully switched the following components to ${versionOutput}\\n\\n`;\n      const showVersion = isLatest || isReset;\n      const componentsStr = applyVersionReport(components, true, showVersion);\n      return title + componentsStr;\n    };\n\n    return getFailureOutput() + getNeutralOutput() + getSuccessfulOutput() + getConflictSummary();\n  }\n}\n"],"mappings":"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"}