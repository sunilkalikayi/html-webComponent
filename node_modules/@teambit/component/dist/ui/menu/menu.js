"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.regexp.exec.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ComponentMenu = ComponentMenu;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _reactRouterDom() {
  const data = require("react-router-dom");
  _reactRouterDom = function () {
    return data;
  };
  return data;
}
function _uiFoundationUi() {
  const data = require("@teambit/ui-foundation.ui.main-dropdown");
  _uiFoundationUi = function () {
    return data;
  };
  return data;
}
function _componentUi() {
  const data = require("@teambit/component.ui.version-dropdown");
  _componentUi = function () {
    return data;
  };
  return data;
}
function _uiFoundationUi2() {
  const data = require("@teambit/ui-foundation.ui.full-loader");
  _uiFoundationUi2 = function () {
    return data;
  };
  return data;
}
function _baseReactNavigation() {
  const data = require("@teambit/base-react.navigation.link");
  _baseReactNavigation = function () {
    return data;
  };
  return data;
}
function _lodash() {
  const data = require("lodash");
  _lodash = function () {
    return data;
  };
  return data;
}
function _classnames() {
  const data = _interopRequireDefault(require("classnames"));
  _classnames = function () {
    return data;
  };
  return data;
}
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _uiFoundationUiUseBox() {
  const data = require("@teambit/ui-foundation.ui.use-box.dropdown");
  _uiFoundationUiUseBox = function () {
    return data;
  };
  return data;
}
function _lanesHooks() {
  const data = require("@teambit/lanes.hooks.use-lanes");
  _lanesHooks = function () {
    return data;
  };
  return data;
}
function _uiFoundationUiUseBox2() {
  const data = require("@teambit/ui-foundation.ui.use-box.menu");
  _uiFoundationUiUseBox2 = function () {
    return data;
  };
  return data;
}
function _useComponent() {
  const data = require("../use-component");
  _useComponent = function () {
    return data;
  };
  return data;
}
function _menuNav() {
  const data = require("./menu-nav");
  _menuNav = function () {
    return data;
  };
  return data;
}
function _mobileMenuNav() {
  const data = require("./mobile-menu-nav");
  _mobileMenuNav = function () {
    return data;
  };
  return data;
}
function _menuModule() {
  const data = _interopRequireDefault(require("./menu.module.scss"));
  _menuModule = function () {
    return data;
  };
  return data;
}
function _useComponentFromLocation() {
  const data = require("../use-component-from-location");
  _useComponentFromLocation = function () {
    return data;
  };
  return data;
}
function _() {
  const data = require("../..");
  _ = function () {
    return data;
  };
  return data;
}
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2().default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function getComponentIdStr(componentIdStr) {
  if ((0, _lodash().isFunction)(componentIdStr)) return componentIdStr();
  return componentIdStr;
}
/**
 * top bar menu.
 */
function ComponentMenu({
  navigationSlot,
  widgetSlot,
  className,
  host,
  menuItemSlot,
  consumeMethodSlot,
  componentIdStr,
  useComponent,
  path,
  useComponentFilters
}) {
  const idFromLocation = (0, _useComponentFromLocation().useIdFromLocation)();
  const _componentIdStr = getComponentIdStr(componentIdStr);
  const componentId = _componentIdStr ? _().ComponentID.fromString(_componentIdStr) : undefined;
  const resolvedComponentIdStr = path || idFromLocation;
  const useComponentOptions = {
    logFilters: useComponentFilters === null || useComponentFilters === void 0 ? void 0 : useComponentFilters(),
    customUseComponent: useComponent
  };
  const {
    component
  } = (0, _useComponent().useComponent)(host, (componentId === null || componentId === void 0 ? void 0 : componentId.toString()) || idFromLocation, useComponentOptions);
  const mainMenuItems = (0, _react().useMemo)(() => (0, _lodash().groupBy)((0, _lodash().flatten)(menuItemSlot.values()), 'category'), [menuItemSlot]);
  if (!component) return /*#__PURE__*/_react().default.createElement(_uiFoundationUi2().FullLoader, null);
  return /*#__PURE__*/_react().default.createElement(_reactRouterDom().Routes, null, /*#__PURE__*/_react().default.createElement(_reactRouterDom().Route, {
    path: `${resolvedComponentIdStr}/*`,
    element: /*#__PURE__*/_react().default.createElement("div", {
      className: (0, _classnames().default)(_menuModule().default.topBar, className)
    }, /*#__PURE__*/_react().default.createElement("div", {
      className: _menuModule().default.leftSide
    }, /*#__PURE__*/_react().default.createElement(_menuNav().MenuNav, {
      navigationSlot: navigationSlot
    }), /*#__PURE__*/_react().default.createElement(_mobileMenuNav().MobileMenuNav, {
      navigationSlot: navigationSlot,
      widgetSlot: widgetSlot
    })), /*#__PURE__*/_react().default.createElement("div", {
      className: _menuModule().default.rightSide
    }, /*#__PURE__*/_react().default.createElement("div", {
      className: _menuModule().default.widgets
    }, /*#__PURE__*/_react().default.createElement(_menuNav().MenuNav, {
      navigationSlot: widgetSlot
    })), /*#__PURE__*/_react().default.createElement(VersionRelatedDropdowns, {
      component: component,
      consumeMethods: consumeMethodSlot,
      host: host
    }), /*#__PURE__*/_react().default.createElement(_uiFoundationUi().MainDropdown, {
      menuItems: mainMenuItems
    })))
  }));
}
function VersionRelatedDropdowns({
  component,
  consumeMethods,
  host
}) {
  var _lanesModel$viewedLan, _lanesModel$viewedLan2, _lanesModel$getLanesB;
  const location = (0, _baseReactNavigation().useLocation)();
  const {
    lanesModel
  } = (0, _lanesHooks().useLanes)();
  const currentLane = lanesModel !== null && lanesModel !== void 0 && (_lanesModel$viewedLan = lanesModel.viewedLane) !== null && _lanesModel$viewedLan !== void 0 && _lanesModel$viewedLan.id && !(lanesModel !== null && lanesModel !== void 0 && (_lanesModel$viewedLan2 = lanesModel.viewedLane) !== null && _lanesModel$viewedLan2 !== void 0 && _lanesModel$viewedLan2.id.isDefault()) ? lanesModel.viewedLane : undefined;
  const {
    logs
  } = component;
  const isWorkspace = host === 'teambit.workspace/workspace';
  const snaps = (0, _react().useMemo)(() => {
    return (logs || []).filter(log => !log.tag).map(snap => _objectSpread(_objectSpread({}, snap), {}, {
      version: snap.hash
    }));
  }, [logs]);
  const tags = (0, _react().useMemo)(() => {
    var _component$tags;
    const tagLookup = new Map();
    (logs || []).filter(log => log.tag).forEach(tag => {
      tagLookup.set(tag === null || tag === void 0 ? void 0 : tag.tag, tag);
    });
    return (0, _lodash().compact)((_component$tags = component.tags) === null || _component$tags === void 0 ? void 0 : _component$tags.toArray().reverse().map(tag => tagLookup.get(tag.version.version))).map(tag => _objectSpread(_objectSpread({}, tag), {}, {
      version: tag.tag
    }));
  }, [logs]);
  const isNew = snaps.length === 0 && tags.length === 0;
  const lanes = (lanesModel === null || lanesModel === void 0 ? void 0 : (_lanesModel$getLanesB = lanesModel.getLanesByComponentId(component.id)) === null || _lanesModel$getLanesB === void 0 ? void 0 : _lanesModel$getLanesB.filter(lane => !lane.id.isDefault())) || [];
  const localVersion = isWorkspace && !isNew && !currentLane;
  const currentVersion = isWorkspace && !isNew && !(location !== null && location !== void 0 && location.search.includes('version')) ? 'workspace' : component.version;
  const methods = useConsumeMethods(consumeMethods, component, currentLane);
  return /*#__PURE__*/_react().default.createElement(_react().default.Fragment, null, tags.length > 0 && /*#__PURE__*/_react().default.createElement(_uiFoundationUiUseBox().UseBoxDropdown, {
    position: "bottom-end",
    className: _menuModule().default.useBox,
    Menu: /*#__PURE__*/_react().default.createElement(_uiFoundationUiUseBox2().Menu, {
      methods: methods,
      componentName: component.id.name
    })
  }), /*#__PURE__*/_react().default.createElement(_componentUi().VersionDropdown, {
    tags: tags,
    snaps: snaps,
    lanes: lanes,
    localVersion: localVersion,
    currentVersion: currentVersion,
    latestVersion: component.latest,
    currentLane: currentLane,
    menuClassName: _menuModule().default.componentVersionMenu
  }));
}
function useConsumeMethods(consumeMethods, componentModel, currentLane) {
  return (0, _react().useMemo)(() => (0, _lodash().flatten)(consumeMethods.values()).map(method => {
    return method === null || method === void 0 ? void 0 : method(componentModel, {
      currentLane
    });
  }).filter(x => !!x && x.Component && x.Title), [consumeMethods, componentModel, currentLane]);
}

//# sourceMappingURL=menu.js.map