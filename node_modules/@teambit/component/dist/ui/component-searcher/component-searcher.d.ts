import { ComponentModel } from '@teambit/component';
import { SearchResult, FuzzySearchItem, FuzzySearcher } from '@teambit/explorer.ui.command-bar';
import type { SearchProvider } from '@teambit/command-bar';
import { ComponentResultPlugin } from './component-result';
export type { ComponentResultPlugin };
declare type ComponentSearchIdx = {
    name: string;
    displayName: string;
    component: ComponentModel;
};
declare type ComponentSearcherOptions = {
    navigate: (path: string) => void;
    resultPlugins?: ComponentResultPlugin[];
};
export declare class ComponentSearcher extends FuzzySearcher<ComponentModel, ComponentSearchIdx> implements SearchProvider {
    options: ComponentSearcherOptions;
    constructor(options: ComponentSearcherOptions);
    updatePlugins(plugins: ComponentResultPlugin[]): void;
    test(term: string): boolean;
    protected toSearchableItem(item: ComponentModel): ComponentSearchIdx;
    protected toSearchResult: ({ item }: FuzzySearchItem<ComponentSearchIdx>) => SearchResult;
}
