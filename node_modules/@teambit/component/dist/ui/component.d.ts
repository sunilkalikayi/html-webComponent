import { ReactNode } from 'react';
import { RouteSlot } from '@teambit/ui-foundation.ui.react-router.slot-router';
import { SlotRegistry } from '@teambit/harmony';
import { UseComponentType } from './use-component';
import { ComponentModel } from './component-model';
import { Filters } from './use-component-query';
export declare type ComponentPageSlot = SlotRegistry<ComponentPageElement[]>;
export declare type ComponentPageElement = {
    type: 'before' | 'after';
    content: ReactNode;
};
export declare type ComponentProps = {
    containerSlot?: ComponentPageSlot;
    routeSlot: RouteSlot;
    host: string;
    onComponentChange?: (activeComponent?: ComponentModel) => void;
    useComponent?: UseComponentType;
    useComponentFilters?: () => Filters;
    path?: string;
    componentIdStr?: string | (() => string | undefined);
};
/**
 * main UI component of the Component extension.
 */
export declare function Component({ routeSlot, containerSlot, host, onComponentChange, componentIdStr, useComponent, path, useComponentFilters, }: ComponentProps): JSX.Element;
