"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ComponentRoute = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
class ComponentRoute {
  constructor(registerRoute, componentExtension) {
    this.registerRoute = registerRoute;
    this.componentExtension = componentExtension;
    (0, _defineProperty2().default)(this, "dynamicRouteRegex", '/?[^/@]+/[^~]*');
    (0, _defineProperty2().default)(this, "route", `/:componentId(${this.dynamicRouteRegex})/~aspect${this.registerRoute.route}`);
    (0, _defineProperty2().default)(this, "method", this.registerRoute.method);
    (0, _defineProperty2().default)(this, "middlewares", this.componentMiddlewares.concat(this.registerRoute.middlewares));
  }
  get componentMiddlewares() {
    return [async (req, res, next) => {
      var _this$registerRoute$r;
      const resolveComponent = (_this$registerRoute$r = this.registerRoute.resolveComponent) !== null && _this$registerRoute$r !== void 0 ? _this$registerRoute$r : true;
      if (resolveComponent) {
        const {
          componentId
        } = req.params;
        const host = this.componentExtension.getHost();
        const compId = await host.resolveComponentId(componentId);
        const component = await host.get(compId);
        // @ts-ignore
        req.component = component;
      }
      next();
    }];
  }
}
exports.ComponentRoute = ComponentRoute;

//# sourceMappingURL=component.route.js.map