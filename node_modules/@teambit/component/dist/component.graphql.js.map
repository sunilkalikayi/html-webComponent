{"version":3,"names":["componentSchema","componentExtension","typeDefs","gql","resolvers","JSONObject","GraphQLJSONObject","Component","id","component","toObject","displayName","fs","state","filesystem","files","map","file","relative","getFile","path","maybeFile","find","pathNormalizeToLinux","undefined","contents","toString","mainFile","_consumer","headTag","latest","tags","toArray","tag","aspects","include","filter","serialize","logs","head","takeHeadFromComponent","version","finalFilter","getLogs","log","hash","ComponentHost","get","host","componentId","resolveComponentId","error","snaps","list","listInvalid","invalidComps","err","errorName","name","errorMessage","message","stripAnsi","Query","getHost","componentExt"],"sources":["component.graphql.ts"],"sourcesContent":["import stripAnsi from 'strip-ansi';\nimport gql from 'graphql-tag';\nimport { GraphQLJSONObject } from 'graphql-type-json';\nimport { pathNormalizeToLinux } from '@teambit/legacy/dist/utils';\nimport { Component } from './component';\nimport { ComponentFactory } from './component-factory';\nimport { ComponentMain } from './component.main.runtime';\n\nexport function componentSchema(componentExtension: ComponentMain) {\n  return {\n    typeDefs: gql`\n      scalar JSON\n      scalar JSONObject\n\n      type ComponentID {\n        name: String!\n        version: String\n        scope: String\n      }\n\n      type Tag {\n        # semver assigned to the tag.\n        version: String!\n\n        # tag hash.\n        hash: String!\n      }\n\n      type Snap {\n        # hash of the snapshot.\n        hash: String!\n\n        # time of the snapshot.\n        timestamp: String!\n\n        # parents of the snap\n        parents: [String]!\n\n        # snapper\n        author: Author!\n\n        # snapshot message\n        message: String\n      }\n\n      type LogEntry {\n        message: String!\n        username: String\n        parents: [String]!\n        email: String\n        date: String\n        hash: String!\n        tag: String\n        id: String!\n      }\n\n      type Author {\n        # display name of the snapper.\n        displayName: String!\n\n        # author of the snapper.\n        email: String!\n      }\n\n      type Component {\n        # id of the component.\n        id: ComponentID!\n\n        # head snap of the component.\n        head: Snap\n\n        # head tag of the component.\n        headTag: Tag\n\n        # list of all relative component paths.\n        fs: [String]\n\n        # relative path to the main file of the component\n        mainFile: String\n\n        # return specific file contents by relative file path.\n        getFile(path: String): String\n\n        # latest version of the component.\n        latest: String\n\n        # display name of the component\n        displayName: String!\n\n        # component buildStatus\n        buildStatus: String\n\n        # list of component releases.\n        tags: [Tag]!\n\n        \"\"\"\n        component logs\n        \"\"\"\n        logs(\n          \"\"\"\n          type of logs to show (tag or snap)\n          \"\"\"\n          type: String\n          offset: Int\n          limit: Int\n          \"\"\"\n          head to start traversing logs from\n          \"\"\"\n          head: String\n          sort: String\n          \"\"\"\n          start traversing logs from the fetched component's head\n          \"\"\"\n          takeHeadFromComponent: Boolean\n        ): [LogEntry]!\n\n        aspects(include: [String]): [Aspect]\n      }\n\n      type Aspect {\n        id: String!\n        icon: String\n        config: JSONObject\n        data: JSONObject\n      }\n\n      type InvalidComponent {\n        id: ComponentID!\n        errorName: String!\n        errorMessage: String!\n      }\n\n      type ComponentHost {\n        id: ID!\n        name: String!\n\n        # load a component.\n        get(id: String!, withState: Boolean): Component\n\n        # list components\n        list(offset: Int, limit: Int): [Component]!\n\n        # list invalid components and their errors\n        listInvalid: [InvalidComponent]!\n\n        # get component logs(snaps) by component id\n        snaps(id: String!): [LogEntry]! @deprecated(reason: \"Use the logs field on Component\")\n      }\n\n      type Query {\n        getHost(id: String): ComponentHost\n      }\n    `,\n    resolvers: {\n      JSONObject: GraphQLJSONObject,\n      Component: {\n        id: (component: Component) => component.id.toObject(),\n        displayName: (component: Component) => component.displayName,\n        fs: (component: Component) => {\n          return component.state.filesystem.files.map((file) => file.relative);\n        },\n        getFile: (component: Component, { path }: { path: string }) => {\n          const maybeFile = component.state.filesystem.files.find(\n            (file) => pathNormalizeToLinux(file.relative) === path\n          );\n          if (!maybeFile) return undefined;\n          return maybeFile.contents.toString('utf-8');\n        },\n        mainFile: (component: Component) => {\n          return component.state._consumer.mainFile;\n        },\n        headTag: (component: Component) => component.headTag?.toObject(),\n        latest: (component: Component) => component.latest,\n        tags: (component) => {\n          // graphql doesn't support map types\n          return component.tags.toArray().map((tag) => tag.toObject());\n        },\n        aspects: (component: Component, { include }: { include?: string[] }) => {\n          return component.state.aspects.filter(include).serialize();\n        },\n        logs: async (\n          component: Component,\n          filter?: {\n            type?: string;\n            offset?: number;\n            limit?: number;\n            head?: string;\n            sort?: string;\n            takeHeadFromComponent: boolean;\n          }\n        ) => {\n          let head = filter?.head;\n          if (!head && filter?.takeHeadFromComponent) {\n            head = component.id.version;\n          }\n          const finalFilter = { ...filter, ...{ head } };\n          return (await component.getLogs(finalFilter)).map((log) => ({ ...log, id: log.hash }));\n        },\n      },\n      ComponentHost: {\n        get: async (host: ComponentFactory, { id }: { id: string }) => {\n          try {\n            const componentId = await host.resolveComponentId(id);\n            const component = await host.get(componentId);\n            return component;\n          } catch (error: any) {\n            return null;\n          }\n        },\n        snaps: async (host: ComponentFactory, { id }: { id: string }) => {\n          const componentId = await host.resolveComponentId(id);\n          // return (await host.getLogs(componentId)).map(log => ({...log, id: log.hash}))\n          return host.getLogs(componentId);\n        },\n        list: async (host: ComponentFactory, filter?: { offset: number; limit: number }) => {\n          return host.list(filter);\n        },\n        listInvalid: async (host: ComponentFactory) => {\n          const invalidComps = await host.listInvalid();\n          return invalidComps.map(({ id, err }) => ({\n            id,\n            errorName: err.name,\n            errorMessage: err.message ? stripAnsi(err.message) : err.name,\n          }));\n        },\n        id: async (host: ComponentFactory) => {\n          return host.name;\n        },\n        name: async (host: ComponentFactory) => {\n          return host.name;\n        },\n      },\n      Query: {\n        getHost: (componentExt: ComponentMain, { id }: { id: string }) => {\n          return componentExtension.getHost(id);\n        },\n      },\n    },\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAkE;AAAA;AAK3D,SAASA,eAAe,CAACC,kBAAiC,EAAE;EACjE,OAAO;IACLC,QAAQ,EAAE,IAAAC,qBAAG,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACDC,SAAS,EAAE;MACTC,UAAU,EAAEC,oCAAiB;MAC7BC,SAAS,EAAE;QACTC,EAAE,EAAGC,SAAoB,IAAKA,SAAS,CAACD,EAAE,CAACE,QAAQ,EAAE;QACrDC,WAAW,EAAGF,SAAoB,IAAKA,SAAS,CAACE,WAAW;QAC5DC,EAAE,EAAGH,SAAoB,IAAK;UAC5B,OAAOA,SAAS,CAACI,KAAK,CAACC,UAAU,CAACC,K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"}