{"version":3,"names":["Component","constructor","id","head","_state","tags","TagMap","factory","mainFile","state","config","filesystem","buildStatus","_consumer","headTag","undefined","byHash","hash","latest","getLatest","err","CouldNotFindLatest","get","aspects","serialize","getLogs","filter","allLogs","type","limit","offset","sort","typeFilter","snap","tag","filteredLogs","reverse","slice","stringify","JSON","displayName","tokens","name","split","map","token","capitalize","join","version","isModified","isOutdated","latestTag","byVersion","isNew","Promise","resolve","loadState","snapId","getState","loadSnap","snapToGet","BitError","getSnap","snapsIterable","options","snapToStart","nextSnaps","done","iterator","next","value","currSnapId","shift","parents","length","firstParentOnly","push","concat","stopFn","Symbol","asyncIterator","getClosestTag","snapToStartFrom","tagsHashMap","getHashMap","has","iterable","snaps","hashOfLastSnap","checkout","write","path","fs","equals","component","toString"],"sources":["component.ts"],"sourcesContent":["import { AnyFS } from '@teambit/any-fs';\nimport { capitalize } from '@teambit/toolbox.string.capitalize';\nimport { SemVer } from 'semver';\nimport { ComponentID } from '@teambit/component-id';\nimport { BitError } from '@teambit/bit-error';\nimport { BuildStatus } from '@teambit/legacy/dist/constants';\n\nimport { slice } from 'lodash';\nimport { ComponentFactory } from './component-factory';\nimport ComponentFS from './component-fs';\n// import { NothingToSnap } from './exceptions';\nimport ComponentConfig from './config';\n// eslint-disable-next-line import/no-cycle\nimport { Snap } from './snap';\nimport { State } from './state';\nimport { TagMap } from './tag-map';\nimport { Tag } from './tag';\nimport { CouldNotFindLatest } from './exceptions';\nimport { IComponent, RawComponentMetadata } from './component-interface';\n// import { Author } from './types';\n\ntype SnapsIterableOpts = {\n  firstParentOnly?: boolean;\n  stopFn?: (snap: Snap) => Promise<boolean>;\n};\n\nexport type InvalidComponent = { id: ComponentID; err: Error };\n\n/**\n * in-memory representation of a component.\n */\nexport class Component implements IComponent {\n  constructor(\n    /**\n     * component ID represented by the `ComponentId` type.\n     */\n    readonly id: ComponentID,\n\n    /**\n     * head version of the component. can be `null` for new components.\n     */\n    readonly head: Snap | null = null,\n\n    /**\n     * state of the component.\n     */\n    private _state: State,\n\n    /**\n     * tags of the component.\n     */\n    readonly tags: TagMap = new TagMap(),\n\n    /**\n     * the component factory\n     */\n    private factory: ComponentFactory\n  ) {}\n\n  get mainFile() {\n    return this.state.mainFile;\n  }\n\n  get state(): State {\n    return this._state;\n  }\n\n  set state(state: State) {\n    this._state = state;\n  }\n\n  /**\n   * component configuration which is later generated to a component `package.json` and `bit.json`.\n   */\n  get config(): ComponentConfig {\n    return this.state.config;\n  }\n\n  /**\n   * in-memory representation of the component current filesystem.\n   */\n  get filesystem(): ComponentFS {\n    return this.state.filesystem;\n  }\n\n  /**\n   * build status of the component\n   */\n  get buildStatus(): BuildStatus {\n    return this._state._consumer.buildStatus;\n  }\n\n  get headTag() {\n    if (!this.head) return undefined;\n    return this.tags.byHash(this.head.hash);\n  }\n\n  get latest(): string | undefined {\n    if (!this.head) return undefined;\n    try {\n      return this.tags.getLatest();\n    } catch (err: any) {\n      if (err instanceof CouldNotFindLatest) {\n        return this.head.hash;\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * get aspect data from current state.\n   */\n  get(id: string): RawComponentMetadata | undefined {\n    return this.state.aspects.get(id)?.serialize();\n  }\n\n  async getLogs(filter?: { type?: string; offset?: number; limit?: number; head?: string; sort?: string }) {\n    const allLogs = await this.factory.getLogs(this.id, false, filter?.head);\n\n    if (!filter) return allLogs;\n\n    const { type, limit, offset, sort } = filter;\n\n    const typeFilter = (snap) => {\n      if (type === 'tag') return snap.tag;\n      if (type === 'snap') return !snap.tag;\n      return true;\n    };\n\n    let filteredLogs = (type && allLogs.filter(typeFilter)) || allLogs;\n    if (sort !== 'asc') filteredLogs = filteredLogs.reverse();\n\n    if (limit) {\n      filteredLogs = slice(filteredLogs, offset, limit + (offset || 0));\n    }\n\n    return filteredLogs;\n  }\n\n  stringify(): string {\n    return JSON.stringify({\n      id: this.id,\n      head: this.head,\n    });\n  }\n\n  /**\n   * record component changes in the `Scope`.\n   */\n  // snap(author: Author, message = '') {\n  // if (!this.isModified()) throw new NothingToSnap();\n  // const snap = new Snap(this, author, message);\n\n  // return new Component(this.id, snap, snap.state);\n  // }\n\n  /**\n   * display name of the component.\n   */\n  get displayName() {\n    const tokens = this.id.name.split('-').map((token) => capitalize(token));\n    return tokens.join(' ');\n  }\n\n  /**\n   * tag a component `Snap` with a semantic version. we follow SemVer specs as defined [here](https://semver.org/)).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  tag(version: SemVer) {\n    // const snap = this.snap();\n    // const tag = new Tag(version, snap);\n    // this.tags.set(tag);\n  }\n\n  /**\n   * determines whether this component is modified in the workspace.\n   */\n  isModified(): Promise<boolean> {\n    return this.factory.isModified(this);\n  }\n\n  /**\n   * is component isOutdated\n   */\n  isOutdated(): boolean {\n    if (!this.latest) return false;\n    const latestTag = this.tags.byVersion(this.latest);\n    if (!latestTag) return false;\n    if (this.head?.hash !== latestTag?.hash) return true;\n    return false;\n  }\n\n  /**\n   * determines whether this component is new.\n   */\n  isNew(): Promise<boolean> {\n    return Promise.resolve(this.head === null);\n  }\n\n  // TODO: @david after snap we need to make sure to refactor here.\n  loadState(snapId: string): Promise<State> {\n    return this.factory.getState(this.id, snapId);\n  }\n\n  loadSnap(snapId?: string): Promise<Snap> {\n    const snapToGet = snapId || this.head?.hash;\n    if (!snapToGet) {\n      throw new BitError('could not load snap for new components');\n    }\n    return this.factory.getSnap(this.id, snapToGet);\n  }\n\n  /**\n   * Get iterable which iterate over snap parents lazily\n   * @param snapId\n   * @param options\n   */\n  snapsIterable(snapId?: string, options: SnapsIterableOpts = {}): AsyncIterable<Snap> {\n    const snapToStart = snapId || this.head?.hash;\n    let nextSnaps = [snapToStart];\n    let done;\n    if (!snapToStart) {\n      done = true;\n    }\n\n    const iterator: AsyncIterator<Snap> = {\n      next: async () => {\n        if (done) {\n          return { value: undefined, done };\n        }\n        const currSnapId = nextSnaps.shift();\n        const snap = await this.loadSnap(currSnapId);\n        if (snap.parents && snap.parents.length) {\n          if (options.firstParentOnly) {\n            nextSnaps.push(snap.parents[0]);\n          } else {\n            nextSnaps = nextSnaps.concat(snap.parents);\n          }\n        }\n        if (!nextSnaps.length) {\n          done = true;\n        } else if (options.stopFn) {\n          done = await options.stopFn(snap);\n        }\n        return { value: snap, done: undefined };\n      },\n    };\n    return {\n      [Symbol.asyncIterator]: () => iterator,\n    };\n  }\n\n  /**\n   * traverse recursively from the provided snap (or head) upwards until it finds a tag\n   * @param snapToStartFrom\n   */\n  async getClosestTag(snapToStartFrom?: string): Promise<Tag | undefined> {\n    const tagsHashMap = this.tags.getHashMap();\n    const stopFn = async (snap: Snap) => {\n      if (tagsHashMap.has(snap.hash)) {\n        return true;\n      }\n      return false;\n    };\n    const iterable = this.snapsIterable(snapToStartFrom, { firstParentOnly: true, stopFn });\n    const snaps: Snap[] = [];\n    for await (const snap of iterable) {\n      snaps.push(snap);\n    }\n    if (snaps.length) {\n      const hashOfLastSnap = snaps[snaps.length - 1].hash;\n      return tagsHashMap.get(hashOfLastSnap);\n    }\n    return undefined;\n  }\n\n  /**\n   * checkout the component to a different version in its working tree.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  checkout(version: SemVer) {}\n\n  /**\n   * examine difference between two components.\n   */\n  // diff(other: Component): Difference {}\n\n  /**\n   * merge two different components\n   */\n  // merge(other: Component): Component {}\n\n  /**\n   * write a component to a given file system.\n   * @param path root path to write the component\n   * @param fs instance of any fs to use.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  write(path: string, fs?: AnyFS) {}\n\n  /**\n   *\n   * Check if 2 components are equal\n   * @param {Component} component\n   * @returns {boolean}\n   * @memberof Component\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  equals(component: Component): boolean {\n    return component.id.toString() === this.id.toString();\n  }\n}\n"],"mappings":"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"}