{"version":3,"names":["DEV_ENV","RUNTIME_ENV","DependencyId","BitId","Dependency","constructor","id","PackageDependency","ComponentDependency","DependencyList","Array","packages","filter","dep","components","fromArray","dependencies","Dependencies","runtime","dev","peer","getByEnvironment","env","concat","BitError","computeDev","computeRuntime"],"sources":["dependencies.ts"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nimport { BitError } from '@teambit/bit-error';\nimport { BitId } from '@teambit/legacy-bit-id';\n\nconst DEV_ENV = 'development';\nconst RUNTIME_ENV = 'runtime';\n\n// type Environment = DEV_ENV | RUNTIME_ENV;\ntype Environment = 'development' | 'runtime';\n// type WrappingMethod = 'component' | 'package';\n\nexport class DependencyId extends BitId {}\n\nexport class Dependency {\n  constructor(public id: DependencyId) {}\n}\n\nexport class PackageDependency extends Dependency {}\n\nexport class ComponentDependency extends Dependency {}\n\nexport class DependencyList extends Array<Dependency> {\n  /**\n   * Get only package dependencies\n   *\n   * @readonly\n   * @memberof DependencyList\n   */\n  get packages(): PackageDependency[] {\n    return this.filter((dep) => dep instanceof PackageDependency);\n  }\n\n  get components(): ComponentDependency[] {\n    return this.filter((dep) => dep instanceof ComponentDependency);\n  }\n\n  static fromArray(dependencies: Dependency[]): DependencyList {\n    return new DependencyList(...dependencies);\n  }\n}\n\nexport class Dependencies {\n  constructor(public runtime: DependencyList, public dev: DependencyList, public peer: DependencyList) {}\n\n  private getByEnvironment(env: Environment): DependencyList {\n    if (env === DEV_ENV) {\n      return DependencyList.fromArray(this.runtime.concat(this.dev).concat(this.peer));\n    }\n    if (env === RUNTIME_ENV) {\n      return DependencyList.fromArray(this.runtime.concat(this.peer));\n    }\n    throw new BitError(`env ${env} is not supported`);\n  }\n\n  /**\n   * Get dependencies needed for development environnement such as runtime, dev and peer\n   *\n   * @returns {DependencyList}\n   * @memberof Dependencies\n   */\n  computeDev(): DependencyList {\n    return this.getByEnvironment(DEV_ENV);\n  }\n\n  /**\n   * Get dependencies needed for runtime environnement such as runtime and peer\n   *\n   * @returns {DependencyList}\n   * @memberof Dependencies\n   */\n  computeRuntime(): DependencyList {\n    return this.getByEnvironment(RUNTIME_ENV);\n  }\n}\n"],"mappings":";;;;;;;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAFA;;AAIA,MAAMA,OAAO,GAAG,aAAa;AAC7B,MAAMC,WAAW,GAAG,SAAS;;AAE7B;;AAEA;;AAEO,MAAMC,YAAY,SAASC,oBAAK,CAAC;AAAE;AAEnC,MAAMC,UAAU,CAAC;EACtBC,WAAW,CAAQC,EAAgB,EAAE;IAAA,KAAlBA,EAAgB,GAAhBA,EAAgB;EAAG;AACxC;AAAC;AAEM,MAAMC,iBAAiB,SAASH,UAAU,CAAC;AAAE;AAE7C,MAAMI,mBAAmB,SAASJ,UAAU,CAAC;AAAE;AAE/C,MAAMK,cAAc,SAASC,KAAK,CAAa;EACpD;AACF;AACA;AACA;AACA;AACA;EACE,IAAIC,QAAQ,GAAwB;IAClC,OAAO,IAAI,CAACC,MAAM,CAAEC,GAAG,IAAKA,GAAG,YAAYN,iBAAiB,CAAC;EAC/D;EAEA,IAAIO,UAAU,GAA0B;IACtC,OAAO,IAAI,CAACF,MAAM,CAAEC,GAAG,IAAKA,GAAG,YAAYL,mBAAmB,CAAC;EACjE;EAEA,OAAOO,SAAS,CAACC,YAA0B,EAAkB;IAC3D,OAAO,IAAIP,cAAc,CAAC,GAAGO,YAAY,CAAC;EAC5C;AACF;AAAC;AAEM,MAAMC,YAAY,CAAC;EACxBZ,WAAW,CAAQa,OAAuB,EAASC,GAAmB,EAASC,IAAoB,EAAE;IAAA,KAAlFF,OAAuB,GAAvBA,OAAuB;IAAA,KAASC,GAAmB,GAAnBA,GAAmB;IAAA,KAASC,IAAoB,GAApBA,IAAoB;EAAG;EAE9FC,gBAAgB,CAACC,GAAgB,EAAkB;IACzD,IAAIA,GAAG,KAAKtB,OAAO,EAAE;MACnB,OAAOS,cAAc,CAACM,SAAS,CAAC,IAAI,CAACG,OAAO,CAACK,MAAM,CAAC,IAAI,CAACJ,GAAG,CAAC,CAACI,MAAM,CAAC,IAAI,CAACH,IAAI,CAAC,CAAC;IAClF;IACA,IAAIE,GAAG,KAAKrB,WAAW,EAAE;MACvB,OAAOQ,cAAc,CAACM,SAAS,CAAC,IAAI,CAACG,OAAO,CAACK,MAAM,CAAC,IAAI,CAACH,IAAI,CAAC,CAAC;IACjE;IACA,MAAM,KAAII,oBAAQ,EAAE,OAAMF,GAAI,mBAAkB,CAAC;EACnD;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEG,UAAU,GAAmB;IAC3B,OAAO,IAAI,CAACJ,gBAAgB,CAACrB,OAAO,CAAC;EACvC;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE0B,cAAc,GAAmB;IAC/B,OAAO,IAAI,CAACL,gBAAgB,CAACpB,WAAW,CAAC;EAC3C;AACF;AAAC"}