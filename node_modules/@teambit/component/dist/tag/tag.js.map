{"version":3,"names":["Tag","constructor","hash","version","toObject","raw","fromObject","tag","SemVer"],"sources":["tag.ts"],"sourcesContent":["import { SemVer } from 'semver';\n\nexport type TagProps = {\n  hash: string;\n  version: string;\n};\n\n/**\n * `Tag` provides a sematic reference to a specific state `Snap` in the working tree.\n */\nexport class Tag {\n  constructor(\n    /**\n     * tag hash, can be used to load it by component-factory.getSnap\n     */\n    readonly hash: string,\n\n    /**\n     * sematic version of the snap.\n     */\n    readonly version: SemVer\n  ) {}\n\n  /**\n   * create a plain tag object.\n   */\n  toObject(): TagProps {\n    return {\n      hash: this.hash,\n      version: this.version.raw,\n    };\n  }\n\n  static fromObject(tag: TagProps) {\n    return new Tag(tag.hash, new SemVer(tag.version));\n  }\n}\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAOA;AACA;AACA;AACO,MAAMA,GAAG,CAAC;EACfC,WAAW;EACT;AACJ;AACA;EACaC,IAAY;EAErB;AACJ;AACA;EACaC,OAAe,EACxB;IAAA,KANSD,IAAY,GAAZA,IAAY;IAAA,KAKZC,OAAe,GAAfA,OAAe;EACvB;;EAEH;AACF;AACA;EACEC,QAAQ,GAAa;IACnB,OAAO;MACLF,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,OAAO,EAAE,IAAI,CAACA,OAAO,CAACE;IACxB,CAAC;EACH;EAEA,OAAOC,UAAU,CAACC,GAAa,EAAE;IAC/B,OAAO,IAAIP,GAAG,CAACO,GAAG,CAACL,IAAI,EAAE,KAAIM,gBAAM,EAACD,GAAG,CAACJ,OAAO,CAAC,CAAC;EACnD;AACF;AAAC"}