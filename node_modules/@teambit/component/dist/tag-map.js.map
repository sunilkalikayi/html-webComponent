{"version":3,"names":["TagMap","Map","byHash","hash","tag","Array","from","values","find","currTag","getPreReleaseLatestTags","preReleaseTagsWithAllVersions","toArray","reduce","acc","current","preReleases","version","prerelease","length","push","raw","Object","keys","maxSatisfying","includePrerelease","getHashMap","res","forEach","set","getLatest","versions","map","isEmpty","CouldNotFindLatest","getLatestVersion","size","byVersion","fromArray","tags","tuples","empty"],"sources":["tag-map.ts"],"sourcesContent":["import { getLatestVersion } from '@teambit/legacy/dist/utils/semver-helper';\nimport { SemVer, maxSatisfying } from 'semver';\n\nimport { CouldNotFindLatest } from './exceptions';\nimport { Hash } from './hash';\nimport { Tag } from './tag';\n\nexport class TagMap extends Map<SemVer, Tag> {\n  /**\n   * get snap by hash.\n   */\n  byHash(hash: Hash) {\n    const tag = Array.from(this.values()).find((currTag) => currTag.hash === hash);\n    return tag;\n  }\n\n  /**\n   * e.g.\n   * {\n   *   alpha: '1.0.0-alpha.5',\n   *   dev: '2.2.4-dev.37\n   * }\n   */\n  getPreReleaseLatestTags(): { [preRelease: string]: string } {\n    const preReleaseTagsWithAllVersions = this.toArray().reduce((acc, current) => {\n      const preReleases = current.version.prerelease;\n      if (!preReleases.length) return acc;\n      if (preReleases.length !== 2) {\n        // it could be length 1, e.g. 1.0.0-0, we ignore it.\n        // it could also be length > 2, e.g. 1.0.0-dev.1.alpha.1, we don't support it for now.\n        return acc;\n      }\n      if (typeof preReleases[0] !== 'string') return acc;\n      (acc[preReleases[0]] ||= []).push(current.version.raw);\n      return acc;\n    }, {});\n    return Object.keys(preReleaseTagsWithAllVersions).reduce((acc, current) => {\n      acc[current] = maxSatisfying<string>(preReleaseTagsWithAllVersions[current], '*', { includePrerelease: true });\n      return acc;\n    }, {});\n  }\n\n  /**\n   * Get a map that map snap hash to tag\n   */\n  getHashMap(): Map<Hash, Tag> {\n    const res: Map<Hash, Tag> = new Map();\n    this.forEach((tag: Tag) => {\n      res.set(tag.hash, tag);\n    });\n    return res;\n  }\n\n  /**\n   * get the latest semver from the tag map.\n   */\n  getLatest(): string {\n    const versions = this.toArray().map((tag) => tag.version.raw);\n    if (this.isEmpty()) throw new CouldNotFindLatest(versions);\n    return getLatestVersion(versions);\n  }\n\n  isEmpty() {\n    return this.size === 0;\n  }\n\n  /**\n   * get an array of all tags.\n   */\n  toArray(): Tag[] {\n    return Array.from(this.values());\n  }\n\n  byVersion(version: string): Tag | undefined {\n    const versions = this.toArray().map((tag) => tag);\n    return versions.find((tag) => tag.version.raw === version);\n  }\n\n  static fromArray(tags: Tag[]) {\n    const tuples: [SemVer, Tag][] = tags.map((tag) => [tag.version, tag]);\n    return new TagMap(tuples);\n  }\n\n  static empty() {\n    return new TagMap();\n  }\n}\n"],"mappings":"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"}