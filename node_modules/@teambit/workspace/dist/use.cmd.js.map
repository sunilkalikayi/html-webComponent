{"version":3,"names":["UseCmd","constructor","workspace","name","description","report","id","aspectIdAdded","use","chalk","green"],"sources":["use.cmd.ts"],"sourcesContent":["import { Command, CommandOptions } from '@teambit/cli';\nimport chalk from 'chalk';\nimport { Workspace } from './workspace';\n\nexport class UseCmd implements Command {\n  name = 'use <component-id>';\n  group = 'collaborate';\n  description = 'set aspects in the workspace/scope config to make them loadable by the workspace/scope';\n  arguments = [{ name: 'component-id', description: 'the component ID of the aspect' }];\n  alias = '';\n  options = [] as CommandOptions;\n  loader = true;\n  migration = true;\n  remoteOp = true;\n\n  constructor(private workspace: Workspace) {}\n\n  async report([id]: [string]): Promise<any> {\n    const aspectIdAdded = await this.workspace.use(id);\n    return chalk.green(`aspect \"${aspectIdAdded}\" has been saved into the workspace.jsonc file.`);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGO,MAAMA,MAAM,CAAoB;EAWrCC,WAAW,CAASC,SAAoB,EAAE;IAAA,KAAtBA,SAAoB,GAApBA,SAAoB;IAAA,8CAVjC,oBAAoB;IAAA,+CACnB,aAAa;IAAA,qDACP,wFAAwF;IAAA,mDAC1F,CAAC;MAAEC,IAAI,EAAE,cAAc;MAAEC,WAAW,EAAE;IAAiC,CAAC,CAAC;IAAA,+CAC7E,EAAE;IAAA,iDACA,EAAE;IAAA,gDACH,IAAI;IAAA,mDACD,IAAI;IAAA,kDACL,IAAI;EAE4B;EAE3C,MAAMC,MAAM,CAAC,CAACC,EAAE,CAAW,EAAgB;IACzC,MAAMC,aAAa,GAAG,MAAM,IAAI,CAACL,SAAS,CAACM,GAAG,CAACF,EAAE,CAAC;IAClD,OAAOG,gBAAK,CAACC,KAAK,CAAE,WAAUH,aAAc,iDAAgD,CAAC;EAC/F;AACF;AAAC"}