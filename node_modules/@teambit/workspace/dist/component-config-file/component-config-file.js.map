{"version":3,"names":["DEFAULT_INDENT","DEFAULT_NEWLINE","ComponentConfigFile","constructor","componentId","aspects","componentDir","propagate","options","indent","newLine","defaultScope","load","aspectListFactory","outsideDefaultScope","filePath","composePath","isExist","fs","pathExists","undefined","content","readFile","parsed","parseComponentJsonContent","detectIndent","amount","detectNewline","ComponentID","fromObject","ExtensionDataList","fromConfigObject","extensions","Boolean","componentRootFolder","path","join","COMPONENT_CONFIG_FILE_NAME","write","json","toJson","override","AlreadyExistsError","writeJsonSync","spaces","EOL","addAspect","aspectId","config","resolveComponentId","shouldMergeConfig","existing","get","getNewConfig","merge","aspectEntry","aspectEntryFromConfigObject","entries","push","removeAspect","markWithMinusIfNotExist","aspectList","withoutEntries","REMOVE_EXTENSION_SPECIAL_SIGN","id","legacyEntry","configEntryToDataEntry","AspectEntry","toObject","toConfigObject","toString","stringifyPackage","str","dir","JSON","parse","err","Error","message"],"sources":["component-config-file.ts"],"sourcesContent":["import { ComponentID, AspectList, AspectEntry, ResolveComponentIdFunc } from '@teambit/component';\nimport { COMPONENT_CONFIG_FILE_NAME } from '@teambit/legacy/dist/constants';\nimport { ExtensionDataList, configEntryToDataEntry } from '@teambit/legacy/dist/consumer/config/extension-data';\nimport { PathOsBasedAbsolute } from '@teambit/legacy/dist/utils/path';\nimport detectIndent from 'detect-indent';\nimport detectNewline from 'detect-newline';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport stringifyPackage from 'stringify-package';\nimport { REMOVE_EXTENSION_SPECIAL_SIGN } from '@teambit/legacy/dist/consumer/config';\nimport { merge } from 'lodash';\nimport { AlreadyExistsError } from './exceptions';\n\ninterface ComponentConfigFileOptions {\n  indent: number;\n  newLine: '\\r\\n' | '\\n' | undefined;\n}\n\ninterface WriteConfigFileOptions {\n  override?: boolean;\n}\n\ninterface ComponentConfigFileJson {\n  componentId: any;\n  // TODO: think if we want to change it to aspects\n  extensions: any;\n  propagate: boolean;\n  defaultScope?: string;\n}\n\nconst DEFAULT_INDENT = 2;\nconst DEFAULT_NEWLINE = '\\n';\n\nexport class ComponentConfigFile {\n  constructor(\n    public componentId: ComponentID,\n    public aspects: AspectList,\n    private componentDir: PathOsBasedAbsolute,\n    public propagate: boolean = false,\n    private options: ComponentConfigFileOptions = { indent: DEFAULT_INDENT, newLine: DEFAULT_NEWLINE },\n    public defaultScope?: string\n  ) {}\n\n  static async load(\n    componentDir: PathOsBasedAbsolute,\n    aspectListFactory: (extensionDataList: ExtensionDataList) => Promise<AspectList>,\n    outsideDefaultScope?: string\n  ): Promise<ComponentConfigFile | undefined> {\n    const filePath = ComponentConfigFile.composePath(componentDir);\n    const isExist = await fs.pathExists(filePath);\n    if (!isExist) {\n      return undefined;\n    }\n    const content = await fs.readFile(filePath, 'utf-8');\n    const parsed: ComponentConfigFileJson = parseComponentJsonContent(content, componentDir);\n    const indent = detectIndent(content).amount;\n    const newLine = detectNewline(content);\n    const componentId = ComponentID.fromObject(parsed.componentId, parsed.defaultScope || outsideDefaultScope);\n    const aspects = await aspectListFactory(ExtensionDataList.fromConfigObject(parsed.extensions));\n\n    return new ComponentConfigFile(\n      componentId,\n      aspects,\n      componentDir,\n      Boolean(parsed.propagate),\n      { indent, newLine },\n      parsed.defaultScope\n    );\n  }\n\n  static composePath(componentRootFolder: string) {\n    return path.join(componentRootFolder, COMPONENT_CONFIG_FILE_NAME);\n  }\n\n  async write(options: WriteConfigFileOptions = {}): Promise<void> {\n    const json = this.toJson();\n    const filePath = ComponentConfigFile.composePath(this.componentDir);\n    const isExist = await fs.pathExists(filePath);\n    if (isExist && !options.override) {\n      throw new AlreadyExistsError(filePath);\n    }\n    return fs.writeJsonSync(filePath, json, { spaces: this.options.indent, EOL: this.options.newLine });\n  }\n\n  async addAspect(\n    aspectId: string,\n    config: any,\n    resolveComponentId: ResolveComponentIdFunc,\n    shouldMergeConfig = false\n  ) {\n    const existing = this.aspects.get(aspectId);\n\n    if (existing) {\n      const getNewConfig = () => {\n        if (!shouldMergeConfig) return config;\n        if (!config || config === '-') return config;\n        if (!existing.config) return config;\n        // @ts-ignore\n        if (existing.config === '-') return config;\n        return merge(existing.config, config);\n      };\n      existing.config = getNewConfig();\n    } else {\n      const aspectEntry = await this.aspectEntryFromConfigObject(aspectId, config, resolveComponentId);\n      this.aspects.entries.push(aspectEntry);\n    }\n  }\n\n  async removeAspect(aspectId: string, markWithMinusIfNotExist: boolean, resolveComponentId: ResolveComponentIdFunc) {\n    const existing = this.aspects.get(aspectId);\n    if (existing) {\n      const aspectList = this.aspects.withoutEntries([aspectId]);\n      this.aspects = aspectList;\n    } else if (markWithMinusIfNotExist) {\n      await this.addAspect(aspectId, REMOVE_EXTENSION_SPECIAL_SIGN, resolveComponentId);\n    }\n  }\n\n  private async aspectEntryFromConfigObject(id: string, config: any, resolveComponentId: ResolveComponentIdFunc) {\n    const aspectId = await resolveComponentId(id);\n    const legacyEntry = configEntryToDataEntry(id, config);\n    return new AspectEntry(aspectId, legacyEntry);\n  }\n\n  toJson(): ComponentConfigFileJson {\n    return {\n      componentId: this.componentId.toObject(),\n      propagate: this.propagate,\n      defaultScope: this.defaultScope,\n      extensions: this.aspects.toConfigObject(),\n    };\n  }\n\n  toString(): string {\n    const json = this.toJson();\n    return stringifyPackage(json, this.options.indent, this.options.newLine);\n  }\n}\n\nfunction parseComponentJsonContent(str: string, dir: string) {\n  try {\n    return JSON.parse(str);\n  } catch (err: any) {\n    throw new Error(`failed parsing component.json file at ${dir}. original error: ${err.message}`);\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAmBA,MAAMA,cAAc,GAAG,CAAC;AACxB,MAAMC,eAAe,GAAG,IAAI;AAErB,MAAMC,mBAAmB,CAAC;EAC/BC,WAAW,CACFC,WAAwB,EACxBC,OAAmB,EAClBC,YAAiC,EAClCC,SAAkB,GAAG,KAAK,EACzBC,OAAmC,GAAG;IAAEC,MAAM,EAAET,cAAc;IAAEU,OAAO,EAAET;EAAgB,CAAC,EAC3FU,YAAqB,EAC5B;IAAA,KANOP,WAAwB,GAAxBA,WAAwB;IAAA,KACxBC,OAAmB,GAAnBA,OAAmB;IAAA,KAClBC,YAAiC,GAAjCA,YAAiC;IAAA,KAClCC,SAAkB,GAAlBA,SAAkB;IAAA,KACjBC,OAAmC,GAAnCA,OAAmC;IAAA,KACpCG,YAAqB,GAArBA,YAAqB;EAC3B;EAEH,aAAaC,IAAI,CACfN,YAAiC,EACjCO,iBAAgF,EAChFC,mBAA4B,EACc;IAC1C,MAAMC,QAAQ,GAAGb,mBAAmB,CAACc,WAAW,CAACV,YAAY,CAAC;IAC9D,MAAMW,OAAO,GAAG,MAAMC,kBAAE,CAACC,UAAU,CAACJ,QAAQ,CAAC;IAC7C,IAAI,CAACE,OAAO,EAAE;MACZ,OAAOG,SAAS;IAClB;IACA,MAAMC,OAAO,GAAG,MAAMH,kBAAE,CAACI,QAAQ,CAACP,QAAQ,EAAE,OAAO,CAAC;IACpD,MAAMQ,MAA+B,GAAGC,yBAAyB,CAACH,OAAO,EAAEf,YAAY,CAAC;IACxF,MAAMG,MAAM,GAAG,IAAAgB,uBAAY,EAACJ,OAAO,CAAC,CAACK,MAAM;IAC3C,MAAMhB,OAAO,GAAG,IAAAiB,wBAAa,EAACN,OAAO,CAAC;IACtC,MAAMjB,WAAW,GAAGwB,wBAAW,CAACC,UAAU,CAACN,MAAM,CAACnB,WAAW,EAAEmB,MAAM,CAACZ,YAAY,IAAIG,mBAAmB,CAAC;IAC1G,MAAMT,OAAO,GAAG,MAAMQ,iBAAiB,CAACiB,kCAAiB,CAACC,gBAAgB,CAACR,MAAM,CAACS,UAAU,CAAC,CAAC;IAE9F,OAAO,IAAI9B,mBAAmB,CAC5BE,WAAW,EACXC,OAAO,EACPC,YAAY,EACZ2B,OAAO,CAACV,MAAM,CAAChB,SAAS,CAAC,EACzB;MAAEE,MAAM;MAAEC;IAAQ,CAAC,EACnBa,MAAM,CAACZ,YAAY,CACpB;EACH;EAEA,OAAOK,WAAW,CAACkB,mBAA2B,EAAE;IAC9C,OAAOC,eAAI,CAACC,IAAI,CAACF,mBAAmB,EAAEG,uCAA0B,CAAC;EACnE;EAEA,MAAMC,KAAK,CAAC9B,OAA+B,GAAG,CAAC,CAAC,EAAiB;IAC/D,MAAM+B,IAAI,GAAG,IAAI,CAACC,MAAM,EAAE;IAC1B,MAAMzB,QAAQ,GAAGb,mBAAmB,CAACc,WAAW,CAAC,IAAI,CAACV,YAAY,CAAC;IACnE,MAAMW,OAAO,GAAG,MAAMC,kBAAE,CAACC,UAAU,CAACJ,QAAQ,CAAC;IAC7C,IAAIE,OAAO,IAAI,CAACT,OAAO,CAACiC,QAAQ,EAAE;MAChC,MAAM,KAAIC,gCAAkB,EAAC3B,QAAQ,CAAC;IACxC;IACA,OAAOG,kBAAE,CAACyB,aAAa,CAAC5B,QAAQ,EAAEwB,IAAI,EAAE;MAAEK,MAAM,EAAE,IAAI,CAACpC,OAAO,CAACC,MAAM;MAAEoC,GAAG,EAAE,IAAI,CAACrC,OAAO,CAACE;IAAQ,CAAC,CAAC;EACrG;EAEA,MAAMoC,SAAS,CACbC,QAAgB,EAChBC,MAAW,EACXC,kBAA0C,EAC1CC,iBAAiB,GAAG,KAAK,EACzB;IACA,MAAMC,QAAQ,GAAG,IAAI,CAAC9C,OAAO,CAAC+C,GAAG,CAACL,QAAQ,CAAC;IAE3C,IAAII,QAAQ,EAAE;MACZ,MAAME,YAAY,GAAG,MAAM;QACzB,IAAI,CAACH,iBAAiB,EAAE,OAAOF,MAAM;QACrC,IAAI,CAACA,MAAM,IAAIA,MAAM,KAAK,GAAG,EAAE,OAAOA,MAAM;QAC5C,IAAI,CAACG,QAAQ,CAACH,MAAM,EAAE,OAAOA,MAAM;QACnC;QACA,IAAIG,QAAQ,CAACH,MAAM,KAAK,GAAG,EAAE,OAAOA,MAAM;QAC1C,OAAO,IAAAM,eAAK,EAACH,QAAQ,CAACH,MAAM,EAAEA,MAAM,CAAC;MACvC,CAAC;MACDG,QAAQ,CAACH,MAAM,GAAGK,YAAY,EAAE;IAClC,CAAC,MAAM;MACL,MAAME,WAAW,GAAG,MAAM,IAAI,CAACC,2BAA2B,CAACT,QAAQ,EAAEC,MAAM,EAAEC,kBAAkB,CAAC;MAChG,IAAI,CAAC5C,OAAO,CAACoD,OAAO,CAACC,IAAI,CAACH,WAAW,CAAC;IACxC;EACF;EAEA,MAAMI,YAAY,CAACZ,QAAgB,EAAEa,uBAAgC,EAAEX,kBAA0C,EAAE;IACjH,MAAME,QAAQ,GAAG,IAAI,CAAC9C,OAAO,CAAC+C,GAAG,CAACL,QAAQ,CAAC;IAC3C,IAAII,QAAQ,EAAE;MACZ,MAAMU,UAAU,GAAG,IAAI,CAACxD,OAAO,CAACyD,cAAc,CAAC,CAACf,QAAQ,CAAC,CAAC;MAC1D,IAAI,CAAC1C,OAAO,GAAGwD,UAAU;IAC3B,CAAC,MAAM,IAAID,uBAAuB,EAAE;MAClC,MAAM,IAAI,CAACd,SAAS,CAACC,QAAQ,EAAEgB,uCAA6B,EAAEd,kBAAkB,CAAC;IACnF;EACF;EAEA,MAAcO,2BAA2B,CAACQ,EAAU,EAAEhB,MAAW,EAAEC,kBAA0C,EAAE;IAC7G,MAAMF,QAAQ,GAAG,MAAME,kBAAkB,CAACe,EAAE,CAAC;IAC7C,MAAMC,WAAW,GAAG,IAAAC,uCAAsB,EAACF,EAAE,EAAEhB,MAAM,CAAC;IACtD,OAAO,KAAImB,wBAAW,EAACpB,QAAQ,EAAEkB,WAAW,CAAC;EAC/C;EAEAzB,MAAM,GAA4B;IAChC,OAAO;MACLpC,WAAW,EAAE,IAAI,CAACA,WAAW,CAACgE,QAAQ,EAAE;MACxC7D,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBI,YAAY,EAAE,IAAI,CAACA,YAAY;MAC/BqB,UAAU,EAAE,IAAI,CAAC3B,OAAO,CAACgE,cAAc;IACzC,CAAC;EACH;EAEAC,QAAQ,GAAW;IACjB,MAAM/B,IAAI,GAAG,IAAI,CAACC,MAAM,EAAE;IAC1B,OAAO,IAAA+B,2BAAgB,EAAChC,IAAI,EAAE,IAAI,CAAC/B,OAAO,CAACC,MAAM,EAAE,IAAI,CAACD,OAAO,CAACE,OAAO,CAAC;EAC1E;AACF;AAAC;AAED,SAASc,yBAAyB,CAACgD,GAAW,EAAEC,GAAW,EAAE;EAC3D,IAAI;IACF,OAAOC,IAAI,CAACC,KAAK,CAACH,GAAG,CAAC;EACxB,CAAC,CAAC,OAAOI,GAAQ,EAAE;IACjB,MAAM,IAAIC,KAAK,CAAE,yCAAwCJ,GAAI,qBAAoBG,GAAG,CAACE,OAAQ,EAAC,CAAC;EACjG;AACF"}