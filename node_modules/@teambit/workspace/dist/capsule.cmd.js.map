{"version":3,"names":["CapsuleCreateCmd","constructor","workspace","isolator","create","componentIds","baseDir","rootBaseDir","alwaysNew","id","installPackages","seedersOnly","Array","isArray","capsuleOptions","installOptions","includeFromNestedHosts","name","ids","resolveMultipleComponentIds","network","isolateComponents","capsules","graphCapsules","report","opts","capsuleOutput","map","capsule","chalk","bold","component","toString","path","join","title","length","green","json","c","CapsuleListCmd","list","workspaceCapsulesRootDir","scopeAspectsCapsulesRootDir","getCapsulesRootDirs","cyan","rootDirs","getCapsulesRootDir","scope","getAspectCapsulePath","CapsuleDeleteCmd","args","all","scopeAspects","capsuleBaseDirToDelete","capsuleBaseDir","deletedDir","deleteCapsules","CapsuleCmd"],"sources":["capsule.cmd.ts"],"sourcesContent":["// eslint-disable-next-line max-classes-per-file\nimport { Command, CommandOptions } from '@teambit/cli';\nimport { CapsuleList, IsolateComponentsOptions, IsolatorMain } from '@teambit/isolator';\nimport chalk from 'chalk';\n\nimport { Workspace } from '.';\n\ntype CreateOpts = {\n  baseDir?: string;\n  rootBaseDir?: string;\n  alwaysNew?: boolean;\n  seedersOnly?: boolean;\n  id: string;\n  installPackages?: boolean;\n};\n\nexport class CapsuleCreateCmd implements Command {\n  name = 'create [component-id...]';\n  description = `create capsules for components`;\n  group = 'capsules';\n  alias = '';\n  options = [\n    [\n      'b',\n      'base-dir <name>',\n      'set base dir of all capsules (hashed to create the base dir inside the root dir - host path by default)',\n    ],\n    ['r', 'root-base-dir <name>', 'set root base dir of all capsules (absolute path to use as root dir)'],\n    ['a', 'always-new', 'create new environment for capsule'],\n    ['s', 'seeders-only', 'create capsules for the seeders only (not for the entire graph)'],\n    ['i', 'id <name>', 'reuse capsule of certain name'],\n    ['j', 'json', 'json format'],\n    ['d', 'install-packages', 'install packages by the package-manager'],\n    ['p', 'package-manager <name>', 'npm, yarn or pnpm, default to npm'],\n  ] as CommandOptions;\n\n  constructor(private workspace: Workspace, private isolator: IsolatorMain) {}\n\n  async create(\n    [componentIds = []]: [string[]],\n    { baseDir, rootBaseDir, alwaysNew = false, id, installPackages = false, seedersOnly = false }: CreateOpts\n  ): Promise<CapsuleList> {\n    // @todo: why it is not an array?\n    if (componentIds && !Array.isArray(componentIds)) componentIds = [componentIds];\n    const capsuleOptions: IsolateComponentsOptions = {\n      baseDir,\n      rootBaseDir,\n      installOptions: { installPackages },\n      alwaysNew,\n      seedersOnly,\n      includeFromNestedHosts: true,\n      name: id,\n    };\n    const ids = await this.workspace.resolveMultipleComponentIds(componentIds);\n    const network = await this.isolator.isolateComponents(ids, capsuleOptions);\n    const capsules = network.graphCapsules;\n    return capsules;\n  }\n\n  async report([componentIds]: [string[]], opts: CreateOpts) {\n    // @ts-ignore\n    const capsules = await this.create(componentIds, opts);\n    const capsuleOutput = capsules\n      .map((capsule) => `${chalk.bold(capsule.component.id.toString())} - ${capsule.path}`)\n      .join('\\n');\n    const title = `${capsules.length} capsule(s) were created successfully`;\n    return `${chalk.green(title)}\\n${capsuleOutput}`;\n  }\n\n  async json([componentIds]: [string[]], opts: CreateOpts) {\n    // @ts-ignore\n    const capsules = await this.create(componentIds, opts);\n    return capsules.map((c) => ({\n      id: c.component.id.toString(),\n      path: c.path,\n    }));\n  }\n}\n\nexport class CapsuleListCmd implements Command {\n  name = 'list';\n  description = `list the capsules generated for this workspace`;\n  group = 'capsules';\n  alias = '';\n  options = [['j', 'json', 'json format']] as CommandOptions;\n\n  constructor(private isolator: IsolatorMain, private workspace: Workspace) {}\n\n  async report() {\n    const list = await this.isolator.list(this.workspace.path);\n    const { workspaceCapsulesRootDir, scopeAspectsCapsulesRootDir } = this.getCapsulesRootDirs();\n    // TODO: improve output\n    return chalk.green(`found ${chalk.cyan(list.capsules.length.toString())} capsule(s) for workspace:  ${chalk.cyan(\n      list.workspace\n    )}\nworkspace capsules root-dir:       ${chalk.cyan(workspaceCapsulesRootDir)}\nscope's aspects capsules root-dir: ${chalk.cyan(scopeAspectsCapsulesRootDir)}\nuse --json to get the list of all workspace capsules`);\n  }\n\n  async json() {\n    const list = await this.isolator.list(this.workspace.path);\n    const rootDirs = this.getCapsulesRootDirs();\n    return { ...list, ...rootDirs };\n  }\n\n  private getCapsulesRootDirs() {\n    const workspaceCapsulesRootDir = this.isolator.getCapsulesRootDir(this.workspace.path);\n    const scopeAspectsCapsulesRootDir = this.isolator.getCapsulesRootDir(this.workspace.scope.getAspectCapsulePath());\n\n    return { workspaceCapsulesRootDir, scopeAspectsCapsulesRootDir };\n  }\n}\n\nexport class CapsuleDeleteCmd implements Command {\n  name = 'delete';\n  description = `delete capsules`;\n  extendedDescription = `with no args, only workspace's capsules are deleted`;\n  group = 'capsules';\n  alias = '';\n  options = [\n    ['', 'scope-aspects', 'delete scope-aspects capsules'],\n    ['a', 'all', 'delete all capsules for all workspaces and scopes'],\n  ] as CommandOptions;\n\n  constructor(private isolator: IsolatorMain, private workspace: Workspace) {}\n\n  async report(args: [], { all, scopeAspects }: { all: boolean; scopeAspects: boolean }) {\n    const capsuleBaseDirToDelete = (): string | null => {\n      if (all) return null;\n      if (scopeAspects) return this.workspace.scope.getAspectCapsulePath();\n      return this.workspace.path;\n    };\n    const capsuleBaseDir = capsuleBaseDirToDelete();\n    const deletedDir = await this.isolator.deleteCapsules(capsuleBaseDir);\n    return chalk.green(`the following capsules dir has been deleted ${chalk.bold(deletedDir)}`);\n  }\n}\n\nexport class CapsuleCmd implements Command {\n  name = 'capsule <sub-command>';\n  description = 'manage capsules';\n  extendedDescription = `a capsule is a directory containing the component code, isolated from the workspace.\nnormally, capsules are created during the build process, the component files are copied and the packages are installed\nvia the configured package-manager. the purpose is to compile/test them in isolation to make sure they will work for\nother users after publishing/exporting them.`;\n  alias = '';\n  group = 'capsules';\n  commands: Command[] = [];\n  options = [] as CommandOptions;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async report(args: [string]) {\n    // it should never be here. Yargs throws an error before reaching this method.\n    return `Please specify a sub-command`;\n  }\n}\n"],"mappings":"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"}