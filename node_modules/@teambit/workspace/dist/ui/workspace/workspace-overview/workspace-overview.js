"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WorkspaceOverview = WorkspaceOverview;
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _explorerUiGallery() {
  const data = require("@teambit/explorer.ui.gallery.component-grid");
  _explorerUiGallery = function () {
    return data;
  };
  return data;
}
function _workspaceUi() {
  const data = require("@teambit/workspace.ui.empty-workspace");
  _workspaceUi = function () {
    return data;
  };
  return data;
}
function _workspaceUi2() {
  const data = require("@teambit/workspace.ui.workspace-component-card");
  _workspaceUi2 = function () {
    return data;
  };
  return data;
}
function _workspaceContext() {
  const data = require("../workspace-context");
  _workspaceContext = function () {
    return data;
  };
  return data;
}
function _workspaceOverviewModule() {
  const data = _interopRequireDefault(require("./workspace-overview.module.scss"));
  _workspaceOverviewModule = function () {
    return data;
  };
  return data;
}
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function WorkspaceOverview() {
  const workspace = (0, _react().useContext)(_workspaceContext().WorkspaceContext);
  const {
    components
  } = workspace;
  if (!components || components.length === 0) return /*#__PURE__*/_react().default.createElement(_workspaceUi().EmptyWorkspace, {
    name: workspace.name
  });
  return /*#__PURE__*/_react().default.createElement("div", {
    className: _workspaceOverviewModule().default.container
  }, /*#__PURE__*/_react().default.createElement(_explorerUiGallery().ComponentGrid, null, components.map((component, index) => {
    var _component$deprecatio;
    if ((_component$deprecatio = component.deprecation) !== null && _component$deprecatio !== void 0 && _component$deprecatio.isDeprecate) return null;
    return /*#__PURE__*/_react().default.createElement(_workspaceUi2().WorkspaceComponentCard, {
      key: index,
      component: component
    });
  })));
}

//# sourceMappingURL=workspace-overview.js.map