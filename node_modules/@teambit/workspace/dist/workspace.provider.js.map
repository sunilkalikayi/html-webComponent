{"version":3,"names":["provideWorkspace","pubsub","cli","scope","component","isolator","dependencyResolver","variants","loggerExt","graphql","ui","bundler","aspectLoader","envs","config","onComponentLoadSlot","onComponentChangeSlot","onComponentAddSlot","onComponentRemoveSlot","onPreWatchSlot","harmony","bitConfig","get","consumer","getConsumer","cwd","undefined","logger","createLogger","EXT_NAME","workspace","Workspace","getWorkspacePolicyFromPackageJson","packageJson","packageJsonObject","policyFromPackageJson","registerRootPolicy","onCacheClear","push","clearCache","LegacyComponentLoader","registerOnComponentLoadSubscriber","legacyComponent","opts","id","resolveComponentId","newComponent","state","_consumer","ConsumerComponent","registerOnComponentConfigLoading","componentId","componentFromScope","extensions","componentExtensions","defaultScope","componentDefaultScope","extensionsWithLegacyIdsP","map","extension","legacyEntry","clone","extensionId","compId","_legacy","newExtensionId","extensionsWithLegacyIds","Promise","all","ExtensionDataList","fromArray","workspaceSchema","getWorkspaceSchema","registerUiRoot","WorkspaceUIRoot","register","capsuleCmd","CapsuleCmd","commands","CapsuleListCmd","CapsuleCreateCmd","CapsuleDeleteCmd","watcher","Watcher","EjectConfCmd","WatchCommand","UseCmd","PatternCommand","registerHost","registerOnStart","importCurrentLaneIfMissing","loadAspects","getNotLoadedConfiguredExtensions","envsCommand","getCommand","EnvsSetCmd","EnvsUnsetCmd","EnvsReplaceCmd","scopeCommand","ScopeSetCmd","path","loadConsumerIfExist"],"sources":["workspace.provider.ts"],"sourcesContent":["import { PubsubMain } from '@teambit/pubsub';\nimport type { AspectLoaderMain } from '@teambit/aspect-loader';\nimport { BundlerMain } from '@teambit/bundler';\nimport { CLIMain, CommandList } from '@teambit/cli';\nimport type { ComponentMain, Component } from '@teambit/component';\nimport { DependencyResolverMain } from '@teambit/dependency-resolver';\nimport { EnvsMain } from '@teambit/envs';\nimport { GraphqlMain } from '@teambit/graphql';\nimport { Harmony, SlotRegistry } from '@teambit/harmony';\nimport { IsolatorMain } from '@teambit/isolator';\nimport { LoggerMain } from '@teambit/logger';\nimport type { ScopeMain } from '@teambit/scope';\nimport { UiMain } from '@teambit/ui';\nimport type { VariantsMain } from '@teambit/variants';\nimport { Consumer, loadConsumerIfExist } from '@teambit/legacy/dist/consumer';\nimport ConsumerComponent from '@teambit/legacy/dist/consumer/component';\nimport LegacyComponentLoader from '@teambit/legacy/dist/consumer/component/component-loader';\nimport { ExtensionDataList } from '@teambit/legacy/dist/consumer/config/extension-data';\nimport { EXT_NAME } from './constants';\nimport EjectConfCmd from './eject-conf.cmd';\nimport { OnComponentLoad, OnComponentAdd, OnComponentChange, OnComponentRemove } from './on-component-events';\nimport { WorkspaceExtConfig } from './types';\nimport { WatchCommand } from './watch/watch.cmd';\nimport { Watcher, WatchOptions } from './watch/watcher';\nimport { Workspace } from './workspace';\nimport getWorkspaceSchema from './workspace.graphql';\nimport { WorkspaceUIRoot } from './workspace.ui-root';\nimport { CapsuleCmd, CapsuleCreateCmd, CapsuleDeleteCmd, CapsuleListCmd } from './capsule.cmd';\nimport { EnvsSetCmd } from './envs-subcommands/envs-set.cmd';\nimport { EnvsUnsetCmd } from './envs-subcommands/envs-unset.cmd';\nimport { PatternCommand } from './pattern.cmd';\nimport { EnvsReplaceCmd } from './envs-subcommands/envs-replace.cmd';\nimport { ScopeSetCmd } from './scope-subcommands/scope-set.cmd';\nimport { UseCmd } from './use.cmd';\n\nexport type WorkspaceDeps = [\n  PubsubMain,\n  CLIMain,\n  ScopeMain,\n  ComponentMain,\n  IsolatorMain,\n  DependencyResolverMain,\n  VariantsMain,\n  LoggerMain,\n  GraphqlMain,\n  UiMain,\n  BundlerMain,\n  AspectLoaderMain,\n  EnvsMain\n];\n\nexport type OnComponentLoadSlot = SlotRegistry<OnComponentLoad>;\n\nexport type OnComponentChangeSlot = SlotRegistry<OnComponentChange>;\n\nexport type OnComponentAddSlot = SlotRegistry<OnComponentAdd>;\n\nexport type OnComponentRemoveSlot = SlotRegistry<OnComponentRemove>;\n\nexport type OnPreWatch = (components: Component[], watchOpts: WatchOptions) => Promise<void>;\nexport type OnPreWatchSlot = SlotRegistry<OnPreWatch>;\n\nexport default async function provideWorkspace(\n  [\n    pubsub,\n    cli,\n    scope,\n    component,\n    isolator,\n    dependencyResolver,\n    variants,\n    loggerExt,\n    graphql,\n    ui,\n    bundler,\n    aspectLoader,\n    envs,\n  ]: WorkspaceDeps,\n  config: WorkspaceExtConfig,\n  [onComponentLoadSlot, onComponentChangeSlot, onComponentAddSlot, onComponentRemoveSlot, onPreWatchSlot]: [\n    OnComponentLoadSlot,\n    OnComponentChangeSlot,\n    OnComponentAddSlot,\n    OnComponentRemoveSlot,\n    OnPreWatchSlot\n  ],\n  harmony: Harmony\n) {\n  const bitConfig: any = harmony.config.get('teambit.harmony/bit');\n  const consumer = await getConsumer(bitConfig.cwd);\n  if (!consumer) return undefined;\n  // TODO: get the 'workspace' name in a better way\n  const logger = loggerExt.createLogger(EXT_NAME);\n  const workspace = new Workspace(\n    pubsub,\n    config,\n    consumer,\n    scope,\n    component,\n    dependencyResolver,\n    variants,\n    aspectLoader,\n    logger,\n    undefined,\n    harmony,\n    onComponentLoadSlot,\n    onComponentChangeSlot,\n    envs,\n    onComponentAddSlot,\n    onComponentRemoveSlot,\n    onPreWatchSlot,\n    graphql\n  );\n\n  const getWorkspacePolicyFromPackageJson = () => {\n    const packageJson = workspace.consumer.packageJson?.packageJsonObject || {};\n    const policyFromPackageJson = dependencyResolver.getWorkspacePolicyFromPackageJson(packageJson);\n    return policyFromPackageJson;\n  };\n\n  dependencyResolver.registerRootPolicy(getWorkspacePolicyFromPackageJson());\n\n  consumer.onCacheClear.push(() => workspace.clearCache());\n\n  LegacyComponentLoader.registerOnComponentLoadSubscriber(\n    async (legacyComponent: ConsumerComponent, opts?: { loadDocs?: boolean }) => {\n      const id = await workspace.resolveComponentId(legacyComponent.id);\n      const newComponent = await workspace.get(id, legacyComponent, true, true, opts);\n      return newComponent.state._consumer;\n    }\n  );\n\n  ConsumerComponent.registerOnComponentConfigLoading(EXT_NAME, async (id) => {\n    const componentId = await workspace.resolveComponentId(id);\n    // We call here directly workspace.scope.get instead of workspace.get because part of the workspace get is loading consumer component\n    // which in turn run this event, which will make an infinite loop\n    // This component from scope here are only used for merging the extensions with the workspace components\n    const componentFromScope = await workspace.scope.get(componentId);\n    const { extensions } = await workspace.componentExtensions(componentId, componentFromScope);\n    const defaultScope = await workspace.componentDefaultScope(componentId);\n\n    const extensionsWithLegacyIdsP = extensions.map(async (extension) => {\n      const legacyEntry = extension.clone();\n      if (legacyEntry.extensionId) {\n        const compId = await workspace.resolveComponentId(legacyEntry.extensionId);\n        legacyEntry.extensionId = compId._legacy;\n        legacyEntry.newExtensionId = compId;\n      }\n\n      return legacyEntry;\n    });\n    const extensionsWithLegacyIds = await Promise.all(extensionsWithLegacyIdsP);\n\n    return {\n      defaultScope,\n      extensions: ExtensionDataList.fromArray(extensionsWithLegacyIds),\n    };\n  });\n\n  const workspaceSchema = getWorkspaceSchema(workspace, graphql);\n  ui.registerUiRoot(new WorkspaceUIRoot(workspace, bundler));\n  graphql.register(workspaceSchema);\n  const capsuleCmd = new CapsuleCmd();\n  capsuleCmd.commands = [\n    new CapsuleListCmd(isolator, workspace),\n    new CapsuleCreateCmd(workspace, isolator),\n    new CapsuleDeleteCmd(isolator, workspace),\n  ];\n  const watcher = new Watcher(workspace, pubsub);\n  const commands: CommandList = [\n    new EjectConfCmd(workspace),\n    capsuleCmd,\n    new WatchCommand(pubsub, logger, watcher),\n    new UseCmd(workspace),\n  ];\n\n  commands.push(new PatternCommand(workspace));\n  cli.register(...commands);\n  component.registerHost(workspace);\n\n  cli.registerOnStart(async () => {\n    await workspace.importCurrentLaneIfMissing();\n    await workspace.loadAspects(\n      aspectLoader.getNotLoadedConfiguredExtensions(),\n      undefined,\n      'workspace.cli.registerOnStart'\n    );\n  });\n\n  // add sub-commands \"set\" and \"unset\" to envs command.\n  const envsCommand = cli.getCommand('envs');\n  envsCommand?.commands?.push(new EnvsSetCmd(workspace)); // bit envs set\n  envsCommand?.commands?.push(new EnvsUnsetCmd(workspace)); // bit envs unset\n  envsCommand?.commands?.push(new EnvsReplaceCmd(workspace)); // bit envs replace\n\n  // add sub-command \"set\" to scope command.\n  const scopeCommand = cli.getCommand('scope');\n  scopeCommand?.commands?.push(new ScopeSetCmd(workspace));\n\n  return workspace;\n}\n\n/**\n * don't use loadConsumer() here, which throws ConsumerNotFound because some commands don't require\n * the consumer to be available. such as, `bit init` or `bit list --remote`.\n * most of the commands do need the consumer. the legacy commands that need the consumer throw an\n * error when is missing. in the new/Harmony commands, such as `bis compile`, the workspace object\n * is passed to the provider, so before using it, make sure it exists.\n * keep in mind that you can't verify it in the provider itself, because the provider is running\n * always for all commands before anything else is happening.\n */\nasync function getConsumer(path?: string): Promise<Consumer | undefined> {\n  return loadConsumerIfExist(path);\n}\n"],"mappings":"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"}