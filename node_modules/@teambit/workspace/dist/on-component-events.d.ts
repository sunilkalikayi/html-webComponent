import { Component, ComponentID, AspectData } from '@teambit/component';
import { CompilationInitiator } from '@teambit/compiler';
import { ComponentLoadOptions } from '@teambit/legacy/dist/consumer/component/component-loader';
export declare type SerializableResults = {
    results: any;
    toString: () => string;
};
export declare type OnComponentChange = (component: Component, files: string[], initiator?: CompilationInitiator) => Promise<SerializableResults>;
export declare type OnComponentAdd = (component: Component, files: string[]) => Promise<SerializableResults>;
export declare type OnComponentRemove = (componentId: ComponentID) => Promise<SerializableResults>;
export declare type OnComponentEventResult = {
    extensionId: string;
    results: SerializableResults;
};
export declare type OnComponentLoad = (component: Component, loadOpts?: ComponentLoadOptions) => Promise<AspectData | undefined>;
