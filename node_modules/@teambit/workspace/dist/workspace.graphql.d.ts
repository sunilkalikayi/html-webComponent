import { GraphqlMain } from '@teambit/graphql';
import { Workspace } from './workspace';
import { WorkspaceComponent } from './workspace-component';
declare const _default: (workspace: Workspace, graphql: GraphqlMain) => {
    typeDefs: import("graphql").DocumentNode;
    resolvers: {
        Subscription: {
            componentAdded: {
                subscribe: () => AsyncIterator<unknown, any, undefined>;
            };
            componentChanged: {
                subscribe: () => AsyncIterator<unknown, any, undefined>;
            };
            componentRemoved: {
                subscribe: () => AsyncIterator<unknown, any, undefined>;
            };
        };
        Component: {
            status: (wsComponent: WorkspaceComponent) => Promise<import("./workspace-component").ComponentStatus>;
            issuesCount: (wsComponent: WorkspaceComponent) => number;
            issues: (wsComponent: WorkspaceComponent) => {
                type: string;
                description: string;
                data: string;
            }[] | undefined;
        };
        Workspace: {
            path: (ws: any) => any;
            name: (ws: any) => any;
            icon: (ws: any) => any;
            components: (ws: Workspace, { offset, limit }: {
                offset: number;
                limit: number;
            }) => Promise<import("@teambit/component").Component[]>;
            getComponent: (ws: Workspace, { id }: {
                id: string;
            }) => Promise<import("@teambit/component").Component | null>;
        };
        Query: {
            workspace: () => Workspace;
        };
    };
};
export default _default;
