"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WorkspaceUIRoot = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
class WorkspaceUIRoot {
  constructor(
  /**
   * workspace extension.
   */
  workspace,
  /**
   * bundler extension
   */
  bundler) {
    this.workspace = workspace;
    this.bundler = bundler;
    (0, _defineProperty2().default)(this, "priority", true);
    (0, _defineProperty2().default)(this, "buildOptions", {
      ssr: false,
      launchBrowserOnStart: true
    });
  }
  get name() {
    return this.workspace.name;
  }
  get path() {
    return this.workspace.path;
  }
  get configFile() {
    return 'workspace.json';
  }
  async resolveAspects(runtimeName, componentIds, opts) {
    return this.workspace.resolveAspects(runtimeName, componentIds, opts);
  }

  // TODO: @gilad please implement with variants.
  resolvePattern(pattern) {
    return this.workspace.byPattern(pattern);
  }
  getConfig() {
    return {};
  }

  /**
   * proxy to `workspace.componentDir()`
   */
  componentDir(componentId, bitMapOptions, options = {
    relative: false
  }) {
    return this.workspace.componentDir(componentId, bitMapOptions, options);
  }
}
exports.WorkspaceUIRoot = WorkspaceUIRoot;

//# sourceMappingURL=workspace.ui-root.js.map