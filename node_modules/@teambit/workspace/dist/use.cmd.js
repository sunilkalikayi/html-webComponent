"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UseCmd = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _chalk() {
  const data = _interopRequireDefault(require("chalk"));
  _chalk = function () {
    return data;
  };
  return data;
}
class UseCmd {
  constructor(workspace) {
    this.workspace = workspace;
    (0, _defineProperty2().default)(this, "name", 'use <component-id>');
    (0, _defineProperty2().default)(this, "group", 'collaborate');
    (0, _defineProperty2().default)(this, "description", 'set aspects in the workspace/scope config to make them loadable by the workspace/scope');
    (0, _defineProperty2().default)(this, "arguments", [{
      name: 'component-id',
      description: 'the component ID of the aspect'
    }]);
    (0, _defineProperty2().default)(this, "alias", '');
    (0, _defineProperty2().default)(this, "options", []);
    (0, _defineProperty2().default)(this, "loader", true);
    (0, _defineProperty2().default)(this, "migration", true);
    (0, _defineProperty2().default)(this, "remoteOp", true);
  }
  async report([id]) {
    const aspectIdAdded = await this.workspace.use(id);
    return _chalk().default.green(`aspect "${aspectIdAdded}" has been saved into the workspace.jsonc file.`);
  }
}
exports.UseCmd = UseCmd;

//# sourceMappingURL=use.cmd.js.map