/// <reference types="react" />
import { NavLinkProps } from '@teambit/base-ui.routing.nav-link';
import { ComponentUI } from '@teambit/component';
import { Harmony, SlotRegistry } from '@teambit/harmony';
import { RouteSlot } from '@teambit/ui-foundation.ui.react-router.slot-router';
import { RouteProps } from 'react-router-dom';
export declare type ComponentCompareNav = {
    props: NavLinkProps;
    order: number;
};
export declare type ComponentCompareNavSlot = SlotRegistry<Array<ComponentCompareNav>>;
export declare class ComponentCompareUI {
    private host;
    private navSlot;
    private routeSlot;
    constructor(host: string, navSlot: ComponentCompareNavSlot, routeSlot: RouteSlot);
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    static slots: (((registerFn: () => string) => SlotRegistry<ComponentCompareNavSlot>) | ((registerFn: () => string) => SlotRegistry<RouteSlot>))[];
    static dependencies: import("@teambit/harmony").Aspect[];
    getComponentComparePage: () => JSX.Element;
    registerNavigation(route: ComponentCompareNav | Array<ComponentCompareNav>): this;
    registerRoutes(routes: RouteProps[]): this;
    static provider([componentUi]: [ComponentUI], _: any, [navSlot, routeSlot]: [ComponentCompareNavSlot, RouteSlot], harmony: Harmony): Promise<ComponentCompareUI>;
}
