{"version":3,"names":["componentCompareSchema","componentCompareMain","typeDefs","gql","resolvers","ComponentHost","compareComponent","_","baseId","compareId","compare","ComponentCompareResult","id","result","code","fileName","filter","codeFile","filePath","map","c","baseContent","fromContent","compareContent","toContent"],"sources":["component-compare.graphql.ts"],"sourcesContent":["import gql from 'graphql-tag';\nimport { ComponentCompareMain, ComponentCompareResult } from './component-compare.main.runtime';\n\nexport function componentCompareSchema(componentCompareMain: ComponentCompareMain) {\n  return {\n    typeDefs: gql`\n      type FileCompareResult {\n        fileName: String!\n        baseContent: String!\n        compareContent: String!\n        status: String\n        diffOutput: String\n      }\n\n      type ComponentCompareResult {\n        # unique id for graphql - baseId + compareId\n        id: String!\n        code(fileName: String): [FileCompareResult!]!\n      }\n\n      extend type ComponentHost {\n        compareComponent(baseId: String!, compareId: String!): ComponentCompareResult\n      }\n    `,\n    resolvers: {\n      ComponentHost: {\n        compareComponent: async (_, { baseId, compareId }: { baseId: string; compareId: string }) => {\n          return componentCompareMain.compare(baseId, compareId);\n        },\n      },\n      ComponentCompareResult: {\n        id: (result: ComponentCompareResult) => result.id,\n        code: (result: ComponentCompareResult, { fileName }: { fileName?: string }) => {\n          if (fileName) {\n            return result.code\n              .filter((codeFile) => codeFile.filePath === fileName)\n              .map((c) => ({ ...c, fileName: c.filePath, baseContent: c.fromContent, compareContent: c.toContent }));\n          }\n\n          return result.code.map((c) => ({\n            ...c,\n            fileName: c.filePath,\n            baseContent: c.fromContent,\n            compareContent: c.toContent,\n          }));\n        },\n      },\n    },\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA8B;AAAA;AAGvB,SAASA,sBAAsB,CAACC,oBAA0C,EAAE;EACjF,OAAO;IACLC,QAAQ,EAAE,IAAAC,qBAAG,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACDC,SAAS,EAAE;MACTC,aAAa,EAAE;QACbC,gBAAgB,EAAE,OAAOC,CAAC,EAAE;UAAEC,MAAM;UAAEC;QAAiD,CAAC,KAAK;UAC3F,OAAOR,oBAAoB,CAACS,OAAO,CAACF,MAAM,EAAEC,SAAS,CAAC;QACxD;MACF,CAAC;MACDE,sBAAsB,EAAE;QACtBC,EAAE,EAAGC,MAA8B,IAAKA,MAAM,CAACD,EAAE;QACjDE,IAAI,EAAE,CAACD,MAA8B,EAAE;UAAEE;QAAgC,CAAC,KAAK;UAC7E,IAAIA,QAAQ,EAAE;YACZ,OAAOF,MAAM,CAACC,IAAI,CACfE,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,QAAQ,KAAKH,QAAQ,CAAC,CACpDI,GAAG,CAAEC,CAAC,oCAAWA,CAAC;cAAEL,QAAQ,EAAEK,CAAC,CAACF,QAAQ;cAAEG,WAAW,EAAED,CAAC,CAACE,WAAW;cAAEC,cAAc,EAAEH,CAAC,CAACI;YAAS,EAAG,CAAC;UAC1G;UAEA,OAAOX,MAAM,CAACC,IAAI,CAACK,GAAG,CAAEC,CAAC,oCACpBA,CAAC;YACJL,QAAQ,EAAEK,CAAC,CAACF,QAAQ;YACpBG,WAAW,EAAED,CAAC,CAACE,WAAW;YAC1BC,cAAc,EAAEH,CAAC,CAACI;UAAS,EAC3B,CAAC;QACL;MACF;IACF;EACF,CAAC;AACH"}