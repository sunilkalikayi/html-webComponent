"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.symbol.description.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ComponentIssuesCmd = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _chalk() {
  const data = _interopRequireDefault(require("chalk"));
  _chalk = function () {
    return data;
  };
  return data;
}
class ComponentIssuesCmd {
  constructor(issues) {
    this.issues = issues;
    (0, _defineProperty2().default)(this, "name", 'component-issues');
    (0, _defineProperty2().default)(this, "description", 'list available component-issues');
    (0, _defineProperty2().default)(this, "alias", '');
    (0, _defineProperty2().default)(this, "group", 'development');
    (0, _defineProperty2().default)(this, "options", [['j', 'json', 'json format']]);
    (0, _defineProperty2().default)(this, "loader", true);
  }
  async report() {
    const results = await this.json();
    return results.map(result => `${_chalk().default.bold(result.name)}
${result.description}
Possible solution: ${result.solution}
Is Tag/Snap blocker: ${result.isTagBlocker ? 'yes' : 'no'}
`).join('\n');
  }
  async json() {
    return this.issues.listIssues();
  }
}
exports.ComponentIssuesCmd = ComponentIssuesCmd;

//# sourceMappingURL=issues-cmd.js.map