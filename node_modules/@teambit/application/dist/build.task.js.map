{"version":3,"names":["BUILD_TASK","ARTIFACTS_DIR_NAME","AppsBuildTask","constructor","application","opt","deploy","ApplicationAspect","id","execute","context","apps","listApps","capsuleNetwork","componentsResults","mapSeries","app","aspectId","getAppAspect","name","undefined","capsule","seedersCapsules","getCapsuleIgnoreVersion","ComponentID","fromString","build","component","appDeployContext","Object","assign","appComponent","artifactsDir","getArtifactDirectory","deployContext","defaultArtifacts","getDefaultArtifactDef","applicationType","artifacts","concat","componentResult","errors","warnings","_metadata","flatMap","res","filter","a","_componentsResults","map","join","CAPSULE_ARTIFACTS_DIR","nameSuffix","globPatterns","rootDir"],"sources":["build.task.ts"],"sourcesContent":["import { join } from 'path';\nimport mapSeries from 'p-map-series';\nimport {\n  BuildTask,\n  BuiltTaskResult,\n  BuildContext,\n  ComponentResult,\n  ArtifactDefinition,\n  CAPSULE_ARTIFACTS_DIR,\n} from '@teambit/builder';\nimport { ComponentID } from '@teambit/component';\nimport { ApplicationAspect } from './application.aspect';\nimport { ApplicationMain } from './application.main.runtime';\nimport { AppBuildContext } from './app-build-context';\n\nexport const BUILD_TASK = 'build_application';\nexport const ARTIFACTS_DIR_NAME = 'apps';\n\nexport type AppsResults = {\n  componentResult: ComponentResult;\n  artifacts?: ArtifactDefinition[];\n};\n\nexport type Options = {\n  deploy: boolean;\n};\nexport class AppsBuildTask implements BuildTask {\n  name = BUILD_TASK;\n  aspectId = ApplicationAspect.id;\n  readonly location = 'end';\n  constructor(private application: ApplicationMain, private opt: Options = { deploy: true }) {}\n\n  async execute(context: BuildContext): Promise<BuiltTaskResult> {\n    const apps = this.application.listApps();\n    const { capsuleNetwork } = context;\n    const componentsResults = await mapSeries(apps, async (app): Promise<AppsResults | undefined> => {\n      const aspectId = this.application.getAppAspect(app.name);\n      if (!aspectId) return undefined;\n      const capsule = capsuleNetwork.seedersCapsules.getCapsuleIgnoreVersion(ComponentID.fromString(aspectId));\n      if (!capsule || !app.build) return undefined;\n      const { component } = capsule;\n      const appDeployContext: AppBuildContext = Object.assign(context, {\n        capsule,\n        appComponent: component,\n        name: app.name,\n        artifactsDir: this.getArtifactDirectory(),\n      });\n      const deployContext = await app.build(appDeployContext);\n      const defaultArtifacts: ArtifactDefinition[] = this.getDefaultArtifactDef(app.applicationType || app.name);\n      const artifacts = defaultArtifacts.concat(deployContext.artifacts || []);\n\n      return {\n        artifacts,\n        componentResult: {\n          component: capsule.component,\n          errors: deployContext.errors,\n          warnings: deployContext.warnings,\n          /**\n           * @guysaar223\n           * @ram8\n           * TODO: we need to think how to pass private metadata between build pipes, maybe create shared context\n           * or create new deploy context on builder\n           */\n          // @ts-ignore\n          _metadata: { deployContext },\n        },\n      };\n    });\n\n    const artifacts = componentsResults\n      .flatMap((res) => {\n        return res?.artifacts;\n      })\n      .filter((a) => !!a) as ArtifactDefinition[];\n    const _componentsResults = componentsResults\n      .map((res) => {\n        return res?.componentResult;\n      })\n      .filter((a) => !!a) as ComponentResult[];\n    return {\n      artifacts,\n      componentsResults: _componentsResults,\n    };\n  }\n\n  private getArtifactDirectory() {\n    return join(CAPSULE_ARTIFACTS_DIR, ARTIFACTS_DIR_NAME);\n  }\n\n  private getDefaultArtifactDef(nameSuffix: string): ArtifactDefinition[] {\n    return [\n      {\n        name: `app-build-${nameSuffix}`,\n        globPatterns: ['**'],\n        rootDir: this.getArtifactDirectory(),\n      },\n    ];\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAQA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAIO,MAAMA,UAAU,GAAG,mBAAmB;AAAC;AACvC,MAAMC,kBAAkB,GAAG,MAAM;AAAC;AAUlC,MAAMC,aAAa,CAAsB;EAI9CC,WAAW,CAASC,WAA4B,EAAUC,GAAY,GAAG;IAAEC,MAAM,EAAE;EAAK,CAAC,EAAE;IAAA,KAAvEF,WAA4B,GAA5BA,WAA4B;IAAA,KAAUC,GAAY,GAAZA,GAAY;IAAA,8CAH/DL,UAAU;IAAA,kDACNO,gCAAiB,CAACC,EAAE;IAAA,kDACX,KAAK;EACmE;EAE5F,MAAMC,OAAO,CAACC,OAAqB,EAA4B;IAC7D,MAAMC,IAAI,GAAG,IAAI,CAACP,WAAW,CAACQ,QAAQ,EAAE;IACxC,MAAM;MAAEC;IAAe,CAAC,GAAGH,OAAO;IAClC,MAAMI,iBAAiB,GAAG,MAAM,IAAAC,qBAAS,EAACJ,IAAI,EAAE,MAAOK,GAAG,IAAuC;MAC/F,MAAMC,QAAQ,GAAG,IAAI,CAACb,WAAW,CAACc,YAAY,CAACF,GAAG,CAACG,IAAI,CAAC;MACxD,IAAI,CAACF,QAAQ,EAAE,OAAOG,SAAS;MAC/B,MAAMC,OAAO,GAAGR,cAAc,CAACS,eAAe,CAACC,uBAAuB,CAACC,wBAAW,CAACC,UAAU,CAACR,QAAQ,CAAC,CAAC;MACxG,IAAI,CAACI,OAAO,IAAI,CAACL,GAAG,CAACU,KAAK,EAAE,OAAON,SAAS;MAC5C,MAAM;QAAEO;MAAU,CAAC,GAAGN,OAAO;MAC7B,MAAMO,gBAAiC,GAAGC,MAAM,CAACC,MAAM,CAACpB,OAAO,EAAE;QAC/DW,OAAO;QACPU,YAAY,EAAEJ,SAAS;QACvBR,IAAI,EAAEH,GAAG,CAACG,IAAI;QACda,YAAY,EAAE,IAAI,CAACC,oBAAoB;MACzC,CAAC,CAAC;MACF,MAAMC,aAAa,GAAG,MAAMlB,GAAG,CAACU,KAAK,CAACE,gBAAgB,CAAC;MACvD,MAAMO,gBAAsC,GAAG,IAAI,CAACC,qBAAqB,CAACpB,GAAG,CAACqB,eAAe,IAAIrB,GAAG,CAACG,IAAI,CAAC;MAC1G,MAAMmB,SAAS,GAAGH,gBAAgB,CAACI,MAAM,CAACL,aAAa,CAACI,SAAS,IAAI,EAAE,CAAC;MAExE,OAAO;QACLA,SAAS;QACTE,eAAe,EAAE;UACfb,SAAS,EAAEN,OAAO,CAACM,SAAS;UAC5Bc,MAAM,EAAEP,aAAa,CAACO,MAAM;UAC5BC,QAAQ,EAAER,aAAa,CAACQ,QAAQ;UAChC;AACV;AACA;AACA;AACA;AACA;UACU;UACAC,SAAS,EAAE;YAAET;UAAc;QAC7B;MACF,CAAC;IACH,CAAC,CAAC;IAEF,MAAMI,SAAS,GAAGxB,iBAAiB,CAChC8B,OAAO,CAAEC,GAAG,IAAK;MAChB,OAAOA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEP,SAAS;IACvB,CAAC,CAAC,CACDQ,MAAM,CAAEC,CAAC,IAAK,CAAC,CAACA,CAAC,CAAyB;IAC7C,MAAMC,kBAAkB,GAAGlC,iBAAiB,CACzCmC,GAAG,CAAEJ,GAAG,IAAK;MACZ,OAAOA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEL,eAAe;IAC7B,CAAC,CAAC,CACDM,MAAM,CAAEC,CAAC,IAAK,CAAC,CAACA,CAAC,CAAsB;IAC1C,OAAO;MACLT,SAAS;MACTxB,iBAAiB,EAAEkC;IACrB,CAAC;EACH;EAEQf,oBAAoB,GAAG;IAC7B,OAAO,IAAAiB,YAAI,EAACC,gCAAqB,EAAElD,kBAAkB,CAAC;EACxD;EAEQmC,qBAAqB,CAACgB,UAAkB,EAAwB;IACtE,OAAO,CACL;MACEjC,IAAI,EAAG,aAAYiC,UAAW,EAAC;MAC/BC,YAAY,EAAE,CAAC,IAAI,CAAC;MACpBC,OAAO,EAAE,IAAI,CAACrB,oBAAoB;IACpC,CAAC,CACF;EACH;AACF;AAAC"}