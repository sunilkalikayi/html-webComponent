{"version":3,"names":["DEPLOY_TASK","DeployTask","constructor","application","builder","ApplicationAspect","id","execute","context","apps","listApps","componentsResults","mapSeries","app","aspectId","getAppAspect","name","undefined","capsule","capsuleNetwork","seedersCapsules","getCapsuleIgnoreVersion","ComponentID","fromString","component","buildTask","getBuildTask","previousTasksResults","envRuntime","componentResults","find","res","isEqual","ignoreVersion","_metadata","deployContext","appDeployContext","Object","assign","appComponent","deploy","componentResult","_componentsResults","map","filter","a","taskResults","runtime","task","env","BUILD_TASK"],"sources":["deploy.task.ts"],"sourcesContent":["import mapSeries from 'p-map-series';\nimport { BuilderMain, BuildTask, BuildContext, ComponentResult, TaskResults } from '@teambit/builder';\nimport { ComponentID } from '@teambit/component';\nimport { ApplicationAspect } from './application.aspect';\nimport { ApplicationMain } from './application.main.runtime';\nimport { BUILD_TASK } from './build.task';\nimport { AppDeployContext } from './app-deploy-context';\n\nexport const DEPLOY_TASK = 'deploy_application';\n\nexport class DeployTask implements BuildTask {\n  name = DEPLOY_TASK;\n  aspectId = ApplicationAspect.id;\n  readonly location = 'end';\n  constructor(private application: ApplicationMain, private builder: BuilderMain) {}\n\n  async execute(context: BuildContext): Promise<any> {\n    const apps = this.application.listApps();\n    const componentsResults = await mapSeries(apps, async (app): Promise<any> => {\n      const aspectId = this.application.getAppAspect(app.name);\n      if (!aspectId) return undefined;\n      const capsule = context.capsuleNetwork.seedersCapsules.getCapsuleIgnoreVersion(ComponentID.fromString(aspectId));\n      if (!capsule || !capsule?.component) return undefined;\n      const buildTask = this.getBuildTask(context.previousTasksResults, context.envRuntime.id);\n      if (!buildTask) return undefined;\n      const componentResults = buildTask.componentsResults.find((res) =>\n        res.component.id.isEqual(capsule.component.id, { ignoreVersion: true })\n      );\n      /**\n       * @guysaar223\n       * @ram8\n       * TODO: we need to think how to pass private metadata between build pipes, maybe create shared context\n       * or create new deploy context on builder\n       */\n      // @ts-ignore\n      const _metadata = componentResults?._metadata?.deployContext || {};\n      const appDeployContext: AppDeployContext = Object.assign(context, _metadata, {\n        capsule,\n        appComponent: capsule.component,\n      });\n      if (!app.deploy) return undefined;\n      await app.deploy(appDeployContext);\n\n      return {\n        componentResult: { component: capsule.component },\n      };\n    });\n\n    const _componentsResults = componentsResults\n      .map((res) => {\n        return res?.componentResult;\n      })\n      .filter((a) => !!a) as ComponentResult[];\n\n    return {\n      componentsResults: _componentsResults,\n    };\n  }\n\n  private getBuildTask(taskResults: TaskResults[], runtime: string) {\n    return taskResults.find(\n      ({ task, env }) => task.aspectId === ApplicationAspect.id && task.name === BUILD_TASK && env.id === runtime\n    );\n  }\n}\n"],"mappings":"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"}