"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.flat-map.js");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.array.unscopables.flat-map.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AppListCmd = exports.AppCmd = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _chalk() {
  const data = _interopRequireDefault(require("chalk"));
  _chalk = function () {
    return data;
  };
  return data;
}
function _cliTable() {
  const data = require("@teambit/cli-table");
  _cliTable = function () {
    return data;
  };
  return data;
}
// eslint-disable-next-line max-classes-per-file

// import { Logger } from '@teambit/logger';

class AppListCmd {
  constructor(applicationAspect) {
    this.applicationAspect = applicationAspect;
    (0, _defineProperty2().default)(this, "name", 'list');
    (0, _defineProperty2().default)(this, "description", 'list all registered apps');
    (0, _defineProperty2().default)(this, "alias", '');
    (0, _defineProperty2().default)(this, "group", 'apps');
    (0, _defineProperty2().default)(this, "options", [['j', 'json', 'return the component data in json format']]);
  }
  async report(args, {
    json
  }) {
    const appComponents = this.applicationAspect.mapApps();
    if (json) return JSON.stringify(appComponents, null, 2);
    if (!appComponents.length) return _chalk().default.yellow('no apps found');
    const rows = appComponents.flatMap(([id, apps]) => {
      return apps.map(app => [id, app.name]);
    });
    const table = new (_cliTable().CLITable)(['id', 'name'], rows);
    return table.render();
  }
}
exports.AppListCmd = AppListCmd;
class AppCmd {
  constructor() {
    (0, _defineProperty2().default)(this, "name", 'app <sub-command>');
    (0, _defineProperty2().default)(this, "description", 'Manages apps');
    (0, _defineProperty2().default)(this, "alias", '');
    (0, _defineProperty2().default)(this, "group", 'apps');
    (0, _defineProperty2().default)(this, "commands", []);
    (0, _defineProperty2().default)(this, "options", []);
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  async report(args) {
    // it should never be here. Yargs throws an error before reaching this method.
    return `Please specify a sub-command`;
  }
}
exports.AppCmd = AppCmd;

//# sourceMappingURL=app.cmd.js.map