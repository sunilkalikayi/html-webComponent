{"version":3,"names":["ApplicationMain","constructor","appSlot","appTypeSlot","deploymentProviderSlot","envs","componentAspect","appService","aspectLoader","workspace","logger","dev","ssr","watch","defaultPortRange","registerApp","app","register","listApps","flatten","values","mapApps","toArray","listAppsById","id","undefined","get","toString","getAppById","apps","head","getApp","appName","find","name","getAppByNameOrId","appNameOrId","byName","byId","length","BitError","registerAppType","appType","plugin","AppTypePlugin","registerPlugins","getAppAspect","getAppOrThrow","AppNotFound","computeOptions","opts","defaultOpts","runApp","options","context","createAppContext","runSsr","AppNoSsr","result","port","run","watcher","watchAll","preCompile","catch","err","error","errors","getAppIdOrThrow","maybeApp","ComponentID","fromString","host","getHost","components","list","component","c","isEqual","env","createEnvironment","res","results","data","hostRootDir","getComponentPackagePath","appContext","AppContext","path","provider","cli","loggerAspect","builder","config","createLogger","ApplicationAspect","AppService","application","appCmd","AppCmd","commands","AppListCmd","RunCmd","AppPlugin","registerBuildTasks","AppsBuildTask","registerSnapTasks","DeployTask","registerTagTasks","registerGroup","AppListCmdDeprecated","onComponentLoad","loadedComponent","type","applicationType","MainRuntime","CLIAspect","LoggerAspect","BuilderAspect","EnvsAspect","ComponentAspect","AspectLoaderAspect","WorkspaceAspect","Slot","withType","addRuntime"],"sources":["application.main.runtime.ts"],"sourcesContent":["import { MainRuntime, CLIMain, CLIAspect } from '@teambit/cli';\nimport { flatten, head } from 'lodash';\nimport { AspectLoaderMain, AspectLoaderAspect } from '@teambit/aspect-loader';\nimport { Slot, SlotRegistry } from '@teambit/harmony';\nimport WorkspaceAspect, { Workspace } from '@teambit/workspace';\nimport { BitError } from '@teambit/bit-error';\nimport { BuilderAspect, BuilderMain } from '@teambit/builder';\nimport { Logger, LoggerAspect, LoggerMain } from '@teambit/logger';\nimport { EnvsAspect, EnvsMain } from '@teambit/envs';\nimport ComponentAspect, { ComponentMain, ComponentID } from '@teambit/component';\nimport { ApplicationType } from './application-type';\nimport { Application } from './application';\nimport { DeploymentProvider } from './deployment-provider';\nimport { AppNotFound } from './exceptions';\nimport { ApplicationAspect } from './application.aspect';\nimport { AppListCmdDeprecated } from './app-list.cmd';\nimport { AppsBuildTask } from './build.task';\nimport { RunCmd } from './run.cmd';\nimport { AppService } from './application.service';\nimport { AppCmd, AppListCmd } from './app.cmd';\nimport { AppPlugin } from './app.plugin';\nimport { AppTypePlugin } from './app-type.plugin';\nimport { AppContext } from './app-context';\nimport { DeployTask } from './deploy.task';\nimport { AppNoSsr } from './exceptions/app-no-ssr';\n\nexport type ApplicationTypeSlot = SlotRegistry<ApplicationType<unknown>[]>;\nexport type ApplicationSlot = SlotRegistry<Application[]>;\nexport type DeploymentProviderSlot = SlotRegistry<DeploymentProvider[]>;\n\nexport type ApplicationAspectConfig = {};\n\nexport type ServeAppOptions = {\n  /**\n   * default port range used to serve applications.\n   */\n  defaultPortRange?: [start: number, end: number];\n\n  /**\n   * determine whether to start the application in dev mode.\n   */\n  dev: boolean;\n\n  /**\n   * actively watch and compile the workspace (like the bit watch command)\n   * @default true\n   */\n  watch?: boolean;\n\n  /**\n   * determine whether to start the application in server side mode.\n   * @default false\n   */\n  ssr?: boolean;\n};\n\nexport class ApplicationMain {\n  constructor(\n    private appSlot: ApplicationSlot,\n    // TODO unused\n    private appTypeSlot: ApplicationTypeSlot,\n    private deploymentProviderSlot: DeploymentProviderSlot,\n    private envs: EnvsMain,\n    private componentAspect: ComponentMain,\n    private appService: AppService,\n    private aspectLoader: AspectLoaderMain,\n    private workspace: Workspace,\n    private logger: Logger\n  ) {}\n\n  /**\n   * register a new app.\n   */\n  registerApp(app: Application) {\n    this.appSlot.register([app]);\n    return this;\n  }\n\n  /**\n   * list all registered apps.\n   */\n  listApps(): Application[] {\n    return flatten(this.appSlot.values());\n  }\n\n  /**\n   * map all apps by component ID.\n   */\n  mapApps() {\n    return this.appSlot.toArray();\n  }\n\n  /**\n   * list apps by a component id.\n   */\n  listAppsById(id?: ComponentID): Application[] | undefined {\n    if (!id) return undefined;\n    return this.appSlot.get(id.toString());\n  }\n\n  /**\n   * get an application by a component id.\n   */\n  getAppById(id: ComponentID) {\n    const apps = this.listAppsById(id);\n    if (!apps) return undefined;\n    return head(apps);\n  }\n\n  /**\n   * get an app.\n   */\n  getApp(appName: string, id?: ComponentID): Application | undefined {\n    const apps = this.listAppsById(id) || this.listApps();\n    return apps.find((app) => app.name === appName);\n  }\n\n  getAppByNameOrId(appNameOrId: string): Application | undefined {\n    const byName = this.getApp(appNameOrId);\n    if (byName) return byName;\n    const byId = this.appSlot.get(appNameOrId);\n    if (!byId || !byId.length) return undefined;\n    if (byId.length > 1) {\n      throw new BitError(\n        `unable to figure out what app to retrieve. the id \"${appNameOrId}\" has more than one app. please use the app-name`\n      );\n    }\n    return byId[0];\n  }\n\n  /**\n   * registers a new app and sets a plugin for it.\n   */\n  registerAppType<T>(appType: ApplicationType<T>) {\n    const plugin = new AppTypePlugin(`*.${appType.name}.*`, appType, this.appSlot);\n    this.aspectLoader.registerPlugins([plugin]);\n    this.appTypeSlot.register([appType]);\n    return this;\n  }\n\n  /**\n   * get an app AspectId.\n   */\n  getAppAspect(appName: string): string | undefined {\n    return this.appSlot.toArray().find(([, apps]) => apps.find((app) => app.name === appName))?.[0];\n  }\n\n  /**\n   * get app to throw.\n   */\n  getAppOrThrow(appName: string) {\n    const app = this.getAppByNameOrId(appName);\n    if (!app) throw new AppNotFound(appName);\n    return app;\n  }\n\n  defaultOpts: ServeAppOptions = {\n    dev: false,\n    ssr: false,\n    watch: true,\n    defaultPortRange: [3100, 3500],\n  };\n  private computeOptions(opts: Partial<ServeAppOptions> = {}) {\n    return {\n      ...this.defaultOpts,\n      ...opts,\n    };\n  }\n\n  async runApp(appName: string, options?: ServeAppOptions) {\n    options = this.computeOptions(options);\n    const app = this.getAppOrThrow(appName);\n    const context = await this.createAppContext(app.name);\n    if (!context) throw new AppNotFound(appName);\n\n    if (options.ssr) {\n      if (!app.runSsr) throw new AppNoSsr(appName);\n\n      const result = await app.runSsr(context);\n      return { app, ...result };\n    }\n\n    const port = await app.run(context);\n    if (options.watch) {\n      this.workspace.watcher\n        .watchAll({\n          preCompile: false,\n        })\n        .catch((err) => {\n          // don't throw an error, we don't want to break the \"run\" process\n          this.logger.error(`compilation failed`, err);\n        });\n    }\n    return { app, port, errors: undefined };\n  }\n\n  /**\n   * get the component ID of a certain app.\n   */\n  getAppIdOrThrow(appName: string) {\n    const maybeApp = this.appSlot.toArray().find(([, apps]) => {\n      return apps.find((app) => app.name === appName);\n    });\n\n    if (!maybeApp) throw new AppNotFound(appName);\n    return ComponentID.fromString(maybeApp[0]);\n  }\n\n  private async createAppContext(appName: string): Promise<AppContext> {\n    const host = this.componentAspect.getHost();\n    const components = await host.list();\n    const id = this.getAppIdOrThrow(appName);\n    const component = components.find((c) => c.id.isEqual(id));\n    if (!component) throw new AppNotFound(appName);\n    // console.log(comp)\n\n    const env = await this.envs.createEnvironment([component]);\n    const res = await env.run(this.appService);\n    const context = res.results[0].data;\n    if (!context) throw new AppNotFound(appName);\n    const hostRootDir = this.workspace.getComponentPackagePath(component);\n    const appContext = new AppContext(appName, context.dev, component, this.workspace.path, context, hostRootDir);\n    return appContext;\n  }\n\n  static runtime = MainRuntime;\n  static dependencies = [\n    CLIAspect,\n    LoggerAspect,\n    BuilderAspect,\n    EnvsAspect,\n    ComponentAspect,\n    AspectLoaderAspect,\n    WorkspaceAspect,\n  ];\n\n  static slots = [\n    Slot.withType<ApplicationType<unknown>[]>(),\n    Slot.withType<Application[]>(),\n    Slot.withType<DeploymentProvider[]>(),\n  ];\n\n  static async provider(\n    [cli, loggerAspect, builder, envs, component, aspectLoader, workspace]: [\n      CLIMain,\n      LoggerMain,\n      BuilderMain,\n      EnvsMain,\n      ComponentMain,\n      AspectLoaderMain,\n      Workspace\n    ],\n    config: ApplicationAspectConfig,\n    [appTypeSlot, appSlot, deploymentProviderSlot]: [ApplicationTypeSlot, ApplicationSlot, DeploymentProviderSlot]\n  ) {\n    const logger = loggerAspect.createLogger(ApplicationAspect.id);\n    const appService = new AppService();\n    const application = new ApplicationMain(\n      appSlot,\n      appTypeSlot,\n      deploymentProviderSlot,\n      envs,\n      component,\n      appService,\n      aspectLoader,\n      workspace,\n      logger\n    );\n    const appCmd = new AppCmd();\n    appCmd.commands = [new AppListCmd(application), new RunCmd(application, logger)];\n    aspectLoader.registerPlugins([new AppPlugin(appSlot)]);\n    builder.registerBuildTasks([new AppsBuildTask(application)]);\n    builder.registerSnapTasks([new DeployTask(application, builder)]);\n    builder.registerTagTasks([new DeployTask(application, builder)]);\n    cli.registerGroup('apps', 'Applications');\n    cli.register(new RunCmd(application, logger), new AppListCmdDeprecated(application), appCmd);\n    if (workspace) {\n      workspace.onComponentLoad(async (loadedComponent) => {\n        const app = application.getAppById(loadedComponent.id);\n        if (!app) return {};\n        return {\n          appName: app?.name,\n          type: app?.applicationType,\n        };\n      });\n    }\n\n    return application;\n  }\n}\n\nApplicationAspect.addRuntime(ApplicationMain);\n"],"mappings":"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"}