"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AppListCmdDeprecated = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _chalk() {
  const data = _interopRequireDefault(require("chalk"));
  _chalk = function () {
    return data;
  };
  return data;
}
function _cliTable() {
  const data = require("@teambit/cli-table");
  _cliTable = function () {
    return data;
  };
  return data;
}
// import { Logger } from '@teambit/logger';

/**
 * @deprecated use AppListCmd class
 */
class AppListCmdDeprecated {
  constructor(applicationAspect) {
    this.applicationAspect = applicationAspect;
    (0, _defineProperty2().default)(this, "name", 'app-list');
    (0, _defineProperty2().default)(this, "description", 'DEPRECATED. use "bit app list"');
    (0, _defineProperty2().default)(this, "alias", '');
    (0, _defineProperty2().default)(this, "private", true);
    (0, _defineProperty2().default)(this, "group", 'apps');
    (0, _defineProperty2().default)(this, "options", [['j', 'json', 'return the component data in json format']]);
  }
  async report(args, {
    json
  }) {
    const apps = this.applicationAspect.listApps();
    if (json) return JSON.stringify(apps, null, 2);
    const deprecationStr = `this command is deprecated. please use "bit app list" instead\n`;
    // eslint-disable-next-line no-console
    console.log(_chalk().default.red());
    if (!apps.length) return _chalk().default.yellow(`${deprecationStr}no apps found`);
    const rows = apps.map(app => {
      return [app.name];
    });
    const table = new (_cliTable().CLITable)([], rows);
    return deprecationStr + table.render();
  }
}
exports.AppListCmdDeprecated = AppListCmdDeprecated;

//# sourceMappingURL=app-list.cmd.js.map