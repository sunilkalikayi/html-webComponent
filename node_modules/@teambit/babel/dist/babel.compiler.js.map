{"version":3,"names":["BabelCompiler","constructor","id","logger","compiler","options","babelModule","babel","distDir","distGlobPatterns","shouldCopyNonSupportedFiles","artifactName","supportedFilesGlobPatterns","flatten","version","getDistDir","transpileFile","fileContent","supportedExtensions","fileExtension","path","extname","filePath","includes","endsWith","transformOptions","babelTransformOptions","context","rootDir","componentDir","outputFiles","transpileFileContent","build","capsules","capsuleNetwork","seedersCapsules","componentsResults","longProcessLogger","createLongProcessLogger","length","mapSeries","capsule","currentComponentResult","errors","component","logProgress","toString","buildOneCapsule","push","artifacts","getArtifactDefinition","createTask","name","componentResult","startTime","Date","now","sourceFiles","filesystem","files","map","file","relative","fs","ensureDir","join","Promise","all","isFileSupported","absoluteFilePath","sourceFileName","basename","filename","result","transpileFilePathAsync","debug","distPath","replaceFileExtToJs","distPathMap","outputFile","outputText","err","endTime","generatedBy","globPatterns","getDistPathBySrcPath","srcPath","fileWithJSExtIfNeeded","multimatch","displayConfig","JSON","stringify"],"sources":["babel.compiler.ts"],"sourcesContent":["import * as babel from '@babel/core';\nimport multimatch from 'multimatch';\nimport { flatten } from 'lodash';\nimport mapSeries from 'p-map-series';\nimport fs from 'fs-extra';\nimport { BuildContext, BuiltTaskResult, ComponentResult } from '@teambit/builder';\nimport { Compiler, CompilerMain, TranspileFileParams, TranspileFileOutput } from '@teambit/compiler';\nimport { Capsule } from '@teambit/isolator';\nimport { Logger } from '@teambit/logger';\nimport path from 'path';\nimport {\n  isFileSupported,\n  transpileFileContent,\n  transpileFilePathAsync,\n  replaceFileExtToJs,\n  TranspileContext,\n} from '@teambit/compilation.modules.babel-compiler';\nimport { BabelCompilerOptions } from './compiler-options';\n\nexport class BabelCompiler implements Compiler {\n  distDir: string;\n  distGlobPatterns: string[];\n  shouldCopyNonSupportedFiles: boolean;\n  artifactName: string;\n  supportedFilesGlobPatterns: string[] | null;\n  constructor(\n    readonly id: string,\n    private logger: Logger,\n    private compiler: CompilerMain,\n    private options: BabelCompilerOptions,\n    private babelModule = babel\n  ) {\n    this.distDir = options.distDir || 'dist';\n    this.distGlobPatterns = options.distGlobPatterns || [`${this.distDir}/**`, `!${this.distDir}/tsconfig.tsbuildinfo`];\n    this.shouldCopyNonSupportedFiles =\n      typeof options.shouldCopyNonSupportedFiles === 'boolean' ? options.shouldCopyNonSupportedFiles : true;\n    this.artifactName = options.artifactName || 'dist';\n    this.supportedFilesGlobPatterns = options.supportedFilesGlobPatterns\n      ? flatten(options.supportedFilesGlobPatterns)\n      : null;\n  }\n\n  displayName = 'Babel';\n  deleteDistDir = false;\n\n  version() {\n    return this.babelModule.version;\n  }\n\n  getDistDir() {\n    return this.distDir;\n  }\n\n  /**\n   * compile one file on the workspace\n   */\n  transpileFile(fileContent: string, options: TranspileFileParams): TranspileFileOutput {\n    const supportedExtensions = ['.ts', '.tsx', '.js', '.jsx'];\n    const fileExtension = path.extname(options.filePath);\n    if (!supportedExtensions.includes(fileExtension) || options.filePath.endsWith('.d.ts')) {\n      return null; // file is not supported\n    }\n    const transformOptions = this.options.babelTransformOptions || {};\n    const context: TranspileContext = {\n      filePath: options.filePath,\n      rootDir: options.componentDir,\n    };\n    const outputFiles = transpileFileContent(fileContent, context, transformOptions, this.babelModule);\n    return outputFiles;\n  }\n\n  /**\n   * compile multiple components on the capsules\n   */\n  async build(context: BuildContext): Promise<BuiltTaskResult> {\n    const capsules = context.capsuleNetwork.seedersCapsules;\n    const componentsResults: ComponentResult[] = [];\n    const longProcessLogger = this.logger.createLongProcessLogger('compile babel components', capsules.length);\n    await mapSeries(capsules, async (capsule) => {\n      const currentComponentResult: ComponentResult = {\n        errors: [],\n        component: capsule.component,\n      };\n      longProcessLogger.logProgress(capsule.component.id.toString());\n      await this.buildOneCapsule(capsule, currentComponentResult);\n      componentsResults.push({ ...currentComponentResult });\n    });\n\n    return {\n      artifacts: this.getArtifactDefinition(),\n      componentsResults,\n    };\n  }\n\n  createTask(name = 'BabelCompiler') {\n    return this.compiler.createTask(name, this);\n  }\n\n  private async buildOneCapsule(capsule: Capsule, componentResult: ComponentResult) {\n    componentResult.startTime = Date.now();\n    const sourceFiles = capsule.component.filesystem.files.map((file) => file.relative);\n    await fs.ensureDir(path.join(capsule.path, this.distDir));\n    await Promise.all(\n      sourceFiles.map(async (filePath) => {\n        if (this.isFileSupported(filePath)) {\n          const absoluteFilePath = path.join(capsule.path, filePath);\n          this.options.babelTransformOptions ||= {};\n          this.options.babelTransformOptions.sourceFileName = path.basename(filePath);\n          this.options.babelTransformOptions.filename = path.basename(filePath);\n          try {\n            const result = await transpileFilePathAsync(\n              absoluteFilePath,\n              this.options.babelTransformOptions || {},\n              this.babelModule\n            );\n            if (!result || !result.length) {\n              this.logger.debug(\n                `getting an empty response from Babel for the file ${filePath}. it might be configured to be ignored`\n              );\n              return;\n            }\n            // Make sure to get only the relative path of the dist because we want to add the dist dir.\n            // If we use the result outputPath we will get an absolute path here\n            const distPath = this.replaceFileExtToJs(filePath);\n            const distPathMap = `${distPath}.map`;\n            await fs.outputFile(path.join(capsule.path, this.distDir, distPath), result[0].outputText);\n            if (result.length > 1) {\n              await fs.outputFile(path.join(capsule.path, this.distDir, distPathMap), result[1].outputText);\n            }\n          } catch (err: any) {\n            componentResult.errors?.push(err);\n          }\n        }\n      })\n    );\n    componentResult.endTime = Date.now();\n  }\n\n  getArtifactDefinition() {\n    return [\n      {\n        generatedBy: this.id,\n        name: this.artifactName,\n        globPatterns: this.distGlobPatterns,\n      },\n    ];\n  }\n\n  /**\n   * given a source file, return its parallel in the dists. e.g. index.ts => dist/index.js\n   */\n  getDistPathBySrcPath(srcPath: string) {\n    const fileWithJSExtIfNeeded = this.replaceFileExtToJs(srcPath);\n    return path.join(this.distDir, fileWithJSExtIfNeeded);\n  }\n\n  /**\n   * whether babel is able to compile the given path\n   */\n  isFileSupported(filePath: string): boolean {\n    if (this.supportedFilesGlobPatterns) {\n      return isFileSupported(filePath) && !!multimatch(filePath, this.supportedFilesGlobPatterns).length;\n    }\n    return isFileSupported(filePath);\n  }\n\n  displayConfig() {\n    return JSON.stringify(this.options.babelTransformOptions || {}, null, 2);\n  }\n\n  private replaceFileExtToJs(filePath: string): string {\n    if (!this.isFileSupported(filePath)) return filePath;\n    return replaceFileExtToJs(filePath);\n  }\n}\n"],"mappings":"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"}