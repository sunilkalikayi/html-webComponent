"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BabelMain = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _cli() {
  const data = require("@teambit/cli");
  _cli = function () {
    return data;
  };
  return data;
}
function _compiler() {
  const data = require("@teambit/compiler");
  _compiler = function () {
    return data;
  };
  return data;
}
function _logger() {
  const data = require("@teambit/logger");
  _logger = function () {
    return data;
  };
  return data;
}
function babel() {
  const data = _interopRequireWildcard(require("@babel/core"));
  babel = function () {
    return data;
  };
  return data;
}
function _babel() {
  const data = require("./babel.aspect");
  _babel = function () {
    return data;
  };
  return data;
}
function _babel2() {
  const data = require("./babel.compiler");
  _babel2 = function () {
    return data;
  };
  return data;
}
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
class BabelMain {
  constructor(logger, compiler) {
    this.logger = logger;
    this.compiler = compiler;
  }
  createCompiler(options, babelModule = babel()) {
    return new (_babel2().BabelCompiler)(_babel().BabelAspect.id, this.logger, this.compiler, options, babelModule);
  }
  getPackageJsonProps() {
    return {
      main: 'dist/{main}.js'
    };
  }
  static async provider([loggerExt, compiler]) {
    const logger = loggerExt.createLogger(_babel().BabelAspect.id);
    return new BabelMain(logger, compiler);
  }
}
exports.BabelMain = BabelMain;
(0, _defineProperty2().default)(BabelMain, "runtime", _cli().MainRuntime);
(0, _defineProperty2().default)(BabelMain, "dependencies", [_logger().LoggerAspect, _compiler().CompilerAspect]);
_babel().BabelAspect.addRuntime(BabelMain);

//# sourceMappingURL=babel.main.runtime.js.map