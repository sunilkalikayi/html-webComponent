import { CompilerMain } from '@teambit/compiler';
import { Logger, LoggerMain } from '@teambit/logger';
import * as babel from '@babel/core';
import { BabelCompilerOptions } from './compiler-options';
import { BabelCompiler } from './babel.compiler';
export declare class BabelMain {
    private logger;
    private compiler;
    constructor(logger: Logger, compiler: CompilerMain);
    createCompiler(options: BabelCompilerOptions, babelModule?: typeof babel): BabelCompiler;
    getPackageJsonProps(): {
        main: string;
    };
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    static dependencies: import("@teambit/harmony").Aspect[];
    static provider([loggerExt, compiler]: [LoggerMain, CompilerMain]): Promise<BabelMain>;
}
