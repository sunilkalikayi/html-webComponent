{"version":3,"names":["ComponentCompiler","constructor","pubsub","workspace","component","compilerInstance","compilerId","logger","dependencyResolver","dists","compileErrors","compile","noThrow","options","dataToPersist","deleteDistDir","DataToPersist","distDir","distDirs","removePath","RemovePath","addBasePath","path","persistAllToFS","compilers","canTranspileFile","find","c","transpileFile","canTranspileComponent","transpileComponent","Promise","all","filesystem","files","map","file","compileOneFile","initiator","compileAllFiles","Error","toString","throwOnCompileErrors","addManyFiles","buildResults","distFile","state","_consumer","compiler","loader","succeed","pub","CompilerAspect","id","ComponentCompilationOnDoneEvent","length","forEach","errorItem","error","formatError","err","join","CompilerErrorEvent","console","message","packageName","componentIdToPackageName","packageDir","distDirName","getDistDir","DEFAULT_DIST_DIRNAME","injectedDirs","getInjectedDirs","dist","relativeCompDir","componentDir","undefined","relative","filePath","isFileSupported","compileResults","contents","push","base","result","Dist","outputPath","Buffer","from","outputText","shouldCopyNonSupportedFiles","filesToCompile","outputDir","getComponentPackagePath","WorkspaceCompiler","envs","aspectLoader","ui","registerOnComponentChange","onComponentChange","bind","registerOnComponentAdd","registerOnPreWatch","onPreWatch","registerPreStart","onPreStart","registerOnAspectLoadErrorSlot","onAspectLoadFail","preStartOpts","skipCompilation","compileComponents","changed","verbose","CompilationInitiator","PreStart","code","AspectLoadFail","ComponentChanged","results","components","watchOpts","preCompile","start","Date","now","_legacy","PreWatch","end","consoleSuccess","componentsIds","ConsumerNotFound","componentIds","getIdsToCompile","getMany","componentsCompilers","environment","getEnv","env","getCompiler","componentMap","getComponentDir","compilerName","name","resultOnWorkspace","mapSeries","componentCompiler","resolveMultipleComponentIds","getNewAndModifiedIds","getAllComponentIds"],"sources":["workspace-compiler.ts"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nimport mapSeries from 'p-map-series';\nimport { Component, ComponentID } from '@teambit/component';\nimport { EnvsMain } from '@teambit/envs';\nimport type { PubsubMain } from '@teambit/pubsub';\nimport { SerializableResults, Workspace, WatchOptions } from '@teambit/workspace';\nimport path from 'path';\nimport { BitId } from '@teambit/legacy-bit-id';\nimport { Logger } from '@teambit/logger';\nimport loader from '@teambit/legacy/dist/cli/loader';\nimport { DEFAULT_DIST_DIRNAME } from '@teambit/legacy/dist/constants';\nimport { AbstractVinyl, Dist } from '@teambit/legacy/dist/consumer/component/sources';\nimport DataToPersist from '@teambit/legacy/dist/consumer/component/sources/data-to-persist';\nimport { AspectLoaderMain } from '@teambit/aspect-loader';\nimport { DependencyResolverMain } from '@teambit/dependency-resolver';\nimport { ConsumerNotFound } from '@teambit/legacy/dist/consumer/exceptions';\nimport componentIdToPackageName from '@teambit/legacy/dist/utils/bit/component-id-to-package-name';\nimport RemovePath from '@teambit/legacy/dist/consumer/component/sources/remove-path';\nimport { UiMain } from '@teambit/ui';\nimport type { PreStartOpts } from '@teambit/ui';\nimport { PathOsBasedAbsolute, PathOsBasedRelative } from '@teambit/legacy/dist/utils/path';\nimport { MultiCompiler } from '@teambit/multi-compiler';\nimport { CompilerAspect } from './compiler.aspect';\nimport { CompilerErrorEvent, ComponentCompilationOnDoneEvent } from './events';\nimport { Compiler, CompilationInitiator } from './types';\n\nexport type BuildResult = { component: string; buildResults: string[] | null | undefined };\n\nexport type CompileOptions = {\n  changed?: boolean; // compile only new and modified components\n  verbose?: boolean; // show more data, such as, dist paths\n  /**\n   * whether the dist root dir should be deleted before writing new dists.\n   * defaults to true for `bit compile` and false everywhere else, such as `bit watch` and `bit\n   * start` to avoid webpack \"EINTR\" error.\n   */\n  deleteDistDir?: boolean;\n  initiator: CompilationInitiator; // describes where the compilation is coming from\n};\n\nexport type CompileError = { path: string; error: Error };\n\nexport class ComponentCompiler {\n  constructor(\n    private pubsub: PubsubMain,\n    private workspace: Workspace,\n    private component: Component,\n    private compilerInstance: Compiler,\n    private compilerId: string,\n    private logger: Logger,\n    private dependencyResolver: DependencyResolverMain,\n    private dists: Dist[] = [],\n    private compileErrors: CompileError[] = []\n  ) {}\n\n  async compile(noThrow = true, options: CompileOptions): Promise<BuildResult> {\n    let dataToPersist;\n    const deleteDistDir = options.deleteDistDir ?? this.compilerInstance.deleteDistDir;\n    // delete dist folder before transpilation (because some compilers (like ngPackagr) can generate files there during the compilation process)\n    if (deleteDistDir) {\n      dataToPersist = new DataToPersist();\n      for (const distDir of await this.distDirs()) {\n        dataToPersist.removePath(new RemovePath(distDir));\n      }\n      dataToPersist.addBasePath(this.workspace.path);\n      await dataToPersist.persistAllToFS();\n    }\n\n    const compilers: Compiler[] = (this.compilerInstance as MultiCompiler).compilers\n      ? (this.compilerInstance as MultiCompiler).compilers\n      : [this.compilerInstance];\n    const canTranspileFile = compilers.find((c) => c.transpileFile);\n    const canTranspileComponent = compilers.find((c) => c.transpileComponent);\n\n    if (canTranspileFile) {\n      await Promise.all(\n        this.component.filesystem.files.map((file: AbstractVinyl) => this.compileOneFile(file, options.initiator))\n      );\n    }\n\n    if (canTranspileComponent) {\n      await this.compileAllFiles(this.component, options.initiator);\n    }\n\n    if (!canTranspileFile && !canTranspileComponent) {\n      throw new Error(\n        `compiler ${this.compilerId.toString()} doesn't implement either \"transpileFile\" or \"transpileComponent\" methods`\n      );\n    }\n    this.throwOnCompileErrors(noThrow);\n\n    // writing the dists with `component.setDists(dists); component.dists.writeDists` is tricky\n    // as it uses other base-paths and doesn't respect the new node-modules base path.\n    dataToPersist = new DataToPersist();\n    dataToPersist.addManyFiles(this.dists);\n    dataToPersist.addBasePath(this.workspace.path);\n    await dataToPersist.persistAllToFS();\n    const buildResults = this.dists.map((distFile) => distFile.path);\n    if (this.component.state._consumer.compiler) loader.succeed();\n    this.pubsub.pub(\n      CompilerAspect.id,\n      new ComponentCompilationOnDoneEvent(this.compileErrors, this.component, buildResults)\n    );\n    return { component: this.component.id.toString(), buildResults };\n  }\n\n  private throwOnCompileErrors(noThrow = true) {\n    if (this.compileErrors.length) {\n      this.compileErrors.forEach((errorItem) => {\n        this.logger.error(`compilation error at ${errorItem.path}`, errorItem.error);\n      });\n      const formatError = (errorItem) => `${errorItem.path}\\n${errorItem.error}`;\n      const err = new Error(`compilation failed. see the following errors from the compiler\n${this.compileErrors.map(formatError).join('\\n')}`);\n\n      this.pubsub.pub(CompilerAspect.id, new CompilerErrorEvent(err));\n\n      if (!noThrow) {\n        throw err;\n      }\n\n      this.logger.console(err.message);\n    }\n  }\n\n  private async distDirs(): Promise<PathOsBasedRelative[]> {\n    const packageName = componentIdToPackageName(this.component.state._consumer);\n    const packageDir = path.join('node_modules', packageName);\n    const distDirName = this.compilerInstance.getDistDir?.() || DEFAULT_DIST_DIRNAME;\n    const injectedDirs = await this.getInjectedDirs(packageName);\n    return [packageDir, ...injectedDirs].map((dist) => path.join(dist, distDirName));\n  }\n\n  private async getInjectedDirs(packageName: string): Promise<PathOsBasedRelative[]> {\n    const relativeCompDir = this.workspace.componentDir(this.component.id, undefined, {\n      relative: true,\n    });\n    return this.dependencyResolver.getInjectedDirs(this.workspace.path, relativeCompDir, packageName);\n  }\n\n  private get componentDir(): PathOsBasedAbsolute {\n    return this.workspace.componentDir(this.component.id);\n  }\n\n  private async compileOneFile(file: AbstractVinyl, initiator: CompilationInitiator): Promise<void> {\n    const options = { componentDir: this.componentDir, filePath: file.relative, initiator };\n    const isFileSupported = this.compilerInstance.isFileSupported(file.path);\n    let compileResults;\n    if (isFileSupported) {\n      try {\n        compileResults = this.compilerInstance.transpileFile?.(file.contents.toString(), options);\n      } catch (error: any) {\n        this.compileErrors.push({ path: file.path, error });\n        return;\n      }\n    }\n    for (const base of await this.distDirs()) {\n      if (isFileSupported && compileResults) {\n        this.dists.push(\n          ...compileResults.map(\n            (result) =>\n              new Dist({\n                base,\n                path: path.join(base, result.outputPath),\n                contents: Buffer.from(result.outputText),\n              })\n          )\n        );\n      } else if (this.compilerInstance.shouldCopyNonSupportedFiles) {\n        // compiler doesn't support this file type. copy the file as is to the dist dir.\n        this.dists.push(new Dist({ base, path: path.join(base, file.relative), contents: file.contents }));\n      }\n    }\n  }\n\n  private async compileAllFiles(component: Component, initiator: CompilationInitiator): Promise<void> {\n    const filesToCompile: AbstractVinyl[] = [];\n    for (const base of await this.distDirs()) {\n      component.filesystem.files.forEach((file: AbstractVinyl) => {\n        const isFileSupported = this.compilerInstance.isFileSupported(file.path);\n        if (isFileSupported) {\n          filesToCompile.push(file);\n        } else if (this.compilerInstance.shouldCopyNonSupportedFiles) {\n          // compiler doesn't support this file type. copy the file as is to the dist dir.\n          this.dists.push(\n            new Dist({\n              base,\n              path: path.join(base, file.relative),\n              contents: file.contents,\n            })\n          );\n        }\n      });\n    }\n\n    if (filesToCompile.length) {\n      try {\n        await this.compilerInstance.transpileComponent?.({\n          component,\n          componentDir: this.componentDir,\n          outputDir: this.workspace.getComponentPackagePath(component),\n          initiator,\n        });\n      } catch (error: any) {\n        this.compileErrors.push({ path: this.componentDir, error });\n      }\n    }\n  }\n}\n\nexport class WorkspaceCompiler {\n  constructor(\n    private workspace: Workspace,\n    private envs: EnvsMain,\n    private pubsub: PubsubMain,\n    private aspectLoader: AspectLoaderMain,\n    private ui: UiMain,\n    private logger: Logger,\n    private dependencyResolver: DependencyResolverMain\n  ) {\n    if (this.workspace) {\n      this.workspace.registerOnComponentChange(this.onComponentChange.bind(this));\n      this.workspace.registerOnComponentAdd(this.onComponentChange.bind(this));\n      this.workspace.registerOnPreWatch(this.onPreWatch.bind(this));\n      this.ui.registerPreStart(this.onPreStart.bind(this));\n    }\n    if (this.aspectLoader) {\n      this.aspectLoader.registerOnAspectLoadErrorSlot(this.onAspectLoadFail.bind(this));\n    }\n  }\n\n  async onPreStart(preStartOpts: PreStartOpts): Promise<void> {\n    if (preStartOpts.skipCompilation) {\n      return;\n    }\n    await this.compileComponents([], {\n      changed: true,\n      verbose: false,\n      deleteDistDir: false,\n      initiator: CompilationInitiator.PreStart,\n    });\n  }\n\n  async onAspectLoadFail(err: Error & { code?: string }, id: ComponentID): Promise<boolean> {\n    if (err.code && err.code === 'MODULE_NOT_FOUND' && this.workspace) {\n      await this.compileComponents([id.toString()], { initiator: CompilationInitiator.AspectLoadFail }, true);\n      return true;\n    }\n    return false;\n  }\n\n  async onComponentChange(\n    component: Component,\n    files: string[],\n    initiator?: CompilationInitiator\n  ): Promise<SerializableResults> {\n    const buildResults = await this.compileComponents(\n      [component.id.toString()],\n      { initiator: initiator || CompilationInitiator.ComponentChanged },\n      true\n    );\n    return {\n      results: buildResults,\n      toString() {\n        return `${buildResults[0]?.buildResults?.join('\\n\\t')}`;\n      },\n    };\n  }\n\n  async onPreWatch(components: Component[], watchOpts: WatchOptions) {\n    if (watchOpts.preCompile) {\n      const start = Date.now();\n      this.logger.console(`compiling ${components.length} components`);\n      await this.compileComponents(\n        components.map((c) => c.id._legacy),\n        { initiator: CompilationInitiator.PreWatch }\n      );\n      const end = Date.now() - start;\n      this.logger.consoleSuccess(`compiled ${components.length} components successfully (${end / 1000} sec)`);\n    }\n  }\n\n  async compileComponents(\n    componentsIds: string[] | BitId[] | ComponentID[], // when empty, it compiles new+modified (unless options.all is set),\n    options: CompileOptions,\n    noThrow?: boolean\n  ): Promise<BuildResult[]> {\n    if (!this.workspace) throw new ConsumerNotFound();\n    const componentIds = await this.getIdsToCompile(componentsIds, options.changed);\n    const components = await this.workspace.getMany(componentIds);\n\n    const componentsCompilers: ComponentCompiler[] = [];\n    components.forEach((c) => {\n      const environment = this.envs.getEnv(c).env;\n      const compilerInstance = environment.getCompiler?.();\n      // if there is no componentDir (e.g. author that added files, not dir), then we can't write the dists\n      // inside the component dir.\n      if (compilerInstance && c.state._consumer.componentMap?.getComponentDir()) {\n        const compilerName = compilerInstance.constructor.name || 'compiler';\n        componentsCompilers.push(\n          new ComponentCompiler(\n            this.pubsub,\n            this.workspace,\n            c,\n            compilerInstance,\n            compilerName,\n            this.logger,\n            this.dependencyResolver\n          )\n        );\n      }\n    });\n    const resultOnWorkspace = await mapSeries(componentsCompilers, (componentCompiler) =>\n      componentCompiler.compile(noThrow, options)\n    );\n\n    return resultOnWorkspace;\n  }\n\n  private async getIdsToCompile(\n    componentsIds: Array<string | ComponentID | BitId>,\n    changed = false\n  ): Promise<ComponentID[]> {\n    if (componentsIds.length) {\n      return this.workspace.resolveMultipleComponentIds(componentsIds);\n    }\n    if (changed) {\n      return this.workspace.getNewAndModifiedIds();\n    }\n    return this.workspace.getAllComponentIds();\n  }\n}\n"],"mappings":"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"}