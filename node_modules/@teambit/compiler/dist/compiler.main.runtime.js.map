{"version":3,"names":["CompilerMain","constructor","pubsub","workspaceCompiler","envs","builder","workspace","dependencyResolver","compileOnWorkspace","componentsIds","options","initiator","CompilationInitiator","ComponentAdded","compileComponents","createTask","name","compiler","CompilerTask","CompilerAspect","id","getDistPathBySrcPath","component","srcPath","environment","getEnv","env","compilerInstance","getCompiler","getRelativeDistFolder","getOrCalculateEnv","getDistDir","DEFAULT_DIST_DIRNAME","isDistDirExists","packageDir","getComponentPackagePath","distDir","pathToCheck","path","join","fs","existsSync","getDistsFiles","artifacts","getArtifactsVinylByAspect","length","DistArtifactNotFound","DistArtifact","addMissingDistsIssue","exist","state","issues","getOrCreate","IssuesClasses","MissingDists","data","undefined","provider","cli","loggerMain","aspectLoader","ui","generator","logger","createLogger","WorkspaceCompiler","registerService","CompilerService","compilerMain","register","CompileCmd","onComponentLoad","bind","registerComponentTemplate","compilerTemplate","ManyComponentsWriter","externalCompiler","MainRuntime","CLIAspect","WorkspaceAspect","EnvsAspect","LoggerAspect","PubsubAspect","AspectLoaderAspect","BuilderAspect","UIAspect","GeneratorAspect","DependencyResolverAspect","addRuntime"],"sources":["compiler.main.runtime.ts"],"sourcesContent":["import * as path from 'path';\nimport fs from 'fs-extra';\nimport AspectLoaderAspect, { AspectLoaderMain } from '@teambit/aspect-loader';\nimport { BuilderAspect, BuilderMain } from '@teambit/builder';\nimport { CLIAspect, CLIMain, MainRuntime } from '@teambit/cli';\nimport { IssuesClasses } from '@teambit/component-issues';\nimport { Component, ComponentID } from '@teambit/component';\nimport { DEFAULT_DIST_DIRNAME } from '@teambit/legacy/dist/constants';\nimport { EnvsAspect, EnvsMain } from '@teambit/envs';\nimport { BitId } from '@teambit/legacy-bit-id';\nimport { DependencyResolverAspect, DependencyResolverMain } from '@teambit/dependency-resolver';\nimport ManyComponentsWriter from '@teambit/legacy/dist/consumer/component-ops/many-components-writer';\nimport { LoggerAspect, LoggerMain } from '@teambit/logger';\nimport { GeneratorAspect, GeneratorMain } from '@teambit/generator';\nimport { PubsubAspect, PubsubMain } from '@teambit/pubsub';\nimport UIAspect, { UiMain } from '@teambit/ui';\nimport { Workspace, WorkspaceAspect } from '@teambit/workspace';\nimport { CompilerAspect } from './compiler.aspect';\nimport { CompileCmd } from './compiler.cmd';\nimport { CompilerService } from './compiler.service';\nimport { CompilerTask } from './compiler.task';\nimport { DistArtifact } from './dist-artifact';\nimport { DistArtifactNotFound } from './exceptions';\nimport { CompilationInitiator, Compiler } from './types';\nimport { CompileOptions, WorkspaceCompiler } from './workspace-compiler';\nimport { compilerTemplate } from './templates/compiler';\n\nexport class CompilerMain {\n  constructor(\n    private pubsub: PubsubMain,\n    private workspaceCompiler: WorkspaceCompiler,\n    private envs: EnvsMain,\n    private builder: BuilderMain,\n    private workspace: Workspace,\n    private dependencyResolver: DependencyResolverMain\n  ) {}\n\n  /**\n   * Run compilation on `bit new` and when new components are imported\n   */\n  compileOnWorkspace(\n    componentsIds: string[] | BitId[] | ComponentID[] = [], // when empty, it compiles all\n    options: CompileOptions = { initiator: CompilationInitiator.ComponentAdded }\n  ) {\n    return this.workspaceCompiler.compileComponents(componentsIds, options);\n  }\n  /**\n   * API to create a new compiler task, it facilitates the usage of multiple compilers.\n   * with this method you can create any number of compilers and add them to the buildPipeline.\n   */\n  createTask(name: string, compiler: Compiler): CompilerTask {\n    return new CompilerTask(CompilerAspect.id, name, compiler, this.dependencyResolver);\n  }\n\n  /**\n   * find the compiler configured on the workspace and ask for the dist path.\n   */\n  getDistPathBySrcPath(component: Component, srcPath: string): string | null {\n    const environment = this.envs.getEnv(component).env;\n    const compilerInstance = environment.getCompiler?.();\n    if (!compilerInstance) return null;\n    return compilerInstance.getDistPathBySrcPath(srcPath);\n  }\n\n  /**\n   * find the compiler configured on the workspace and ask for the dist folder path.\n   */\n  getRelativeDistFolder(component: Component): string {\n    const environment = this.envs.getOrCalculateEnv(component).env;\n    const compilerInstance: Compiler | undefined = environment.getCompiler?.();\n    if (!compilerInstance || !compilerInstance.getDistDir) return DEFAULT_DIST_DIRNAME;\n    return compilerInstance.getDistDir();\n  }\n\n  /**\n   * Check if the dist folder (in the component package under node_modules) exist\n   * @param component\n   * @returns\n   */\n  isDistDirExists(component: Component): boolean {\n    const packageDir = this.workspace.getComponentPackagePath(component);\n    const distDir = this.getRelativeDistFolder(component);\n    const pathToCheck = path.join(packageDir, distDir);\n    return fs.existsSync(pathToCheck);\n  }\n\n  async getDistsFiles(component: Component): Promise<DistArtifact> {\n    const artifacts = await this.builder.getArtifactsVinylByAspect(component, CompilerAspect.id);\n    if (!artifacts.length) throw new DistArtifactNotFound(component.id);\n\n    return new DistArtifact(artifacts);\n  }\n\n  async addMissingDistsIssue(component: Component) {\n    const exist = this.isDistDirExists(component);\n    if (!exist) {\n      component.state.issues.getOrCreate(IssuesClasses.MissingDists).data = true;\n    }\n    // we don't want to add any data to the compiler aspect, only to add issues on the component\n    return undefined;\n  }\n\n  static runtime = MainRuntime;\n\n  static dependencies = [\n    CLIAspect,\n    WorkspaceAspect,\n    EnvsAspect,\n    LoggerAspect,\n    PubsubAspect,\n    AspectLoaderAspect,\n    BuilderAspect,\n    UIAspect,\n    GeneratorAspect,\n    DependencyResolverAspect,\n  ];\n\n  static async provider([\n    cli,\n    workspace,\n    envs,\n    loggerMain,\n    pubsub,\n    aspectLoader,\n    builder,\n    ui,\n    generator,\n    dependencyResolver,\n  ]: [\n    CLIMain,\n    Workspace,\n    EnvsMain,\n    LoggerMain,\n    PubsubMain,\n    AspectLoaderMain,\n    BuilderMain,\n    UiMain,\n    GeneratorMain,\n    DependencyResolverMain\n  ]) {\n    const logger = loggerMain.createLogger(CompilerAspect.id);\n    const workspaceCompiler = new WorkspaceCompiler(\n      workspace,\n      envs,\n      pubsub,\n      aspectLoader,\n      ui,\n      logger,\n      dependencyResolver\n    );\n    envs.registerService(new CompilerService());\n    const compilerMain = new CompilerMain(pubsub, workspaceCompiler, envs, builder, workspace, dependencyResolver);\n    cli.register(new CompileCmd(workspaceCompiler, logger, pubsub));\n    if (workspace) {\n      workspace.onComponentLoad(compilerMain.addMissingDistsIssue.bind(compilerMain));\n    }\n    generator.registerComponentTemplate([compilerTemplate]);\n    ManyComponentsWriter.externalCompiler = compilerMain.compileOnWorkspace.bind(compilerMain);\n\n    return compilerMain;\n  }\n}\n\nCompilerAspect.addRuntime(CompilerMain);\n\nexport default CompilerMain;\n"],"mappings":"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"}