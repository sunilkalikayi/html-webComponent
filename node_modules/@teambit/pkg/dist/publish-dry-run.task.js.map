{"version":3,"names":["PublishDryRunTask","constructor","aspectId","publisher","packer","logger","execute","context","options","dryRun","capsules","capsuleNetwork","seedersCapsules","capsulesToPublish","forEach","c","shouldPublish","component","config","extensions","push","info","length","publishResults","publishMultipleCapsules","packResults","packMultipleCapsules","override","componentsResults","concat","artifacts"],"sources":["publish-dry-run.task.ts"],"sourcesContent":["import { BuildContext, BuiltTaskResult, BuildTask } from '@teambit/builder';\nimport { Logger } from '@teambit/logger';\nimport { Capsule } from '@teambit/isolator';\nimport { Publisher } from './publisher';\nimport { Packer } from './packer';\n\n/**\n * publish build task is running \"publish --dry-run\" to avoid later npm errors during export\n */\nexport class PublishDryRunTask implements BuildTask {\n  readonly name = 'PublishDryRun';\n  readonly location = 'end';\n  dependencies: string[];\n  constructor(\n    readonly aspectId: string,\n    private publisher: Publisher,\n    private packer: Packer,\n    private logger: Logger\n  ) {}\n\n  async execute(context: BuildContext): Promise<BuiltTaskResult> {\n    this.publisher.options.dryRun = true;\n    const capsules = context.capsuleNetwork.seedersCapsules;\n    // const capsulesToPublish = capsules.filter((c) => this.publisher.shouldPublish(c.component.config.extensions));\n    const capsulesToPublish: Capsule[] = [];\n    capsules.forEach((c) => {\n      const shouldPublish = this.publisher.shouldPublish(c.component.config.extensions);\n      if (shouldPublish) {\n        capsulesToPublish.push(c);\n      }\n    });\n    this.logger.info(`going to run publish dry-run on ${capsulesToPublish.length} out of ${capsules.length}`);\n\n    const publishResults = await this.publisher.publishMultipleCapsules(capsulesToPublish);\n\n    this.logger.info(`going to run pack dry-run on ${capsules.length} capsules`);\n    const packResults = await this.packer.packMultipleCapsules(capsules, { override: true }, true, true);\n\n    return {\n      componentsResults: publishResults.concat(packResults),\n      artifacts: [],\n    };\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;AAMA;AACA;AACA;AACO,MAAMA,iBAAiB,CAAsB;EAIlDC,WAAW,CACAC,QAAgB,EACjBC,SAAoB,EACpBC,MAAc,EACdC,MAAc,EACtB;IAAA,KAJSH,QAAgB,GAAhBA,QAAgB;IAAA,KACjBC,SAAoB,GAApBA,SAAoB;IAAA,KACpBC,MAAc,GAAdA,MAAc;IAAA,KACdC,MAAc,GAAdA,MAAc;IAAA,8CAPR,eAAe;IAAA,kDACX,KAAK;IAAA;EAOtB;EAEH,MAAMC,OAAO,CAACC,OAAqB,EAA4B;IAC7D,IAAI,CAACJ,SAAS,CAACK,OAAO,CAACC,MAAM,GAAG,IAAI;IACpC,MAAMC,QAAQ,GAAGH,OAAO,CAACI,cAAc,CAACC,eAAe;IACvD;IACA,MAAMC,iBAA4B,GAAG,EAAE;IACvCH,QAAQ,CAACI,OAAO,CAAEC,CAAC,IAAK;MACtB,MAAMC,aAAa,GAAG,IAAI,CAACb,SAAS,CAACa,aAAa,CAACD,CAAC,CAACE,SAAS,CAACC,MAAM,CAACC,UAAU,CAAC;MACjF,IAAIH,aAAa,EAAE;QACjBH,iBAAiB,CAACO,IAAI,CAACL,CAAC,CAAC;MAC3B;IACF,CAAC,CAAC;IACF,IAAI,CAACV,MAAM,CAACgB,IAAI,CAAE,mCAAkCR,iBAAiB,CAACS,MAAO,WAAUZ,QAAQ,CAACY,MAAO,EAAC,CAAC;IAEzG,MAAMC,cAAc,GAAG,MAAM,IAAI,CAACpB,SAAS,CAACqB,uBAAuB,CAACX,iBAAiB,CAAC;IAEtF,IAAI,CAACR,MAAM,CAACgB,IAAI,CAAE,gCAA+BX,QAAQ,CAACY,MAAO,WAAU,CAAC;IAC5E,MAAMG,WAAW,GAAG,MAAM,IAAI,CAACrB,MAAM,CAACsB,oBAAoB,CAAChB,QAAQ,EAAE;MAAEiB,QAAQ,EAAE;IAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;IAEpG,OAAO;MACLC,iBAAiB,EAAEL,cAAc,CAACM,MAAM,CAACJ,WAAW,CAAC;MACrDK,SAAS,EAAE;IACb,CAAC;EACH;AACF;AAAC"}