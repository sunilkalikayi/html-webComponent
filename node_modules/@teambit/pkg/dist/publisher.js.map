{"version":3,"names":["Publisher","constructor","isolator","logger","scope","workspace","options","publish","componentPattern","componentIds","idsByPattern","capsules","getComponentCapsules","publishMultipleCapsules","description","dryRun","longProcessLogger","createLongProcessLogger","length","results","mapSeries","capsule","logProgress","component","id","toString","publishOneCapsule","end","startTime","Date","now","publishParams","push","getTagFlagForPreRelease","extraArgs","getExtraArgsFromConfig","Array","isArray","extraArgsSplit","map","arg","split","flat","publishParamsStr","join","cwd","path","componentIdStr","errors","metadata","stdout","stderr","execa","packageManager","debug","publishedPackage","replace","err","errorMsg","error","endTime","preReleaseData","getVersionPreReleaseData","maybeIdentifier","idsToPublish","getIdsToPublish","componentIdsToPublish","resolveMultipleComponentIds","network","isolateComponents","packageManagerConfigRootDir","seedersCapsules","throwForNonStagedOrTaggedComponents","ids","BitIds","fromArray","compId","_legacy","components","getComponentsAndVersions","filter","c","shouldPublish","version","extensions","toBitId","changeVersion","versionStr","pkgExt","findExtension","PkgAspect","config","packageJson","name","publishConfig","packageManagerPublishArgs","idsWithoutScope","hasScope","allowStaged","BitError","missingFromScope","Promise","all","inScope","isComponentInScope"],"sources":["publisher.ts"],"sourcesContent":["import { ComponentResult, TaskMetadata } from '@teambit/builder';\nimport { Component, ComponentID } from '@teambit/component';\nimport { Capsule, IsolatorMain } from '@teambit/isolator';\nimport { Logger } from '@teambit/logger';\nimport { Workspace } from '@teambit/workspace';\nimport { BitIds } from '@teambit/legacy/dist/bit-id';\nimport { ExtensionDataList } from '@teambit/legacy/dist/consumer/config/extension-data';\nimport { BitError } from '@teambit/bit-error';\nimport { Scope } from '@teambit/legacy/dist/scope';\nimport mapSeries from 'p-map-series';\nimport execa from 'execa';\nimport { PkgAspect } from './pkg.aspect';\n\nexport type PublisherOptions = {\n  dryRun?: boolean;\n  allowStaged?: boolean;\n};\n\nexport class Publisher {\n  packageManager = 'npm'; // @todo: decide if this is mandatory or using the workspace settings\n  constructor(\n    private isolator: IsolatorMain,\n    private logger: Logger,\n    private scope: Scope,\n    private workspace: Workspace,\n    public options: PublisherOptions = {}\n  ) {}\n\n  async publish(componentPattern: string, options: PublisherOptions): Promise<ComponentResult[]> {\n    const componentIds = await this.workspace.idsByPattern(componentPattern);\n    this.options = options;\n    const capsules = await this.getComponentCapsules(componentIds);\n    // const capsules = await this.getComponentCapsulesFromScope(componentIds);\n    return this.publishMultipleCapsules(capsules);\n  }\n\n  public async publishMultipleCapsules(capsules: Capsule[]): Promise<ComponentResult[]> {\n    const description = `publish components${this.options.dryRun ? ' (dry-run)' : ''}`;\n    const longProcessLogger = this.logger.createLongProcessLogger(description, capsules.length);\n    const results = mapSeries(capsules, (capsule) => {\n      longProcessLogger.logProgress(capsule.component.id.toString());\n      return this.publishOneCapsule(capsule);\n    });\n    longProcessLogger.end();\n    return results;\n  }\n\n  private async publishOneCapsule(capsule: Capsule): Promise<ComponentResult> {\n    const startTime = Date.now();\n    const publishParams = ['publish'];\n    if (this.options.dryRun) publishParams.push('--dry-run');\n    publishParams.push(...this.getTagFlagForPreRelease(capsule.component.id));\n    const extraArgs = this.getExtraArgsFromConfig(capsule.component);\n    if (extraArgs && Array.isArray(extraArgs) && extraArgs?.length) {\n      const extraArgsSplit = extraArgs.map((arg) => arg.split(' ')).flat();\n      publishParams.push(...extraArgsSplit);\n    }\n    const publishParamsStr = publishParams.join(' ');\n    const cwd = capsule.path;\n    const componentIdStr = capsule.id.toString();\n    const errors: string[] = [];\n    let metadata: TaskMetadata = {};\n    try {\n      // @todo: once capsule.exec works properly, replace this\n      const { stdout, stderr } = await execa(this.packageManager, publishParams, { cwd });\n      this.logger.debug(`${componentIdStr}, successfully ran ${this.packageManager} ${publishParamsStr} at ${cwd}`);\n      this.logger.debug(`${componentIdStr}, stdout: ${stdout}`);\n      this.logger.debug(`${componentIdStr}, stderr: ${stderr}`);\n      const publishedPackage = stdout.replace('+ ', ''); // npm adds \"+ \" prefix before the published package\n      metadata = this.options.dryRun ? {} : { publishedPackage };\n    } catch (err: any) {\n      const errorMsg = `failed running ${this.packageManager} ${publishParamsStr} at ${cwd}`;\n      this.logger.error(`${componentIdStr}, ${errorMsg}`);\n      if (err.stderr) this.logger.error(`${componentIdStr}, ${err.stderr}`);\n      errors.push(`${errorMsg}\\n${err.stderr}`);\n    }\n    const component = capsule.component;\n    return { component, metadata, errors, startTime, endTime: Date.now() };\n  }\n\n  private getTagFlagForPreRelease(id: ComponentID): string[] {\n    const preReleaseData = id.getVersionPreReleaseData();\n    if (!preReleaseData) return [];\n    const maybeIdentifier = preReleaseData[0]; // it can be numeric as in 1.0.0-0.\n    if (typeof maybeIdentifier !== 'string') return [];\n    return ['--tag', maybeIdentifier];\n  }\n\n  private async getComponentCapsules(componentIds: ComponentID[]): Promise<Capsule[]> {\n    const idsToPublish = await this.getIdsToPublish(componentIds);\n    this.logger.debug(`total ${idsToPublish.length} to publish out of ${componentIds.length}`);\n    const componentIdsToPublish = await this.workspace.resolveMultipleComponentIds(idsToPublish);\n    const network = await this.isolator.isolateComponents(componentIdsToPublish, {\n      packageManagerConfigRootDir: this.workspace.path,\n    });\n    return network.seedersCapsules;\n  }\n\n  /**\n   * only components that use pkg extension and configure \"publishConfig\" with their own registry\n   * or custom \"name\", should be published. ignore the rest.\n   */\n  private async getIdsToPublish(componentIds: ComponentID[]): Promise<string[]> {\n    await this.throwForNonStagedOrTaggedComponents(componentIds);\n    const ids = BitIds.fromArray(componentIds.map((compId) => compId._legacy));\n    const components = await this.scope.getComponentsAndVersions(ids, true);\n    return components\n      .filter((c) => this.shouldPublish(c.version.extensions))\n      .map((c) => c.component.toBitId().changeVersion(c.versionStr).toString());\n  }\n\n  // TODO: consider using isPublishedToExternalRegistry from pkg.main.runtime (need to send it a component not extensions)\n  public shouldPublish(extensions: ExtensionDataList): boolean {\n    const pkgExt = extensions.findExtension(PkgAspect.id);\n    if (!pkgExt) return false;\n    return pkgExt.config?.packageJson?.name || pkgExt.config?.packageJson?.publishConfig;\n  }\n\n  private getExtraArgsFromConfig(component: Component): string | undefined {\n    const pkgExt = component.config.extensions.findExtension(PkgAspect.id);\n    return pkgExt?.config?.packageManagerPublishArgs;\n  }\n\n  private async throwForNonStagedOrTaggedComponents(componentIds: ComponentID[]) {\n    const idsWithoutScope = componentIds.filter((id) => !id._legacy.hasScope());\n    if (!idsWithoutScope.length) return;\n    if (!this.options.allowStaged && !this.options.dryRun) {\n      throw new BitError(\n        `unable to publish the following component(s), please make sure they are exported: ${idsWithoutScope.join(\n          ', '\n        )}`\n      );\n    }\n    const missingFromScope: ComponentID[] = [];\n    await Promise.all(\n      idsWithoutScope.map(async (id) => {\n        const inScope = await this.scope.isComponentInScope(id._legacy);\n        if (!inScope) {\n          missingFromScope.push(id);\n        }\n      })\n    );\n    if (missingFromScope.length) {\n      throw new BitError(\n        `unable to publish the following component(s), please make sure they are tagged: ${missingFromScope.join(', ')}`\n      );\n    }\n  }\n}\n"],"mappings":"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"}