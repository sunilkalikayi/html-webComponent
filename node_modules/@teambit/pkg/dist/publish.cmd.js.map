{"version":3,"names":["PublishCmd","constructor","publisher","name","description","COMPONENT_PATTERN_HELP","report","args","options","result","json","publishResults","data","length","publishOrDryRun","dryRun","title","chalk","white","bold","output","map","publishResult","compName","component","id","toString","getData","errors","red","join","green","metadata","publishedPackage","pattern","packResult","publish","code"],"sources":["publish.cmd.tsx"],"sourcesContent":["import { ComponentResult } from '@teambit/builder';\nimport { Command, CommandOptions } from '@teambit/cli';\nimport chalk from 'chalk';\nimport { COMPONENT_PATTERN_HELP } from '@teambit/legacy/dist/constants';\n\nimport { Publisher, PublisherOptions } from './publisher';\n\ntype PublishArgs = [string];\n\nexport class PublishCmd implements Command {\n  name = 'publish <component-pattern>';\n  description = 'publish components to npm (npm publish)';\n  arguments = [\n    {\n      name: 'component-pattern',\n      description: COMPONENT_PATTERN_HELP,\n    },\n  ];\n  options = [\n    ['d', 'dry-run', 'npm publish --dry-run'],\n    ['', 'allow-staged', 'allow publish components that were not exported yet (not recommended)'],\n    ['j', 'json', 'return the output as JSON'],\n  ] as CommandOptions;\n  alias = '';\n  private = true;\n  group = 'collaborate';\n\n  constructor(private publisher: Publisher) {}\n\n  async report(args: PublishArgs, options: PublisherOptions) {\n    const result = await this.json(args, options);\n    const publishResults: ComponentResult[] = result.data;\n    if (!publishResults.length) return 'no components were found candidate for publish';\n\n    const publishOrDryRun = options.dryRun ? 'dry-run' : 'published';\n    const title = chalk.white.bold(`successfully ${publishOrDryRun} the following components\\n`);\n    const output = publishResults\n      .map((publishResult) => {\n        const compName = publishResult.component.id.toString();\n        const getData = () => {\n          if (publishResult.errors?.length) {\n            return chalk.red(publishResult.errors.join('\\n'));\n          }\n          return chalk.green((publishResult.metadata?.publishedPackage as string) || '');\n        };\n        return `${chalk.bold(compName)}\\n${getData()}\\n`;\n      })\n      .join('\\n');\n    return title + output;\n  }\n\n  async json([pattern]: PublishArgs, options: PublisherOptions): Promise<{ data: ComponentResult[]; code: number }> {\n    const packResult = await this.publisher.publish(pattern, options);\n    return {\n      data: packResult,\n      code: 0,\n    };\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAMO,MAAMA,UAAU,CAAoB;EAkBzCC,WAAW,CAASC,SAAoB,EAAE;IAAA,KAAtBA,SAAoB,GAApBA,SAAoB;IAAA,8CAjBjC,6BAA6B;IAAA,qDACtB,yCAAyC;IAAA,mDAC3C,CACV;MACEC,IAAI,EAAE,mBAAmB;MACzBC,WAAW,EAAEC;IACf,CAAC,CACF;IAAA,iDACS,CACR,CAAC,GAAG,EAAE,SAAS,EAAE,uBAAuB,CAAC,EACzC,CAAC,EAAE,EAAE,cAAc,EAAE,uEAAuE,CAAC,EAC7F,CAAC,GAAG,EAAE,MAAM,EAAE,2BAA2B,CAAC,CAC3C;IAAA,+CACO,EAAE;IAAA,iDACA,IAAI;IAAA,+CACN,aAAa;EAEsB;EAE3C,MAAMC,MAAM,CAACC,IAAiB,EAAEC,OAAyB,EAAE;IACzD,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACC,IAAI,CAACH,IAAI,EAAEC,OAAO,CAAC;IAC7C,MAAMG,cAAiC,GAAGF,MAAM,CAACG,IAAI;IACrD,IAAI,CAACD,cAAc,CAACE,MAAM,EAAE,OAAO,gDAAgD;IAEnF,MAAMC,eAAe,GAAGN,OAAO,CAACO,MAAM,GAAG,SAAS,GAAG,WAAW;IAChE,MAAMC,KAAK,GAAGC,gBAAK,CAACC,KAAK,CAACC,IAAI,CAAE,gBAAeL,eAAgB,6BAA4B,CAAC;IAC5F,MAAMM,MAAM,GAAGT,cAAc,CAC1BU,GAAG,CAAEC,aAAa,IAAK;MACtB,MAAMC,QAAQ,GAAGD,aAAa,CAACE,SAAS,CAACC,EAAE,CAACC,QAAQ,EAAE;MACtD,MAAMC,OAAO,GAAG,MAAM;QAAA;QACpB,6BAAIL,aAAa,CAACM,MAAM,kDAApB,sBAAsBf,MAAM,EAAE;UAChC,OAAOI,gBAAK,CAACY,GAAG,CAACP,aAAa,CAACM,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD;QACA,OAAOb,gBAAK,CAACc,KAAK,CAAC,0BAACT,aAAa,CAACU,QAAQ,0DAAtB,sBAAwBC,gBAAgB,KAAe,EAAE,CAAC;MAChF,CAAC;MACD,OAAQ,GAAEhB,gBAAK,CAACE,IAAI,CAACI,QAAQ,CAAE,KAAII,OAAO,EAAG,IAAG;IAClD,CAAC,CAAC,CACDG,IAAI,CAAC,IAAI,CAAC;IACb,OAAOd,KAAK,GAAGI,MAAM;EACvB;EAEA,MAAMV,IAAI,CAAC,CAACwB,OAAO,CAAc,EAAE1B,OAAyB,EAAsD;IAChH,MAAM2B,UAAU,GAAG,MAAM,IAAI,CAACjC,SAAS,CAACkC,OAAO,CAACF,OAAO,EAAE1B,OAAO,CAAC;IACjE,OAAO;MACLI,IAAI,EAAEuB,UAAU;MAChBE,IAAI,EAAE;IACR,CAAC;EACH;AACF;AAAC"}