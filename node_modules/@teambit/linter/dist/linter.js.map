{"version":3,"names":[],"sources":["linter.ts"],"sourcesContent":["import { Component } from '@teambit/component';\nimport { LinterContext } from './linter-context';\n\nexport type ComponentLintResult = {\n  /**\n   * the linted component.\n   */\n  component: Component;\n\n  /**\n   * CLI output of the linter.\n   */\n  output: string;\n\n  /**\n   * total errors count of the component (from all of the files).\n   */\n  totalErrorCount: number;\n  /**\n   * total fatal errors count of the component (from all of the files).\n   */\n  totalFatalErrorCount?: number;\n  /**\n   * total fixable errors count of the component (from all of the files).\n   */\n  totalFixableErrorCount?: number;\n  /**\n   * total fatal warning count of the component (from all of the files).\n   */\n  totalFixableWarningCount?: number;\n  /**\n   * total warning count of the component (from all of the files).\n   */\n  totalWarningCount: number;\n\n  /**\n   * lint results for each one of the component files\n   */\n  results: LintResult[];\n};\n\nexport type LintResult = {\n  /**\n   * path of the linted file.\n   */\n  filePath: string;\n\n  /**\n   * numbers of errors found.\n   */\n  errorCount: number;\n\n  /**\n   * numbers of errors found.\n   */\n  fatalErrorCount?: number;\n\n  /**\n   * numbers of fixable errors found.\n   */\n  fixableErrorCount?: number;\n\n  /**\n   * numbers of fixable warning found.\n   */\n  fixableWarningCount?: number;\n\n  /**\n   * number of found warnings.\n   */\n  warningCount: number;\n\n  /**\n   * lint messages.\n   */\n  messages: LintMessage[];\n\n  /**\n   * Raw data as returned from the linter\n   */\n  raw: any;\n};\n\nexport type LintMessage = {\n  /**\n   * severity of the issue.\n   */\n  severity: string;\n  /**\n   * stating column of the issue.\n   */\n  column: number;\n\n  /**\n   * line of the issue.\n   */\n  line: number;\n\n  /**\n   * end column of the issue.\n   */\n  endColumn?: number;\n\n  /**\n   * end line of the issue.\n   */\n  endLine?: number;\n\n  /**\n   * message of the issue.\n   */\n  message: string;\n\n  /**\n   * lint suggestions.\n   */\n  suggestions?: string[];\n};\n\nexport type LintResults = {\n  results: ComponentLintResult[];\n  /**\n   * total errors count of the component (from all of the components).\n   */\n  totalErrorCount: number;\n  /**\n   * total fatal errors count of the component (from all of the components).\n   */\n  totalFatalErrorCount?: number;\n  /**\n   * total fixable errors count of the component (from all of the components).\n   */\n  totalFixableErrorCount?: number;\n  /**\n   * total fatal warning count of the component (from all of the components).\n   */\n  totalFixableWarningCount?: number;\n  /**\n   * total warning count of the component (from all of the components).\n   */\n  totalWarningCount: number;\n\n  totalComponentsWithErrorCount: number;\n  totalComponentsWithFatalErrorCount?: number;\n  totalComponentsWithFixableErrorCount?: number;\n  totalComponentsWithFixableWarningCount?: number;\n  totalComponentsWithWarningCount: number;\n\n  errors: Error[];\n};\n\nexport interface Linter {\n  lint(context: LinterContext): Promise<LintResults>;\n}\n"],"mappings":""}