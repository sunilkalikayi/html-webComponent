{"version":3,"names":["LintCmd","constructor","linter","componentHost","workspace","report","components","linterOptions","code","data","json","lintResults","componentsIdsToLint","title","chalk","bold","cyan","length","toString","name","componentsOutputs","results","map","lintRes","compTitle","componentId","ignoreVersion","compOutput","output","join","summary","getSummarySection","duration","seconds","summaryTitle","totalFieldsMap","itemsDataField","componentsDataField","label","summaryTotals","item","renderTotalLine","filter","Boolean","componentsCount","itemsCount","fieldLabel","undefined","green","timer","Timer","create","start","componentsIds","getIdsToLint","changed","componentsToLint","getMany","opts","fix","fixTypes","fixType","split","linterResults","lint","jsonLinterResults","toJsonLintResults","timerResponse","stop","totalErrorCount","totalFatalErrorCount","comp","id","resolveMultipleComponentIds","getNewAndModifiedIds","listIds","totalFixableErrorCount","totalFixableWarningCount","totalWarningCount","totalComponentsWithErrorCount","totalComponentsWithFatalErrorCount","totalComponentsWithFixableErrorCount","totalComponentsWithFixableWarningCount","totalComponentsWithWarningCount","newResults","res","resultsWithoutComponent","result","Object","assign","component","omit","compact","flatten","errors"],"sources":["lint.cmd.ts"],"sourcesContent":["import { TimerResponse, Timer } from '@teambit/legacy/dist/toolbox/timer';\nimport { Command, CommandOptions } from '@teambit/cli';\nimport { ComponentFactory, ComponentID } from '@teambit/component';\nimport chalk from 'chalk';\nimport { EnvsExecutionResult } from '@teambit/envs';\nimport { Workspace } from '@teambit/workspace';\nimport { compact, flatten, omit } from 'lodash';\nimport { LinterMain } from './linter.main.runtime';\nimport { ComponentLintResult, LintResults } from './linter';\nimport { FixTypes, LinterOptions } from './linter-context';\n\nexport type LintCmdOptions = {\n  changed?: boolean;\n  fix?: boolean;\n  fixType?: string;\n  json?: boolean;\n};\n\n/**\n * A type for result with componentId instead of the entire component, as when output to console, we don't want to print all the component\n */\nexport type JsonComponentLintResult = Omit<ComponentLintResult, 'component'> & {\n  componentId: ComponentID;\n};\n\nexport type JsonLintDataResults = Omit<LintResults, 'results'> & { results: JsonComponentLintResult[] };\n/**\n * A type for result with componentId instead of the entire component, as when output to console, we don't want to print all the component\n */\nexport type JsonLintResultsData = {\n  duration: TimerResponse;\n  lintResults: JsonLintDataResults;\n  componentsIdsToLint: string[];\n};\n\nexport type JsonLintResults = {\n  code: number;\n  data: JsonLintResultsData;\n};\n\nexport class LintCmd implements Command {\n  name = 'lint [component...]';\n  description = 'lint components in the development workspace';\n  group = 'development';\n  options = [\n    ['c', 'changed', 'lint only new and modified components'],\n    ['f', 'fix', 'automatically fix problems'],\n    ['', 'fix-type <fixType>', 'specify the types of fixes to apply (problem, suggestion, layout)'],\n    ['j', 'json', 'return the lint results in json format'],\n  ] as CommandOptions;\n\n  constructor(private linter: LinterMain, private componentHost: ComponentFactory, private workspace: Workspace) {}\n\n  async report([components = []]: [string[]], linterOptions: LintCmdOptions) {\n    const { code, data } = await this.json([components], linterOptions);\n    const { lintResults, componentsIdsToLint } = data;\n    const title = chalk.bold(\n      `linting total of ${chalk.cyan(componentsIdsToLint.length.toString())} component(s) in workspace '${chalk.cyan(\n        this.componentHost.name\n      )}'`\n    );\n\n    const componentsOutputs = lintResults.results\n      .map((lintRes) => {\n        const compTitle = chalk.bold.cyan(lintRes.componentId.toString({ ignoreVersion: true }));\n        const compOutput = lintRes.output;\n        return `${compTitle}\\n${compOutput}`;\n      })\n      .join('\\n');\n\n    const summary = this.getSummarySection(data);\n    return { code, data: `${title}\\n\\n${componentsOutputs}\\n\\n${summary}` };\n  }\n\n  private getSummarySection(data: JsonLintResultsData) {\n    const { duration, lintResults, componentsIdsToLint } = data;\n    const { seconds } = duration;\n    const summaryTitle = `linted ${chalk.cyan(componentsIdsToLint.length.toString())} components in ${chalk.cyan(\n      seconds.toString()\n    )} seconds`;\n\n    const totalFieldsMap = [\n      { itemsDataField: 'totalErrorCount', componentsDataField: 'totalComponentsWithErrorCount', label: 'Errors' },\n      {\n        itemsDataField: 'totalFatalErrorCount',\n        componentsDataField: 'totalComponentsWithFatalErrorCount',\n        label: 'FatalErrors',\n      },\n      {\n        itemsDataField: 'totalFixableErrorCount',\n        componentsDataField: 'totalComponentsWithFixableErrorCount',\n        label: 'FixableErrors',\n      },\n      {\n        itemsDataField: 'totalFixableWarningCount',\n        componentsDataField: 'totalComponentsWithFixableWarningCount',\n        label: 'FixableWarnings',\n      },\n      {\n        itemsDataField: 'totalWarningCount',\n        componentsDataField: 'totalComponentsWithWarningCount',\n        label: 'Warnings',\n      },\n    ];\n\n    const summaryTotals = totalFieldsMap\n      .map((item) =>\n        this.renderTotalLine(lintResults[item.componentsDataField], lintResults[item.itemsDataField], item.label)\n      )\n      .filter(Boolean)\n      .join('\\n');\n    const summary = `${summaryTitle}\\n${summaryTotals}`;\n    return summary;\n  }\n\n  private renderTotalLine(componentsCount: number, itemsCount: number, fieldLabel: string): string | undefined {\n    if (itemsCount === 0) return undefined;\n    return `total of ${chalk.green(itemsCount.toString())} ${chalk.cyan(fieldLabel)} (from ${chalk.green(\n      componentsCount.toString()\n    )} components)`;\n  }\n\n  async json([components = []]: [string[]], linterOptions: LintCmdOptions): Promise<JsonLintResults> {\n    const timer = Timer.create();\n    timer.start();\n    const componentsIds = await this.getIdsToLint(components, linterOptions.changed);\n    const componentsToLint = await this.workspace.getMany(componentsIds);\n    const opts: LinterOptions = {\n      fix: linterOptions.fix,\n      fixTypes: linterOptions.fixType ? (linterOptions.fixType.split(',') as FixTypes) : undefined,\n    };\n    const linterResults = await this.linter.lint(componentsToLint, opts);\n    const jsonLinterResults = toJsonLintResults(linterResults);\n    const timerResponse = timer.stop();\n    let code = 0;\n    if (jsonLinterResults.totalErrorCount || jsonLinterResults.totalFatalErrorCount) {\n      code = 1;\n    }\n    return {\n      code,\n      data: {\n        duration: timerResponse,\n        lintResults: jsonLinterResults,\n        componentsIdsToLint: componentsToLint.map((comp) => comp.id.toString()),\n      },\n    };\n  }\n\n  private async getIdsToLint(components: string[], changed = false): Promise<ComponentID[]> {\n    if (components.length) {\n      return this.workspace.resolveMultipleComponentIds(components);\n    }\n    if (changed) {\n      return this.workspace.getNewAndModifiedIds();\n    }\n    return this.componentHost.listIds();\n  }\n}\n\nfunction toJsonLintResults(results: EnvsExecutionResult<LintResults>): JsonLintDataResults {\n  let totalErrorCount = 0;\n  let totalFatalErrorCount = 0;\n  let totalFixableErrorCount = 0;\n  let totalFixableWarningCount = 0;\n  let totalWarningCount = 0;\n  let totalComponentsWithErrorCount = 0;\n  let totalComponentsWithFatalErrorCount = 0;\n  let totalComponentsWithFixableErrorCount = 0;\n  let totalComponentsWithFixableWarningCount = 0;\n  let totalComponentsWithWarningCount = 0;\n\n  const newResults = results.results.map((res) => {\n    const resultsWithoutComponent = res.data?.results.map((result) => {\n      return Object.assign({}, { componentId: result.component.id }, omit(result, ['component']));\n    });\n\n    if (res.data) {\n      if (res.data.totalErrorCount) {\n        totalErrorCount += res.data.totalErrorCount;\n        totalComponentsWithErrorCount += res.data.totalComponentsWithErrorCount ?? 0;\n      }\n      if (res.data.totalFatalErrorCount) {\n        totalFatalErrorCount += res.data.totalFatalErrorCount;\n        totalComponentsWithFatalErrorCount += res.data.totalComponentsWithFatalErrorCount ?? 0;\n      }\n      if (res.data.totalFixableErrorCount) {\n        totalFixableErrorCount += res.data.totalFixableErrorCount;\n        totalComponentsWithFixableErrorCount += res.data.totalComponentsWithFixableErrorCount ?? 0;\n      }\n      if (res.data.totalFixableWarningCount) {\n        totalFixableWarningCount += res.data.totalFixableWarningCount;\n        totalComponentsWithFixableWarningCount += res.data.totalComponentsWithFixableWarningCount ?? 0;\n      }\n      if (res.data.totalWarningCount) {\n        totalWarningCount += res.data.totalWarningCount;\n        totalComponentsWithWarningCount += res.data.totalComponentsWithWarningCount ?? 0;\n      }\n    }\n\n    return compact(resultsWithoutComponent);\n  });\n  return {\n    results: compact(flatten(newResults)),\n    totalErrorCount,\n    totalFatalErrorCount,\n    totalFixableErrorCount,\n    totalFixableWarningCount,\n    totalWarningCount,\n    totalComponentsWithErrorCount,\n    totalComponentsWithFatalErrorCount,\n    totalComponentsWithFixableErrorCount,\n    totalComponentsWithFixableWarningCount,\n    totalComponentsWithWarningCount,\n    errors: results?.errors,\n  };\n}\n"],"mappings":"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"}