{"version":3,"names":["RELEASE_TYPES","TagCmd","constructor","snapping","logger","name","description","join","Object","keys","IssuesClasses","cmd","report","patterns","message","ver","all","editor","snapped","unmerged","patch","minor","major","preRelease","increment","prereleaseId","force","ignoreUnresolvedDependencies","ignoreIssues","ignoreNewestVersion","skipTests","skipAutoTag","scope","unmodified","build","soft","persist","disableDeployPipeline","disableTagPipeline","forceDeploy","incrementBy","BitError","consoleWarning","length","releaseFlags","filter","x","getReleaseType","includes","DEFAULT_BIT_RELEASE_TYPE","getPreReleaseId","undefined","disableTagAndSnapPipelines","params","ids","releaseType","preReleaseId","version","results","tag","chalk","yellow","NOTHING_TO_TAG_MSG","taggedComponents","autoTaggedResults","warnings","newComponents","changedComponents","component","searchWithoutVersion","id","addedComponents","autoTaggedCount","warningsOutput","tagExplanationPersist","tagExplanationSoft","tagExplanation","isSoftTag","outputComponents","comps","map","componentOutput","toString","autoTag","result","triggeredBy","searchWithoutScopeAndVersion","autoTagComp","a","AUTO_TAGGED_MSG","publishOutput","publishedPackages","successTitle","green","successCompsStr","successOutput","softTagPrefix","outputIfExists","label","explanation","components","underline","newDesc","changedDesc","softTagClarification","bold"],"sources":["tag-cmd.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { Command, CommandOptions } from '@teambit/cli';\nimport { TagResults, NOTHING_TO_TAG_MSG, AUTO_TAGGED_MSG } from '@teambit/legacy/dist/api/consumer/lib/tag';\nimport { DEFAULT_BIT_RELEASE_TYPE } from '@teambit/legacy/dist/constants';\nimport { IssuesClasses } from '@teambit/component-issues';\nimport { ReleaseType } from 'semver';\nimport { BitError } from '@teambit/bit-error';\nimport { Logger } from '@teambit/logger';\nimport { SnappingMain } from './snapping.main.runtime';\nimport { BasicTagParams } from './tag-model-component';\n\nconst RELEASE_TYPES = ['major', 'premajor', 'minor', 'preminor', 'patch', 'prepatch', 'prerelease'];\n\nexport class TagCmd implements Command {\n  name = 'tag [component-patterns...]';\n  group = 'development';\n  description = 'create an immutable and exportable component snapshot, tagged with a release version.';\n  extendedDescription = `if no patterns are provided, it will tag all new and modified components.\nif patterns are entered, you can specify a version per pattern using \"@\" sign, e.g. bit tag foo@1.0.0 bar@minor baz@major`;\n  arguments = [\n    {\n      name: 'component-patterns...',\n      description:\n        'a list of component names, IDs or patterns (separated by space). run \"bit pattern --help\" to get more data about patterns. By default, all modified are tagged.',\n    },\n  ];\n  helpUrl = 'components/tags';\n  alias = 't';\n  loader = true;\n  options = [\n    ['m', 'message <message>', 'a log message describing latest changes'],\n    ['u', 'unmodified', 'include unmodified components (by default, only new and modified components are tagged)'],\n    [\n      '',\n      'editor [editor]',\n      'EXPERIMENTAL. open an editor to write a tag message for each component. optionally, specify the editor-name (defaults to vim).',\n    ],\n    ['v', 'ver <version>', 'tag with the given version'],\n    ['l', 'increment <level>', `options are: [${RELEASE_TYPES.join(', ')}], default to patch`],\n    ['', 'prerelease-id <id>', 'prerelease identifier (e.g. \"dev\" to get \"1.0.0-dev.1\")'],\n    ['p', 'patch', 'syntactic sugar for \"--increment patch\"'],\n    ['', 'minor', 'syntactic sugar for \"--increment minor\"'],\n    ['', 'major', 'syntactic sugar for \"--increment major\"'],\n    ['', 'pre-release [identifier]', 'syntactic sugar for \"--increment prerelease\" and `--prerelease-id <identifier>`'],\n    ['', 'snapped', 'EXPERIMENTAL. tag components that their head is a snap (not a tag)'],\n    ['', 'unmerged', 'EXPERIMENTAL. complete a merge process by tagging the unmerged components'],\n    ['', 'skip-tests', 'skip running component tests during tag process'],\n    ['', 'skip-auto-tag', 'skip auto tagging dependents'],\n    ['', 'soft', 'do not persist. only keep note of the changes to be made'],\n    ['', 'persist', 'persist the changes generated by --soft tag'],\n    ['', 'disable-tag-pipeline', 'skip the tag pipeline to avoid publishing the components'],\n    ['', 'force-deploy', 'run the tag pipeline although the build failed'],\n    [\n      '',\n      'increment-by <number>',\n      '(default to 1) increment semver flag (patch/minor/major) by. e.g. incrementing patch by 2: 0.0.1 -> 0.0.3.',\n    ],\n    [\n      'i',\n      'ignore-issues [issues]',\n      `ignore component issues (shown in \"bit status\" as \"issues found\"), issues to ignore:\n[${Object.keys(IssuesClasses).join(', ')}]\nto ignore multiple issues, separate them by a comma and wrap with quotes. to ignore all issues, specify \"*\".`,\n    ],\n    ['I', 'ignore-newest-version', 'ignore existing of newer versions (default = false)'],\n    ['b', 'build', 'EXPERIMENTAL. not needed for now. run the pipeline build and complete the tag'],\n    [\n      'a',\n      'all [version]',\n      'DEPRECATED (not needed anymore, it is the default now). tag all new and modified components',\n    ],\n    ['s', 'scope [version]', 'DEPRECATED (use \"--unmodified\" instead). tag all components of the current scope'],\n    [\n      'f',\n      'force',\n      'DEPRECATED (use \"--skip-tests\" or \"--unmodified\" instead). force-tag even if tests are failing and even when component has not changed',\n    ],\n    ['', 'disable-deploy-pipeline', 'DEPRECATED. use --disable-tag-pipeline instead'],\n  ] as CommandOptions;\n  migration = true;\n  remoteOp = true; // In case a compiler / tester is not installed\n  examples = [{ cmd: 'tag --ver 1.0.0', description: 'tag all components to version 1.0.0' }];\n\n  constructor(private snapping: SnappingMain, private logger: Logger) {}\n\n  // eslint-disable-next-line complexity\n  async report(\n    [patterns = []]: [string[]],\n    {\n      message = '',\n      ver,\n      all = false,\n      editor = '',\n      snapped = false,\n      unmerged = false,\n      patch,\n      minor,\n      major,\n      preRelease,\n      increment,\n      prereleaseId,\n      force = false,\n      ignoreUnresolvedDependencies,\n      ignoreIssues,\n      ignoreNewestVersion = false,\n      skipTests = false,\n      skipAutoTag = false,\n      scope,\n      unmodified = false,\n      build,\n      soft = false,\n      persist = false,\n      disableDeployPipeline = false,\n      disableTagPipeline = false,\n      forceDeploy = false,\n      incrementBy = 1,\n    }: {\n      all?: boolean | string;\n      snapped?: boolean;\n      unmerged?: boolean;\n      ver?: string;\n      force?: boolean;\n      patch?: boolean;\n      minor?: boolean;\n      major?: boolean;\n      increment?: ReleaseType;\n      preRelease?: string;\n      prereleaseId?: string;\n      ignoreUnresolvedDependencies?: boolean;\n      ignoreIssues?: string;\n      scope?: string | boolean;\n      incrementBy?: number;\n      disableDeployPipeline?: boolean;\n      disableTagPipeline?: boolean;\n    } & Partial<BasicTagParams>\n  ): Promise<string> {\n    if (typeof ignoreUnresolvedDependencies === 'boolean') {\n      throw new BitError(`--ignore-unresolved-dependencies has been removed, please use --ignore-issues instead`);\n    }\n    if (ignoreIssues && typeof ignoreIssues === 'boolean') {\n      throw new BitError(`--ignore-issues expects issues to be ignored, please run \"bit tag -h\" for the issues list`);\n    }\n    if (disableDeployPipeline) {\n      this.logger.consoleWarning(`--disable-deploy-pipeline is deprecated, please use --disable-tag-pipeline instead`);\n    }\n    if (!message && !persist) {\n      this.logger.consoleWarning(\n        `--message will be mandatory in the next few releases. make sure to add a message with your tag`\n      );\n    }\n    if (all) {\n      this.logger.consoleWarning(\n        `--all is deprecated, please omit it. \"bit tag\" by default will tag all new and modified components. to specify a version, use --ver flag`\n      );\n      if (typeof all === 'string') {\n        ver = all;\n      }\n    }\n    if (scope) {\n      this.logger.consoleWarning(`--scope is deprecated, use --unmodified instead`);\n      unmodified = true;\n      if (typeof scope === 'string') {\n        ver = scope;\n      }\n    }\n    if (force) {\n      this.logger.consoleWarning(\n        `--force is deprecated, use either --skip-tests or --unmodified depending on the use case`\n      );\n      if (patterns.length) unmodified = true;\n    }\n    if (prereleaseId && (!increment || increment === 'major' || increment === 'minor' || increment === 'patch')) {\n      throw new BitError(\n        `--prerelease-id should be entered along with --increment flag, while --increment must be one of the following: [prepatch, prerelease, preminor, premajor]`\n      );\n    }\n\n    const releaseFlags = [patch, minor, major, preRelease].filter((x) => x);\n    if (releaseFlags.length > 1) {\n      throw new BitError('you can use only one of the following - patch, minor, major, pre-release');\n    }\n\n    const getReleaseType = (): ReleaseType => {\n      if (increment) {\n        if (!RELEASE_TYPES.includes(increment)) {\n          throw new BitError(`invalid increment-level \"${increment}\".\n  semver allows the following options only: ${RELEASE_TYPES.join(', ')}`);\n        }\n        return increment;\n      }\n      if (major) return 'major';\n      if (minor) return 'minor';\n      if (patch) return 'patch';\n      if (preRelease) return 'prerelease';\n      return DEFAULT_BIT_RELEASE_TYPE;\n    };\n    const getPreReleaseId = (): string | undefined => {\n      if (prereleaseId) {\n        return prereleaseId;\n      }\n      if (preRelease && typeof preRelease === 'string') {\n        return preRelease;\n      }\n      return undefined;\n    };\n\n    const disableTagAndSnapPipelines = disableTagPipeline || disableDeployPipeline;\n\n    const params = {\n      ids: patterns,\n      snapped,\n      unmerged,\n      editor,\n      message,\n      releaseType: getReleaseType(),\n      preReleaseId: getPreReleaseId(),\n      ignoreIssues,\n      ignoreNewestVersion,\n      skipTests,\n      skipAutoTag,\n      build,\n      soft,\n      persist,\n      unmodified,\n      disableTagAndSnapPipelines,\n      forceDeploy,\n      incrementBy,\n      version: ver,\n    };\n\n    const results = await this.snapping.tag(params);\n    if (!results) return chalk.yellow(NOTHING_TO_TAG_MSG);\n    const { taggedComponents, autoTaggedResults, warnings, newComponents }: TagResults = results;\n    const changedComponents = taggedComponents.filter((component) => !newComponents.searchWithoutVersion(component.id));\n    const addedComponents = taggedComponents.filter((component) => newComponents.searchWithoutVersion(component.id));\n    const autoTaggedCount = autoTaggedResults ? autoTaggedResults.length : 0;\n\n    const warningsOutput = warnings && warnings.length ? `${chalk.yellow(warnings.join('\\n'))}\\n\\n` : '';\n    const tagExplanationPersist = `\\n(use \"bit export [collection]\" to push these components to a remote\")\n(use \"bit reset\" to unstage versions)\\n`;\n    const tagExplanationSoft = `\\n(use \"bit tag --persist\" to persist the changes\")\n(use \"bit reset --soft\" to remove the soft-tags)\\n`;\n\n    const tagExplanation = results.isSoftTag ? tagExplanationSoft : tagExplanationPersist;\n\n    const outputComponents = (comps) => {\n      return comps\n        .map((component) => {\n          let componentOutput = `     > ${component.id.toString()}`;\n          const autoTag = autoTaggedResults.filter((result) =>\n            result.triggeredBy.searchWithoutScopeAndVersion(component.id)\n          );\n          if (autoTag.length) {\n            const autoTagComp = autoTag.map((a) => a.component.id.toString());\n            componentOutput += `\\n       ${AUTO_TAGGED_MSG}:\n            ${autoTagComp.join('\\n            ')}`;\n          }\n          return componentOutput;\n        })\n        .join('\\n');\n    };\n\n    const publishOutput = () => {\n      const { publishedPackages } = results;\n      if (!publishedPackages || !publishedPackages.length) return '';\n      const successTitle = `\\n\\n${chalk.green(\n        `published the following ${publishedPackages.length} component(s) successfully\\n`\n      )}`;\n      const successCompsStr = publishedPackages.join('\\n');\n      const successOutput = successCompsStr ? successTitle + successCompsStr : '';\n      return successOutput;\n    };\n\n    const softTagPrefix = results.isSoftTag ? 'soft-tagged ' : '';\n    const outputIfExists = (label, explanation, components) => {\n      if (!components.length) return '';\n      return `\\n${chalk.underline(softTagPrefix + label)}\\n(${explanation})\\n${outputComponents(components)}\\n`;\n    };\n\n    const newDesc = results.isSoftTag\n      ? 'set to be tagged first version for components'\n      : 'first version for components';\n    const changedDesc = results.isSoftTag\n      ? 'components that set to get a version bump'\n      : 'components that got a version bump';\n    const softTagClarification = results.isSoftTag\n      ? chalk.bold(\n          'keep in mind that this is a soft-tag (changes recorded to be tagged), to persist the changes use --persist flag'\n        )\n      : '';\n    return (\n      warningsOutput +\n      chalk.green(\n        `${taggedComponents.length + autoTaggedCount} component(s) ${results.isSoftTag ? 'soft-' : ''}tagged`\n      ) +\n      tagExplanation +\n      outputIfExists('new components', newDesc, addedComponents) +\n      outputIfExists('changed components', changedDesc, changedComponents) +\n      publishOutput() +\n      softTagClarification\n    );\n  }\n}\n"],"mappings":"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"}