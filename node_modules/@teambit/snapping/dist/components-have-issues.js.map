{"version":3,"names":["ComponentsHaveIssues","BitError","constructor","components","forEach","component","issues","filterNonTagBlocking","allIssueNames","uniq","map","comp","getAllIssueNames","flat","issuesColored","componentIssuesTemplate","join","IssuesAspect","id","issue","format","chalk","underline","cyan","toString","formatIssues","result"],"sources":["components-have-issues.ts"],"sourcesContent":["import { BitError } from '@teambit/bit-error';\nimport IssuesAspect from '@teambit/issues';\nimport { formatIssues } from '@teambit/legacy/dist/cli/templates/component-issues-template';\nimport ConsumerComponent from '@teambit/legacy/dist/consumer/component';\nimport chalk from 'chalk';\nimport { uniq } from 'lodash';\n\nexport class ComponentsHaveIssues extends BitError {\n  constructor(components: ConsumerComponent[]) {\n    components.forEach((component) => {\n      component.issues = component.issues.filterNonTagBlocking();\n    });\n    const allIssueNames = uniq(components.map((comp) => comp.issues.getAllIssueNames()).flat());\n    const issuesColored = componentIssuesTemplate(components);\n    super(`error: issues found with the following components\n${issuesColored}\n\nto get the list of component-issues names and suggestions how to resolve them, run \"bit component-issues\".\n\nwhile highly not recommended, it's possible to ignore issues in two ways:\n1) temporarily ignore for this tag/snap command by entering \"--ignore-issues\" flag, e.g. \\`bit tag --ignore-issues \"${allIssueNames.join(\n      ', '\n    )}\" \\`\n2) ignore the issue completely by configuring it in the workspace.jsonc file. e.g:\n\"${IssuesAspect.id}\": {\n  \"ignoreIssues\": [${allIssueNames.map((issue) => `\"${issue}\"`).join(', ')}]\n}\n`);\n  }\n}\n\nfunction componentIssuesTemplate(components: ConsumerComponent[]) {\n  function format(component: ConsumerComponent) {\n    return `${chalk.underline(chalk.cyan(component.id.toString()))}\\n${formatIssues(component)}`;\n  }\n\n  const result = `\\n${components.map(format).join('\\n')}`;\n  return result;\n}\n"],"mappings":";;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEO,MAAMA,oBAAoB,SAASC,oBAAQ,CAAC;EACjDC,WAAW,CAACC,UAA+B,EAAE;IAC3CA,UAAU,CAACC,OAAO,CAAEC,SAAS,IAAK;MAChCA,SAAS,CAACC,MAAM,GAAGD,SAAS,CAACC,MAAM,CAACC,oBAAoB,EAAE;IAC5D,CAAC,CAAC;IACF,MAAMC,aAAa,GAAG,IAAAC,cAAI,EAACN,UAAU,CAACO,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACL,MAAM,CAACM,gBAAgB,EAAE,CAAC,CAACC,IAAI,EAAE,CAAC;IAC3F,MAAMC,aAAa,GAAGC,uBAAuB,CAACZ,UAAU,CAAC;IACzD,KAAK,CAAE;AACX,EAAEW,aAAc;AAChB;AACA;AACA;AACA;AACA,sHAAsHN,aAAa,CAACQ,IAAI,CAClI,IAAI,CACJ;AACN;AACA,GAAGC,iBAAY,CAACC,EAAG;AACnB,qBAAqBV,aAAa,CAACE,GAAG,CAAES,KAAK,IAAM,IAAGA,KAAM,GAAE,CAAC,CAACH,IAAI,CAAC,IAAI,CAAE;AAC3E;AACA,CAAC,CAAC;EACA;AACF;AAAC;AAED,SAASD,uBAAuB,CAACZ,UAA+B,EAAE;EAChE,SAASiB,MAAM,CAACf,SAA4B,EAAE;IAC5C,OAAQ,GAAEgB,gBAAK,CAACC,SAAS,CAACD,gBAAK,CAACE,IAAI,CAAClB,SAAS,CAACa,EAAE,CAACM,QAAQ,EAAE,CAAC,CAAE,KAAI,IAAAC,uCAAY,EAACpB,SAAS,CAAE,EAAC;EAC9F;EAEA,MAAMqB,MAAM,GAAI,KAAIvB,UAAU,CAACO,GAAG,CAACU,MAAM,CAAC,CAACJ,IAAI,CAAC,IAAI,CAAE,EAAC;EACvD,OAAOU,MAAM;AACf"}