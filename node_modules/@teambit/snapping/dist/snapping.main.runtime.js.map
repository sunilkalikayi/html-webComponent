{"version":3,"names":["HooksManagerInstance","HooksManager","getInstance","SnappingMain","constructor","workspace","logger","issues","insights","dependencyResolver","scope","exporter","builder","objectsRepo","legacyScope","objects","tag","ids","message","version","editor","snapped","unmerged","releaseType","preReleaseId","ignoreIssues","ignoreNewestVersion","skipTests","skipAutoTag","build","unmodified","soft","persist","forceDeploy","incrementBy","disableTagAndSnapPipelines","isFeatureEnabled","BUILD_ON_CI","Boolean","BitError","exactVersion","ConsumerNotFound","idsHasWildcard","hasWildcard","isAll","length","validExactVersion","validateVersion","consumer","componentsList","ComponentsList","loader","start","newComponents","listNewComponents","bitIds","warnings","getComponentsToTag","R","isEmpty","legacyBitIds","BitIds","fromArray","debug","toString","Analytics","addBreadCrumb","hashData","componentFsCache","deleteAllDependenciesDataCache","components","loadComponentsForTag","throwForLegacyDependenciesInsideHarmony","throwForComponentIssues","throwForPendingImport","taggedComponents","autoTaggedResults","publishedPackages","tagModelComponent","snapping","consumerComponents","packageManagerConfigRootDir","path","tagResults","isSoftTag","postHook","POST_TAG_ALL_HOOK","POST_TAG_HOOK","triggerHook","setExtraData","concat","onDestroy","tagFromScope","params","componentIds","resolveMultipleComponentIds","componentIdsLatest","map","id","changeVersion","LATEST","import","c","state","_consumer","legacyIds","_legacy","results","push","exportMany","idsWithFutureScope","allVersions","snap","pattern","skipAutoSnap","Error","getIdsToSnap","isSnap","snapResults","snappedComponents","autoSnappedResults","currentLane","getCurrentLaneId","laneName","isDefault","name","listDuringMergeStateComponents","tagPendingComponents","listPotentialTagAllWorkspace","listTagPendingComponents","tagPendingComponentsIds","shouldThrowForNoMatching","getCompIds","includes","compId","resolveComponentId","filterIdsFromPoolIdsByPattern","allTagPending","reset","componentPattern","head","force","getCurrentLaneObject","untag","removeLocalVersionsForAllComponents","candidateComponents","getComponentsWithOptionToUntag","idsMatchingPattern","idsByPattern","idsMatchingPatternBitIds","componentsToUntag","filter","modelComponent","hasWithoutVersion","toBitId","removeLocalVersionsForMultipleComponents","softUntag","softTaggedComponents","listSoftTaggedComponents","softTaggedComponentsIds","idsToRemoveSoftTags","compact","componentId","componentMap","bitMap","getComponent","ignoreScopeAndVersion","removedVersion","nextVersion","clearNextVersion","versions","isRealUntag","result","component","updateComponentsVersions","markAsChanged","isSoftUntag","_addFlattenedDependenciesToComponents","flattenedDependenciesGetter","FlattenedDependenciesGetter","populateFlattenedDependencies","stop","_updateComponentsByTagResult","tagResult","forEach","matchingComponent","find","isEqual","existingBuilder","extensions","findCoreExtension","Extensions","data","builderData","_getPublishedPackages","comp","builderExt","pkgData","aspectsData","a","aspectId","pkg","publishedPackage","_addCompToObjects","source","lane","shouldValidateVersion","sources","findOrAddComponent","artifactFiles","getArtifactsFiles","artifacts","transformArtifactsFromVinylToSource","files","consumerComponentToVersion","add","addVersion","unmergedComponent","unmergedComponents","getEntry","unrelated","hash","laneId","addParent","log","UnmergedComponents","buildSnapMessage","removeComponent","file","validate","_addCompFromScopeToObjects","objectRepo","_enrichComp","consumerComponent","_getObjectsToEnrichComp","obj","loadVersion","buildStatus","artifactObjects","artifactsFiles","artifactsSource","ArtifactFiles","fromVinylsToSources","vinyls","populateRefsFromSources","removedComponents","loadComponents","toVersionLatest","rootDir","legacyComponents","issuesToIgnoreFromFlag","split","issue","trim","issuesToIgnoreFromConfig","getIssuesToIgnoreGlobally","issuesToIgnore","getManyByLegacy","triggerAddComponentIssues","removeIgnoredIssuesFromComponents","componentsWithBlockingIssues","shouldBlockTagging","ComponentsHaveIssues","areComponentsMissingFromScope","removed","some","componentFromModel","hasScope","ComponentsPendingImport","throwForComponent","dependenciesIds","getAllDependenciesIds","Promise","all","depId","hasVersion","modelComp","getModelComponentIfExist","isLegacy","pMap","concurrency","concurrentComponentsLimit","includeUnmodified","tagPendingBitIds","listSnappedComponentsOnMain","snappedComponentsIds","pMapSeries","idWithoutVer","idHasWildcard","allIds","componentStatus","getComponentStatusById","modified","flat","bitId","tagPendingBitIdsIncludeSnapped","tagPendingComponentsLatest","latestVersions","semver","valid","gt","undefined","provider","cli","community","loggerMain","createLogger","SnappingAspect","snapCmd","SnapCmd","getBaseDomain","tagCmd","TagCmd","tagFromScopeCmd","TagFromScopeCmd","resetCmd","ResetCmd","register","WorkspaceAspect","CLIAspect","CommunityAspect","LoggerAspect","IssuesAspect","InsightsAspect","DependencyResolverAspect","ScopeAspect","ExportAspect","BuilderAspect","MainRuntime","addRuntime"],"sources":["snapping.main.runtime.ts"],"sourcesContent":["import { CLIAspect, CLIMain, MainRuntime } from '@teambit/cli';\nimport { isFeatureEnabled, BUILD_ON_CI } from '@teambit/legacy/dist/api/consumer/lib/feature-toggle';\nimport { LegacyOnTagResult } from '@teambit/legacy/dist/scope/scope';\nimport { FlattenedDependenciesGetter } from '@teambit/legacy/dist/scope/component-ops/get-flattened-dependencies';\nimport { Scope as LegacyScope } from '@teambit/legacy/dist/scope';\nimport CommunityAspect, { CommunityMain } from '@teambit/community';\nimport WorkspaceAspect, { Workspace } from '@teambit/workspace';\nimport R from 'ramda';\nimport semver, { ReleaseType } from 'semver';\nimport { compact } from 'lodash';\nimport { Analytics } from '@teambit/legacy/dist/analytics/analytics';\nimport { BitId, BitIds } from '@teambit/legacy/dist/bit-id';\nimport { POST_TAG_ALL_HOOK, POST_TAG_HOOK, Extensions, LATEST } from '@teambit/legacy/dist/constants';\nimport { Consumer } from '@teambit/legacy/dist/consumer';\nimport ComponentsList from '@teambit/legacy/dist/consumer/component/components-list';\nimport HooksManager from '@teambit/legacy/dist/hooks';\nimport pMapSeries from 'p-map-series';\nimport { TagResults } from '@teambit/legacy/dist/api/consumer/lib/tag';\nimport hasWildcard from '@teambit/legacy/dist/utils/string/has-wildcard';\nimport { validateVersion } from '@teambit/legacy/dist/utils/semver-helper';\nimport { ConsumerNotFound } from '@teambit/legacy/dist/consumer/exceptions';\nimport loader from '@teambit/legacy/dist/cli/loader';\nimport { SnapResults } from '@teambit/legacy/dist/api/consumer/lib/snap';\nimport ComponentsPendingImport from '@teambit/legacy/dist/consumer/component-ops/exceptions/components-pending-import';\nimport { Logger, LoggerAspect, LoggerMain } from '@teambit/logger';\nimport { BitError } from '@teambit/bit-error';\nimport ConsumerComponent from '@teambit/legacy/dist/consumer/component/consumer-component';\nimport ComponentMap from '@teambit/legacy/dist/consumer/bit-map/component-map';\nimport pMap from 'p-map';\nimport { InsightsAspect, InsightsMain } from '@teambit/insights';\nimport { concurrentComponentsLimit } from '@teambit/legacy/dist/utils/concurrency';\nimport {\n  removeLocalVersionsForAllComponents,\n  untagResult,\n  getComponentsWithOptionToUntag,\n  removeLocalVersionsForMultipleComponents,\n} from '@teambit/legacy/dist/scope/component-ops/untag-component';\nimport { ScopeAspect, ScopeMain } from '@teambit/scope';\nimport { Lane, ModelComponent } from '@teambit/legacy/dist/scope/models';\nimport IssuesAspect, { IssuesMain } from '@teambit/issues';\nimport { DependencyResolverAspect, DependencyResolverMain } from '@teambit/dependency-resolver';\nimport { BuilderAspect, BuilderMain } from '@teambit/builder';\nimport { ExportAspect, ExportMain } from '@teambit/export';\nimport UnmergedComponents from '@teambit/legacy/dist/scope/lanes/unmerged-components';\nimport { BitObject, Repository } from '@teambit/legacy/dist/scope/objects';\nimport {\n  ArtifactFiles,\n  ArtifactSource,\n  getArtifactsFiles,\n} from '@teambit/legacy/dist/consumer/component/sources/artifact-files';\nimport { SnapCmd } from './snap-cmd';\nimport { SnappingAspect } from './snapping.aspect';\nimport { TagCmd } from './tag-cmd';\nimport { ComponentsHaveIssues } from './components-have-issues';\nimport ResetCmd from './reset-cmd';\nimport { tagModelComponent, updateComponentsVersions, BasicTagParams } from './tag-model-component';\nimport { TagFromScopeCmd } from './tag-from-scope.cmd';\n\nconst HooksManagerInstance = HooksManager.getInstance();\n\nexport class SnappingMain {\n  private objectsRepo: Repository;\n  constructor(\n    private workspace: Workspace,\n    private logger: Logger,\n    private issues: IssuesMain,\n    private insights: InsightsMain,\n    private dependencyResolver: DependencyResolverMain,\n    private scope: ScopeMain,\n    private exporter: ExportMain,\n    private builder: BuilderMain\n  ) {\n    this.objectsRepo = this.scope?.legacyScope?.objects;\n  }\n\n  /**\n   * tag the given component ids or all modified/new components if \"all\" param is set.\n   * tag is a similar operation as a snap, which saves the changes into the local scope, but it also creates an alias\n   * with a valid semver to that version.\n   * tag can be done only on main, not on a lane.\n   */\n  // eslint-disable-next-line complexity\n  async tag({\n    ids = [],\n    message = '',\n    version,\n    editor = '',\n    snapped = false,\n    unmerged = false,\n    releaseType,\n    preReleaseId,\n    ignoreIssues,\n    ignoreNewestVersion = false,\n    skipTests = false,\n    skipAutoTag = false,\n    build,\n    unmodified = false,\n    soft = false,\n    persist = false,\n    forceDeploy = false,\n    incrementBy = 1,\n    disableTagAndSnapPipelines = false,\n  }: {\n    ids?: string[];\n    all?: boolean | string;\n    snapped?: boolean;\n    unmerged?: boolean;\n    version?: string;\n    releaseType?: ReleaseType;\n    ignoreIssues?: string;\n    scope?: string | boolean;\n    incrementBy?: number;\n  } & Partial<BasicTagParams>): Promise<TagResults | null> {\n    build = isFeatureEnabled(BUILD_ON_CI) ? Boolean(build) : true;\n    if (soft) build = false;\n    if (disableTagAndSnapPipelines && forceDeploy) {\n      throw new BitError('you can use either force-deploy or disable-tag-pipeline, but not both');\n    }\n    if (editor && persist) {\n      throw new BitError('you can use either --editor or --persist, but not both');\n    }\n    if (editor && message) {\n      throw new BitError('you can use either --editor or --message, but not both');\n    }\n\n    const exactVersion = version;\n    if (!this.workspace) throw new ConsumerNotFound();\n    const idsHasWildcard = hasWildcard(ids);\n    const isAll = Boolean(!ids.length || idsHasWildcard);\n    const validExactVersion = validateVersion(exactVersion);\n    const consumer = this.workspace.consumer;\n    const componentsList = new ComponentsList(consumer);\n    loader.start('determine components to tag...');\n    const newComponents = await componentsList.listNewComponents();\n    const { bitIds, warnings } = await this.getComponentsToTag(\n      unmodified,\n      exactVersion,\n      persist,\n      ids,\n      snapped,\n      unmerged\n    );\n    if (R.isEmpty(bitIds)) return null;\n\n    const legacyBitIds = BitIds.fromArray(bitIds);\n\n    this.logger.debug(`tagging the following components: ${legacyBitIds.toString()}`);\n    Analytics.addBreadCrumb('tag', `tagging the following components: ${Analytics.hashData(legacyBitIds)}`);\n    if (!soft) {\n      await this.workspace.consumer.componentFsCache.deleteAllDependenciesDataCache();\n    }\n    const components = await this.loadComponentsForTag(legacyBitIds);\n    await this.throwForLegacyDependenciesInsideHarmony(components);\n    await this.throwForComponentIssues(components, ignoreIssues);\n    this.throwForPendingImport(components);\n\n    const { taggedComponents, autoTaggedResults, publishedPackages } = await tagModelComponent({\n      workspace: this.workspace,\n      scope: this.scope,\n      snapping: this,\n      builder: this.builder,\n      consumerComponents: components,\n      ids: legacyBitIds,\n      message,\n      editor,\n      exactVersion: validExactVersion,\n      releaseType,\n      preReleaseId,\n      ignoreNewestVersion,\n      skipTests,\n      skipAutoTag,\n      soft,\n      build,\n      persist,\n      disableTagAndSnapPipelines,\n      forceDeploy,\n      incrementBy,\n      packageManagerConfigRootDir: this.workspace.path,\n      dependencyResolver: this.dependencyResolver,\n    });\n\n    const tagResults = { taggedComponents, autoTaggedResults, isSoftTag: soft, publishedPackages };\n    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n    tagResults.warnings = warnings;\n\n    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n    tagResults.newComponents = newComponents;\n    const postHook = isAll ? POST_TAG_ALL_HOOK : POST_TAG_HOOK;\n    HooksManagerInstance?.triggerHook(postHook, tagResults);\n    Analytics.setExtraData(\n      'num_components',\n      // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n      R.concat(tagResults.taggedComponents, tagResults.autoTaggedResults, tagResults.newComponents).length\n    );\n    await consumer.onDestroy();\n    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n    return tagResults;\n  }\n\n  async tagFromScope(\n    params: {\n      ids: string[];\n      push?: boolean;\n      version?: string;\n      releaseType?: ReleaseType;\n      ignoreIssues?: string;\n      incrementBy?: number;\n    } & Partial<BasicTagParams>\n  ): Promise<TagResults | null> {\n    if (this.workspace) {\n      throw new BitError(\n        `unable to run this command from a workspace, please create a new bare-scope and run it from there`\n      );\n    }\n    const componentIds = await this.scope.resolveMultipleComponentIds(params.ids);\n    const componentIdsLatest = componentIds.map((id) => id.changeVersion(LATEST));\n    const components = await this.scope.import(componentIdsLatest);\n    const consumerComponents = components.map((c) => c.state._consumer);\n    const legacyIds = BitIds.fromArray(componentIds.map((id) => id._legacy));\n    const results = await tagModelComponent({\n      ...params,\n      scope: this.scope,\n      consumerComponents,\n      snapping: this,\n      builder: this.builder,\n      dependencyResolver: this.dependencyResolver,\n      skipAutoTag: false,\n      persist: true,\n      ids: legacyIds,\n      message: params.message as string,\n    });\n\n    const { taggedComponents, autoTaggedResults, publishedPackages } = results;\n\n    if (params.push) {\n      await this.exporter.exportMany({\n        scope: this.scope.legacyScope,\n        ids: legacyIds,\n        idsWithFutureScope: legacyIds,\n        allVersions: false,\n      });\n    }\n\n    return {\n      taggedComponents,\n      autoTaggedResults,\n      isSoftTag: false,\n      publishedPackages,\n      warnings: [],\n      newComponents: new BitIds(),\n    };\n  }\n\n  /**\n   * save the local changes of a component(s) into the scope. snap can be done on main or on a lane.\n   * once a component is snapped on a lane, it becomes part of it.\n   */\n  async snap({\n    pattern,\n    legacyBitIds, // @todo: change to ComponentID[]. pass only if have the ids already parsed.\n    unmerged,\n    message = '',\n    ignoreIssues,\n    skipTests = false,\n    skipAutoSnap = false,\n    build,\n    disableTagAndSnapPipelines = false,\n    forceDeploy = false,\n    unmodified = false,\n  }: {\n    pattern?: string;\n    legacyBitIds?: BitIds;\n    unmerged?: boolean;\n    message?: string;\n    ignoreIssues?: string;\n    build: boolean;\n    skipTests?: boolean;\n    skipAutoSnap?: boolean;\n    disableTagAndSnapPipelines?: boolean;\n    forceDeploy?: boolean;\n    unmodified?: boolean;\n  }): Promise<SnapResults | null> {\n    if (!this.workspace) throw new ConsumerNotFound();\n    if (pattern && legacyBitIds) throw new Error(`please pass either pattern or legacyBitIds, not both`);\n    const consumer: Consumer = this.workspace.consumer;\n    const componentsList = new ComponentsList(consumer);\n    const newComponents = (await componentsList.listNewComponents()) as BitIds;\n    const ids = legacyBitIds || (await getIdsToSnap(this.workspace));\n    if (!ids) return null;\n    this.logger.debug(`snapping the following components: ${ids.toString()}`);\n    await this.workspace.consumer.componentFsCache.deleteAllDependenciesDataCache();\n    const components = await this.loadComponentsForTag(ids);\n    await this.throwForLegacyDependenciesInsideHarmony(components);\n    await this.throwForComponentIssues(components, ignoreIssues);\n    this.throwForPendingImport(components);\n\n    const { taggedComponents, autoTaggedResults } = await tagModelComponent({\n      workspace: this.workspace,\n      scope: this.scope,\n      snapping: this,\n      builder: this.builder,\n      consumerComponents: components,\n      ids,\n      ignoreNewestVersion: false,\n      message,\n      skipTests,\n      skipAutoTag: skipAutoSnap,\n      persist: true,\n      soft: false,\n      build,\n      isSnap: true,\n      disableTagAndSnapPipelines,\n      forceDeploy,\n      packageManagerConfigRootDir: this.workspace.path,\n      dependencyResolver: this.dependencyResolver,\n    });\n    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n    const snapResults: SnapResults = { snappedComponents: taggedComponents, autoSnappedResults: autoTaggedResults };\n\n    snapResults.newComponents = newComponents;\n    const currentLane = consumer.getCurrentLaneId();\n    snapResults.laneName = currentLane.isDefault() ? null : currentLane.name;\n    await consumer.onDestroy();\n    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n    return snapResults;\n\n    async function getIdsToSnap(workspace: Workspace): Promise<BitIds | null> {\n      if (unmerged) {\n        return componentsList.listDuringMergeStateComponents();\n      }\n      const tagPendingComponents = unmodified\n        ? await componentsList.listPotentialTagAllWorkspace()\n        : await componentsList.listTagPendingComponents();\n      if (R.isEmpty(tagPendingComponents)) return null;\n      const tagPendingComponentsIds = await workspace.resolveMultipleComponentIds(tagPendingComponents);\n      // when unmodified, we ask for all components, throw if no matching. if not unmodified and no matching, see error\n      // below, suggesting to use --unmodified flag.\n      const shouldThrowForNoMatching = unmodified;\n      const getCompIds = async () => {\n        if (!pattern) return tagPendingComponentsIds;\n        if (!pattern.includes('*') && !pattern.includes(',')) {\n          const compId = await workspace.resolveComponentId(pattern);\n          return [compId];\n        }\n        return workspace.scope.filterIdsFromPoolIdsByPattern(\n          pattern,\n          tagPendingComponentsIds,\n          shouldThrowForNoMatching\n        );\n      };\n      const componentIds = await getCompIds();\n      if (!componentIds.length && pattern) {\n        const allTagPending = await componentsList.listPotentialTagAllWorkspace();\n        if (allTagPending.length) {\n          throw new BitError(`unable to find matching for \"${pattern}\" pattern among modified/new components.\nthere are matching among unmodified components thought. consider using --unmodified flag if needed`);\n        }\n      }\n      if (!componentIds.length) {\n        return null;\n      }\n      return BitIds.fromArray(componentIds.map((c) => c._legacy));\n    }\n  }\n\n  /**\n   * remove tags/snaps that exist locally, which were not exported yet.\n   * once a tag/snap is exported, it's impossible to delete it as other components may depend on it\n   */\n  async reset(\n    componentPattern?: string,\n    head?: boolean,\n    force = false,\n    soft = false\n  ): Promise<{ results: untagResult[]; isSoftUntag: boolean }> {\n    if (!this.workspace) throw new ConsumerNotFound();\n    const consumer = this.workspace.consumer;\n    const currentLane = await consumer.getCurrentLaneObject();\n    const untag = async (): Promise<untagResult[]> => {\n      if (!componentPattern) {\n        return removeLocalVersionsForAllComponents(consumer, currentLane, head);\n      }\n      const candidateComponents = await getComponentsWithOptionToUntag(consumer);\n      const idsMatchingPattern = await this.workspace.idsByPattern(componentPattern);\n      const idsMatchingPatternBitIds = BitIds.fromArray(idsMatchingPattern.map((id) => id._legacy));\n      const componentsToUntag = candidateComponents.filter((modelComponent) =>\n        idsMatchingPatternBitIds.hasWithoutVersion(modelComponent.toBitId())\n      );\n      return removeLocalVersionsForMultipleComponents(componentsToUntag, currentLane, head, force, consumer.scope);\n    };\n    const softUntag = async () => {\n      const componentsList = new ComponentsList(consumer);\n      const softTaggedComponents = componentsList.listSoftTaggedComponents();\n      const softTaggedComponentsIds = await this.workspace.resolveMultipleComponentIds(softTaggedComponents);\n      const idsToRemoveSoftTags = componentPattern\n        ? this.workspace.scope.filterIdsFromPoolIdsByPattern(componentPattern, softTaggedComponentsIds)\n        : softTaggedComponentsIds;\n      return compact(\n        idsToRemoveSoftTags.map((componentId) => {\n          const componentMap = consumer.bitMap.getComponent(componentId._legacy, { ignoreScopeAndVersion: true });\n          const removedVersion = componentMap.nextVersion?.version;\n          if (!removedVersion) return null;\n          componentMap.clearNextVersion();\n          return { id: componentId._legacy, versions: [removedVersion] };\n        })\n      );\n    };\n    let results: untagResult[];\n    const isRealUntag = !soft;\n    if (isRealUntag) {\n      results = await untag();\n      await consumer.scope.objects.persist();\n      const components = results.map((result) => result.component);\n      await updateComponentsVersions(this.workspace, components as ModelComponent[], false);\n    } else {\n      results = await softUntag();\n      consumer.bitMap.markAsChanged();\n    }\n\n    await consumer.onDestroy();\n    return { results, isSoftUntag: !isRealUntag };\n  }\n\n  async _addFlattenedDependenciesToComponents(scope: LegacyScope, components: ConsumerComponent[]) {\n    loader.start('importing missing dependencies...');\n    const flattenedDependenciesGetter = new FlattenedDependenciesGetter(scope, components);\n    await flattenedDependenciesGetter.populateFlattenedDependencies();\n    loader.stop();\n  }\n\n  _updateComponentsByTagResult(components: ConsumerComponent[], tagResult: LegacyOnTagResult[]) {\n    tagResult.forEach((result) => {\n      const matchingComponent = components.find((c) => c.id.isEqual(result.id));\n      if (matchingComponent) {\n        const existingBuilder = matchingComponent.extensions.findCoreExtension(Extensions.builder);\n        if (existingBuilder) existingBuilder.data = result.builderData.data;\n        else matchingComponent.extensions.push(result.builderData);\n      }\n    });\n  }\n\n  _getPublishedPackages(components: ConsumerComponent[]): string[] {\n    const publishedPackages = components.map((comp) => {\n      const builderExt = comp.extensions.findCoreExtension(Extensions.builder);\n      const pkgData = builderExt?.data?.aspectsData?.find((a) => a.aspectId === Extensions.pkg);\n      return pkgData?.data?.publishedPackage;\n    });\n    return compact(publishedPackages);\n  }\n\n  async _addCompToObjects({\n    source,\n    consumer,\n    lane,\n    shouldValidateVersion = false,\n  }: {\n    source: ConsumerComponent;\n    consumer: Consumer;\n    lane: Lane | null;\n    shouldValidateVersion?: boolean;\n  }): Promise<ModelComponent> {\n    // if a component exists in the model, add a new version. Otherwise, create a new component on the model\n    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n    const component: ModelComponent = await this.scope.legacyScope.sources.findOrAddComponent(source);\n\n    const artifactFiles = getArtifactsFiles(source.extensions);\n    const artifacts = this.transformArtifactsFromVinylToSource(artifactFiles);\n    const { version, files } = await this.scope.legacyScope.sources.consumerComponentToVersion(source);\n    this.objectsRepo.add(version);\n    if (!source.version) throw new Error(`addSource expects source.version to be set`);\n    component.addVersion(version, source.version, lane, this.objectsRepo);\n\n    const unmergedComponent = consumer.scope.objects.unmergedComponents.getEntry(component.name);\n    if (unmergedComponent) {\n      if (unmergedComponent.unrelated) {\n        this.logger.debug(\n          `sources.addSource, unmerged component \"${component.name}\". adding an unrelated entry ${unmergedComponent.head.hash}`\n        );\n        version.unrelated = { head: unmergedComponent.head, laneId: unmergedComponent.laneId };\n      } else {\n        version.addParent(unmergedComponent.head);\n        this.logger.debug(\n          `sources.addSource, unmerged component \"${component.name}\". adding a parent ${unmergedComponent.head.hash}`\n        );\n        version.log.message = version.log.message || UnmergedComponents.buildSnapMessage(unmergedComponent);\n      }\n      consumer.scope.objects.unmergedComponents.removeComponent(component.name);\n    }\n    this.objectsRepo.add(component);\n\n    files.forEach((file) => this.objectsRepo.add(file.file));\n    if (artifacts) artifacts.forEach((file) => this.objectsRepo.add(file.source));\n    if (shouldValidateVersion) version.validate();\n    return component;\n  }\n\n  async _addCompFromScopeToObjects(source: ConsumerComponent, lane: Lane | null): Promise<ModelComponent> {\n    const objectRepo = this.objectsRepo;\n    // if a component exists in the model, add a new version. Otherwise, create a new component on the model\n    const component = await this.scope.legacyScope.sources.findOrAddComponent(source);\n    const artifactFiles = getArtifactsFiles(source.extensions);\n    const artifacts = this.transformArtifactsFromVinylToSource(artifactFiles);\n    const { version, files } = await this.scope.legacyScope.sources.consumerComponentToVersion(source);\n    objectRepo.add(version);\n    if (!source.version) throw new Error(`addSource expects source.version to be set`);\n    component.addVersion(version, source.version, lane, objectRepo);\n    objectRepo.add(component);\n    files.forEach((file) => objectRepo.add(file.file));\n    if (artifacts) artifacts.forEach((file) => objectRepo.add(file.source));\n    return component;\n  }\n\n  async _enrichComp(consumerComponent: ConsumerComponent) {\n    const objects = await this._getObjectsToEnrichComp(consumerComponent);\n    objects.forEach((obj) => this.objectsRepo.add(obj));\n    return consumerComponent;\n  }\n\n  async _getObjectsToEnrichComp(consumerComponent: ConsumerComponent): Promise<BitObject[]> {\n    const component =\n      consumerComponent.modelComponent || (await this.scope.legacyScope.sources.findOrAddComponent(consumerComponent));\n    const version = await component.loadVersion(consumerComponent.id.version as string, this.objectsRepo, true, true);\n    const artifactFiles = getArtifactsFiles(consumerComponent.extensions);\n    const artifacts = this.transformArtifactsFromVinylToSource(artifactFiles);\n    version.extensions = consumerComponent.extensions;\n    version.buildStatus = consumerComponent.buildStatus;\n    const artifactObjects = artifacts.map((file) => file.source);\n    return [version, ...artifactObjects];\n  }\n\n  private transformArtifactsFromVinylToSource(artifactsFiles: ArtifactFiles[]): ArtifactSource[] {\n    const artifacts: ArtifactSource[] = [];\n    artifactsFiles.forEach((artifactFiles) => {\n      const artifactsSource = ArtifactFiles.fromVinylsToSources(artifactFiles.vinyls);\n      if (artifactsSource.length) artifactFiles.populateRefsFromSources(artifactsSource);\n      artifacts.push(...artifactsSource);\n    });\n    return artifacts;\n  }\n\n  private async loadComponentsForTag(ids: BitIds): Promise<ConsumerComponent[]> {\n    const { components, removedComponents } = await this.workspace.consumer.loadComponents(ids.toVersionLatest());\n    components.forEach((component) => {\n      const componentMap = component.componentMap as ComponentMap;\n      if (!componentMap.rootDir) {\n        throw new Error(`unable to tag ${component.id.toString()}, the \"rootDir\" is missing in the .bitmap file`);\n      }\n    });\n    return [...components, ...removedComponents];\n  }\n\n  private async throwForComponentIssues(legacyComponents: ConsumerComponent[], ignoreIssues?: string) {\n    if (ignoreIssues === '*') {\n      // ignore all issues\n      return;\n    }\n    const issuesToIgnoreFromFlag = ignoreIssues?.split(',').map((issue) => issue.trim()) || [];\n    const issuesToIgnoreFromConfig = this.issues.getIssuesToIgnoreGlobally();\n    const issuesToIgnore = [...issuesToIgnoreFromFlag, ...issuesToIgnoreFromConfig];\n    const components = await this.workspace.getManyByLegacy(legacyComponents);\n    await this.issues.triggerAddComponentIssues(components, issuesToIgnore);\n    this.issues.removeIgnoredIssuesFromComponents(components);\n\n    const componentsWithBlockingIssues = legacyComponents.filter((component) => component.issues?.shouldBlockTagging());\n    if (!R.isEmpty(componentsWithBlockingIssues)) {\n      throw new ComponentsHaveIssues(componentsWithBlockingIssues);\n    }\n  }\n\n  private throwForPendingImport(components: ConsumerComponent[]) {\n    const areComponentsMissingFromScope = components\n      .filter((c) => !c.removed)\n      .some((c) => !c.componentFromModel && c.id.hasScope());\n    if (areComponentsMissingFromScope) {\n      throw new ComponentsPendingImport();\n    }\n  }\n\n  private async throwForLegacyDependenciesInsideHarmony(components: ConsumerComponent[]) {\n    const throwForComponent = async (component: ConsumerComponent) => {\n      const dependenciesIds = component.getAllDependenciesIds();\n      const legacyScope = this.workspace.scope.legacyScope;\n      await Promise.all(\n        dependenciesIds.map(async (depId) => {\n          if (!depId.hasVersion()) return;\n          const modelComp = await legacyScope.getModelComponentIfExist(depId);\n          if (!modelComp) return;\n          const version = await modelComp.loadVersion(depId.version as string, legacyScope.objects);\n          if (version.isLegacy) {\n            throw new Error(\n              `unable tagging \"${component.id.toString()}\", its dependency \"${depId.toString()}\" is legacy`\n            );\n          }\n        })\n      );\n    };\n    await pMap(components, (component) => throwForComponent(component), { concurrency: concurrentComponentsLimit() });\n  }\n\n  private async getComponentsToTag(\n    includeUnmodified: boolean,\n    exactVersion: string | undefined,\n    persist: boolean,\n    ids: string[],\n    snapped: boolean,\n    unmerged: boolean\n  ): Promise<{ bitIds: BitId[]; warnings: string[] }> {\n    const warnings: string[] = [];\n    const componentsList = new ComponentsList(this.workspace.consumer);\n    if (persist) {\n      const softTaggedComponents = componentsList.listSoftTaggedComponents();\n      return { bitIds: softTaggedComponents, warnings: [] };\n    }\n\n    const tagPendingBitIds = includeUnmodified\n      ? await componentsList.listPotentialTagAllWorkspace()\n      : await componentsList.listTagPendingComponents();\n\n    const tagPendingComponentsIds = await this.workspace.resolveMultipleComponentIds(tagPendingBitIds);\n\n    const snappedComponents = await componentsList.listSnappedComponentsOnMain();\n    const snappedComponentsIds = snappedComponents.map((c) => c.toBitId());\n\n    if (ids.length) {\n      const componentIds = await pMapSeries(ids, async (id) => {\n        const [idWithoutVer, version] = id.split('@');\n        const idHasWildcard = hasWildcard(id);\n        if (idHasWildcard) {\n          const allIds = this.workspace.scope.filterIdsFromPoolIdsByPattern(idWithoutVer, tagPendingComponentsIds);\n          return allIds.map((componentId) => componentId.changeVersion(version));\n        }\n        const componentId = await this.workspace.resolveComponentId(idWithoutVer);\n        if (!includeUnmodified) {\n          const componentStatus = await this.workspace.consumer.getComponentStatusById(componentId._legacy);\n          if (componentStatus.modified === false) return null;\n        }\n        return componentId.changeVersion(version);\n      });\n\n      return { bitIds: compact(componentIds.flat()).map((bitId) => bitId._legacy), warnings };\n    }\n\n    if (snapped) {\n      return { bitIds: snappedComponentsIds, warnings };\n    }\n\n    if (unmerged) {\n      return { bitIds: componentsList.listDuringMergeStateComponents(), warnings };\n    }\n\n    const tagPendingBitIdsIncludeSnapped = [...tagPendingBitIds, ...snappedComponentsIds];\n\n    if (includeUnmodified && exactVersion) {\n      const tagPendingComponentsLatest = await this.workspace.scope.legacyScope.latestVersions(tagPendingBitIds, false);\n      tagPendingComponentsLatest.forEach((componentId) => {\n        if (componentId.version && semver.valid(componentId.version) && semver.gt(componentId.version, exactVersion)) {\n          warnings.push(`warning: ${componentId.toString()} has a version greater than ${exactVersion}`);\n        }\n      });\n    }\n\n    return { bitIds: tagPendingBitIdsIncludeSnapped.map((id) => id.changeVersion(undefined)), warnings };\n  }\n\n  static slots = [];\n  static dependencies = [\n    WorkspaceAspect,\n    CLIAspect,\n    CommunityAspect,\n    LoggerAspect,\n    IssuesAspect,\n    InsightsAspect,\n    DependencyResolverAspect,\n    ScopeAspect,\n    ExportAspect,\n    BuilderAspect,\n  ];\n  static runtime = MainRuntime;\n  static async provider([\n    workspace,\n    cli,\n    community,\n    loggerMain,\n    issues,\n    insights,\n    dependencyResolver,\n    scope,\n    exporter,\n    builder,\n  ]: [\n    Workspace,\n    CLIMain,\n    CommunityMain,\n    LoggerMain,\n    IssuesMain,\n    InsightsMain,\n    DependencyResolverMain,\n    ScopeMain,\n    ExportMain,\n    BuilderMain\n  ]) {\n    const logger = loggerMain.createLogger(SnappingAspect.id);\n    const snapping = new SnappingMain(\n      workspace,\n      logger,\n      issues,\n      insights,\n      dependencyResolver,\n      scope,\n      exporter,\n      builder\n    );\n    const snapCmd = new SnapCmd(community.getBaseDomain(), snapping, logger);\n    const tagCmd = new TagCmd(snapping, logger);\n    const tagFromScopeCmd = new TagFromScopeCmd(snapping, logger);\n    const resetCmd = new ResetCmd(snapping);\n    cli.register(tagCmd, snapCmd, resetCmd, tagFromScopeCmd);\n    return snapping;\n  }\n}\n\nSnappingAspect.addRuntime(SnappingMain);\n\nexport default SnappingMain;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAMA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAKA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;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"}