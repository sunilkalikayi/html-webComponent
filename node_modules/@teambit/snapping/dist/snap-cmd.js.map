{"version":3,"names":["SnapCmd","constructor","docsDomain","snapping","logger","name","description","COMPONENT_PATTERN_HELP","Object","keys","IssuesClasses","join","extendedDescription","WILDCARD_HELP","report","pattern","message","all","force","unmerged","ignoreIssues","build","skipTests","skipAutoSnap","disableSnapPipeline","forceDeploy","unmodified","isFeatureEnabled","BUILD_ON_CI","Boolean","disableTagAndSnapPipelines","BitError","consoleWarning","results","snap","chalk","yellow","NOTHING_TO_SNAP_MSG","snappedComponents","autoSnappedResults","warnings","newComponents","laneName","changedComponents","filter","component","searchWithoutVersion","id","addedComponents","autoTaggedCount","length","warningsOutput","tagExplanation","outputComponents","comps","map","componentOutput","toString","autoTag","result","triggeredBy","searchWithoutScopeAndVersion","autoTagComp","a","AUTO_SNAPPED_MSG","outputIfExists","label","explanation","components","underline","laneStr","green"],"sources":["snap-cmd.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { IssuesClasses } from '@teambit/component-issues';\nimport { Command, CommandOptions } from '@teambit/cli';\nimport { isFeatureEnabled, BUILD_ON_CI } from '@teambit/legacy/dist/api/consumer/lib/feature-toggle';\nimport {\n  WILDCARD_HELP,\n  NOTHING_TO_SNAP_MSG,\n  AUTO_SNAPPED_MSG,\n  COMPONENT_PATTERN_HELP,\n} from '@teambit/legacy/dist/constants';\nimport { BitError } from '@teambit/bit-error';\nimport { Logger } from '@teambit/logger';\nimport { SnapResults } from '@teambit/legacy/dist/api/consumer/lib/snap';\nimport { SnappingMain } from './snapping.main.runtime';\n\nexport class SnapCmd implements Command {\n  name = 'snap [component-pattern]';\n  description = 'EXPERIMENTAL. create an immutable and exportable component snapshot (no release version)';\n  extendedDescription: string;\n  arguments = [\n    {\n      name: 'component-pattern',\n      description: `${COMPONENT_PATTERN_HELP}. By default, all new and modified components are snapped.`,\n    },\n  ];\n  alias = '';\n  options = [\n    ['m', 'message <message>', 'log message describing the latest changes'],\n    ['', 'unmodified', 'include unmodified components (by default, only new and modified components are snapped)'],\n    ['', 'unmerged', 'EXPERIMENTAL. complete a merge process by snapping the unmerged components'],\n    ['', 'build', 'Harmony only. run the pipeline build and complete the tag'],\n    ['', 'skip-tests', 'skip running component tests during snap process'],\n    ['', 'skip-auto-snap', 'skip auto snapping dependents'],\n    ['', 'disable-snap-pipeline', 'skip the snap pipeline'],\n    ['', 'force-deploy', 'Harmony only. run the deploy pipeline although the build failed'],\n    [\n      'i',\n      'ignore-issues [issues]',\n      `ignore component issues (shown in \"bit status\" as \"issues found\"), issues to ignore:\n[${Object.keys(IssuesClasses).join(', ')}]\nto ignore multiple issues, separate them by a comma and wrap with quotes. to ignore all issues, specify \"*\".`,\n    ],\n    ['a', 'all', 'DEPRECATED (not needed anymore, it is the default now). snap all new and modified components'],\n    [\n      'f',\n      'force',\n      'DEPRECATED (use \"--skip-tests\" or \"--unmodified\" instead). force-snap even if tests are failing and even when component has not changed',\n    ],\n  ] as CommandOptions;\n  loader = true;\n  private = true;\n  migration = true;\n\n  constructor(docsDomain: string, private snapping: SnappingMain, private logger: Logger) {\n    this.extendedDescription = `https://${docsDomain}/components/snaps\n${WILDCARD_HELP('snap')}`;\n  }\n\n  async report(\n    [pattern]: string[],\n    {\n      message = '',\n      all = false,\n      force = false,\n      unmerged = false,\n      ignoreIssues,\n      build,\n      skipTests = false,\n      skipAutoSnap = false,\n      disableSnapPipeline = false,\n      forceDeploy = false,\n      unmodified = false,\n    }: {\n      message?: string;\n      all?: boolean;\n      force?: boolean;\n      unmerged?: boolean;\n      ignoreIssues?: string;\n      build?: boolean;\n      skipTests?: boolean;\n      skipAutoSnap?: boolean;\n      disableSnapPipeline?: boolean;\n      forceDeploy?: boolean;\n      unmodified?: boolean;\n    }\n  ) {\n    build = isFeatureEnabled(BUILD_ON_CI) ? Boolean(build) : true;\n    const disableTagAndSnapPipelines = disableSnapPipeline;\n    if (disableTagAndSnapPipelines && forceDeploy) {\n      throw new BitError('you can use either force-deploy or disable-snap-pipeline, but not both');\n    }\n\n    if (all) {\n      this.logger.consoleWarning(\n        `--all is deprecated, please omit it. \"bit snap\" by default will snap all new and modified components`\n      );\n    }\n    if (force) {\n      this.logger.consoleWarning(\n        `--force is deprecated, use either --skip-tests or --unmodified depending on the use case`\n      );\n      if (pattern) unmodified = true;\n    }\n    if (!message) {\n      this.logger.consoleWarning(\n        `--message will be mandatory in the next few releases. make sure to add a message with your snap`\n      );\n    }\n\n    const results = await this.snapping.snap({\n      pattern,\n      message,\n      unmerged,\n      ignoreIssues,\n      build,\n      skipTests,\n      skipAutoSnap,\n      disableTagAndSnapPipelines,\n      forceDeploy,\n      unmodified,\n    });\n\n    if (!results) return chalk.yellow(NOTHING_TO_SNAP_MSG);\n    const { snappedComponents, autoSnappedResults, warnings, newComponents, laneName }: SnapResults = results;\n    const changedComponents = snappedComponents.filter(\n      (component) => !newComponents.searchWithoutVersion(component.id)\n    );\n    const addedComponents = snappedComponents.filter((component) => newComponents.searchWithoutVersion(component.id));\n    const autoTaggedCount = autoSnappedResults ? autoSnappedResults.length : 0;\n\n    const warningsOutput = warnings && warnings.length ? `${chalk.yellow(warnings.join('\\n'))}\\n\\n` : '';\n    const tagExplanation = `\\n(use \"bit export\" to push these components to a remote\")\n(use \"bit reset\" to unstage versions)\\n`;\n\n    const outputComponents = (comps) => {\n      return comps\n        .map((component) => {\n          let componentOutput = `     > ${component.id.toString()}`;\n          const autoTag = autoSnappedResults.filter((result) =>\n            result.triggeredBy.searchWithoutScopeAndVersion(component.id)\n          );\n          if (autoTag.length) {\n            const autoTagComp = autoTag.map((a) => a.component.id.toString());\n            componentOutput += `\\n       ${AUTO_SNAPPED_MSG} (${autoTagComp.length} total):\n            ${autoTagComp.join('\\n            ')}`;\n          }\n          return componentOutput;\n        })\n        .join('\\n');\n    };\n\n    const outputIfExists = (label, explanation, components) => {\n      if (!components.length) return '';\n      return `\\n${chalk.underline(label)}\\n(${explanation})\\n${outputComponents(components)}\\n`;\n    };\n    const laneStr = laneName ? ` on \"${laneName}\" lane` : '';\n\n    return (\n      warningsOutput +\n      chalk.green(`${snappedComponents.length + autoTaggedCount} component(s) snapped${laneStr}`) +\n      tagExplanation +\n      outputIfExists('new components', 'first version for components', addedComponents) +\n      outputIfExists('changed components', 'components that got a version bump', changedComponents)\n    );\n  }\n}\n"],"mappings":"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"}