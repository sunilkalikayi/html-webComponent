{"version":3,"names":["RELEASE_TYPES","TagFromScopeCmd","constructor","snapping","logger","join","Object","keys","IssuesClasses","report","patterns","push","message","ver","patch","minor","major","preRelease","increment","prereleaseId","ignoreIssues","ignoreNewestVersion","skipTests","build","disableTagPipeline","forceDeploy","incrementBy","BitError","Error","releaseFlags","filter","x","length","getReleaseType","includes","DEFAULT_BIT_RELEASE_TYPE","getPreReleaseId","undefined","params","ids","releaseType","preReleaseId","disableTagAndSnapPipelines","version","results","tagFromScope","chalk","yellow","NOTHING_TO_TAG_MSG","taggedComponents","autoTaggedResults","warnings","newComponents","changedComponents","component","searchWithoutVersion","id","addedComponents","autoTaggedCount","warningsOutput","tagExplanationPersist","tagExplanationSoft","tagExplanation","isSoftTag","outputComponents","comps","map","componentOutput","toString","autoTag","result","triggeredBy","searchWithoutScopeAndVersion","autoTagComp","a","AUTO_TAGGED_MSG","publishOutput","publishedPackages","successTitle","green","successCompsStr","successOutput","softTagPrefix","outputIfExists","label","explanation","components","underline","newDesc","changedDesc","softTagClarification","bold"],"sources":["tag-from-scope.cmd.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { Command, CommandOptions } from '@teambit/cli';\nimport { TagResults, NOTHING_TO_TAG_MSG, AUTO_TAGGED_MSG } from '@teambit/legacy/dist/api/consumer/lib/tag';\nimport { DEFAULT_BIT_RELEASE_TYPE } from '@teambit/legacy/dist/constants';\nimport { IssuesClasses } from '@teambit/component-issues';\nimport { ReleaseType } from 'semver';\nimport { BitError } from '@teambit/bit-error';\nimport { Logger } from '@teambit/logger';\nimport { SnappingMain } from './snapping.main.runtime';\nimport { BasicTagParams } from './tag-model-component';\n\nconst RELEASE_TYPES = ['major', 'premajor', 'minor', 'preminor', 'patch', 'prepatch', 'prerelease'];\n\nexport class TagFromScopeCmd implements Command {\n  name = '_tag <component-id...>';\n  group = 'development';\n  private = true;\n  description = 'create an immutable and exportable component snapshot, tagged with a release version.';\n  extendedDescription = `you can specify a version per id using \"@\" sign, e.g. bit tag foo@1.0.0 bar@minor baz@major`;\n  helpUrl = 'components/tags';\n  alias = '';\n  loader = true;\n  options = [\n    ['', 'push', 'export the updated objects to the original scopes once done'],\n    ['m', 'message <message>', 'a log message describing latest changes'],\n    ['v', 'ver <version>', 'tag with the given version'],\n    ['l', 'increment <level>', `options are: [${RELEASE_TYPES.join(', ')}], default to patch`],\n    ['', 'prerelease-id <id>', 'prerelease identifier (e.g. \"dev\" to get \"1.0.0-dev.1\")'],\n    ['p', 'patch', 'syntactic sugar for \"--increment patch\"'],\n    ['', 'minor', 'syntactic sugar for \"--increment minor\"'],\n    ['', 'major', 'syntactic sugar for \"--increment major\"'],\n    ['', 'pre-release [identifier]', 'syntactic sugar for \"--increment prerelease\" and `--prerelease-id <identifier>`'],\n    ['', 'skip-tests', 'skip running component tests during tag process'],\n    ['', 'disable-tag-pipeline', 'skip the tag pipeline to avoid publishing the components'],\n    ['', 'force-deploy', 'run the tag pipeline although the build failed'],\n    [\n      '',\n      'increment-by <number>',\n      '(default to 1) increment semver flag (patch/minor/major) by. e.g. incrementing patch by 2: 0.0.1 -> 0.0.3.',\n    ],\n    [\n      'i',\n      'ignore-issues [issues]',\n      `ignore component issues (shown in \"bit status\" as \"issues found\"), issues to ignore:\n[${Object.keys(IssuesClasses).join(', ')}]\nto ignore multiple issues, separate them by a comma and wrap with quotes. to ignore all issues, specify \"*\".`,\n    ],\n    ['I', 'ignore-newest-version', 'ignore existing of newer versions (default = false)'],\n    ['b', 'build', 'EXPERIMENTAL. not needed for now. run the pipeline build and complete the tag'],\n  ] as CommandOptions;\n  remoteOp = true; // In case a compiler / tester is not installed\n\n  constructor(private snapping: SnappingMain, private logger: Logger) {}\n\n  // eslint-disable-next-line complexity\n  async report(\n    [patterns = []]: [string[]],\n    {\n      push,\n      message = '',\n      ver,\n      patch,\n      minor,\n      major,\n      preRelease,\n      increment,\n      prereleaseId,\n      ignoreIssues,\n      ignoreNewestVersion = false,\n      skipTests = false,\n      build,\n      disableTagPipeline = false,\n      forceDeploy = false,\n      incrementBy = 1,\n    }: {\n      push?: boolean;\n      ver?: string;\n      patch?: boolean;\n      minor?: boolean;\n      major?: boolean;\n      increment?: ReleaseType;\n      preRelease?: string;\n      prereleaseId?: string;\n      ignoreIssues?: string;\n      incrementBy?: number;\n      disableTagPipeline?: boolean;\n    } & Partial<BasicTagParams>\n  ): Promise<string> {\n    if (ignoreIssues && typeof ignoreIssues === 'boolean') {\n      throw new BitError(`--ignore-issues expects issues to be ignored, please run \"bit tag -h\" for the issues list`);\n    }\n    if (!message) {\n      throw new Error('message is mandatory');\n    }\n    if (prereleaseId && (!increment || increment === 'major' || increment === 'minor' || increment === 'patch')) {\n      throw new BitError(\n        `--prerelease-id should be entered along with --increment flag, while --increment must be one of the following: [prepatch, prerelease, preminor, premajor]`\n      );\n    }\n\n    const releaseFlags = [patch, minor, major, preRelease].filter((x) => x);\n    if (releaseFlags.length > 1) {\n      throw new BitError('you can use only one of the following - patch, minor, major, pre-release');\n    }\n\n    const getReleaseType = (): ReleaseType => {\n      if (increment) {\n        if (!RELEASE_TYPES.includes(increment)) {\n          throw new BitError(`invalid increment-level \"${increment}\".\n  semver allows the following options only: ${RELEASE_TYPES.join(', ')}`);\n        }\n        return increment;\n      }\n      if (major) return 'major';\n      if (minor) return 'minor';\n      if (patch) return 'patch';\n      if (preRelease) return 'prerelease';\n      return DEFAULT_BIT_RELEASE_TYPE;\n    };\n    const getPreReleaseId = (): string | undefined => {\n      if (prereleaseId) {\n        return prereleaseId;\n      }\n      if (preRelease && typeof preRelease === 'string') {\n        return preRelease;\n      }\n      return undefined;\n    };\n\n    const params = {\n      ids: patterns,\n      push,\n      message,\n      releaseType: getReleaseType(),\n      preReleaseId: getPreReleaseId(),\n      ignoreIssues,\n      ignoreNewestVersion,\n      skipTests,\n      build,\n      disableTagAndSnapPipelines: disableTagPipeline,\n      forceDeploy,\n      incrementBy,\n      version: ver,\n    };\n\n    const results = await this.snapping.tagFromScope(params);\n    if (!results) return chalk.yellow(NOTHING_TO_TAG_MSG);\n    const { taggedComponents, autoTaggedResults, warnings, newComponents }: TagResults = results;\n    const changedComponents = taggedComponents.filter((component) => !newComponents.searchWithoutVersion(component.id));\n    const addedComponents = taggedComponents.filter((component) => newComponents.searchWithoutVersion(component.id));\n    const autoTaggedCount = autoTaggedResults ? autoTaggedResults.length : 0;\n\n    const warningsOutput = warnings && warnings.length ? `${chalk.yellow(warnings.join('\\n'))}\\n\\n` : '';\n    const tagExplanationPersist = `\\n(use \"bit export [collection]\" to push these components to a remote\")\n(use \"bit reset\" to unstage versions)\\n`;\n    const tagExplanationSoft = `\\n(use \"bit tag --persist\" to persist the changes\")\n(use \"bit reset --soft\" to remove the soft-tags)\\n`;\n\n    const tagExplanation = results.isSoftTag ? tagExplanationSoft : tagExplanationPersist;\n\n    const outputComponents = (comps) => {\n      return comps\n        .map((component) => {\n          let componentOutput = `     > ${component.id.toString()}`;\n          const autoTag = autoTaggedResults.filter((result) =>\n            result.triggeredBy.searchWithoutScopeAndVersion(component.id)\n          );\n          if (autoTag.length) {\n            const autoTagComp = autoTag.map((a) => a.component.id.toString());\n            componentOutput += `\\n       ${AUTO_TAGGED_MSG}:\n            ${autoTagComp.join('\\n            ')}`;\n          }\n          return componentOutput;\n        })\n        .join('\\n');\n    };\n\n    const publishOutput = () => {\n      const { publishedPackages } = results;\n      if (!publishedPackages || !publishedPackages.length) return '';\n      const successTitle = `\\n\\n${chalk.green(\n        `published the following ${publishedPackages.length} component(s) successfully\\n`\n      )}`;\n      const successCompsStr = publishedPackages.join('\\n');\n      const successOutput = successCompsStr ? successTitle + successCompsStr : '';\n      return successOutput;\n    };\n\n    const softTagPrefix = results.isSoftTag ? 'soft-tagged ' : '';\n    const outputIfExists = (label, explanation, components) => {\n      if (!components.length) return '';\n      return `\\n${chalk.underline(softTagPrefix + label)}\\n(${explanation})\\n${outputComponents(components)}\\n`;\n    };\n\n    const newDesc = results.isSoftTag\n      ? 'set to be tagged first version for components'\n      : 'first version for components';\n    const changedDesc = results.isSoftTag\n      ? 'components that set to get a version bump'\n      : 'components that got a version bump';\n    const softTagClarification = results.isSoftTag\n      ? chalk.bold(\n          'keep in mind that this is a soft-tag (changes recorded to be tagged), to persist the changes use --persist flag'\n        )\n      : '';\n    return (\n      warningsOutput +\n      chalk.green(\n        `${taggedComponents.length + autoTaggedCount} component(s) ${results.isSoftTag ? 'soft-' : ''}tagged`\n      ) +\n      tagExplanation +\n      outputIfExists('new components', newDesc, addedComponents) +\n      outputIfExists('changed components', changedDesc, changedComponents) +\n      publishOutput() +\n      softTagClarification\n    );\n  }\n}\n"],"mappings":"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"}