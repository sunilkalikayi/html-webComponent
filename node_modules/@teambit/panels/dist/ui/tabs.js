"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tab = Tab;
exports.TabContainer = void 0;
exports.TabList = TabList;
exports.TabPanel = void 0;
function _extends2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
  _extends2 = function () {
    return data;
  };
  return data;
}
function _classnames() {
  const data = _interopRequireDefault(require("classnames"));
  _classnames = function () {
    return data;
  };
  return data;
}
function _react() {
  const data = _interopRequireDefault(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _reactTabs() {
  const data = require("react-tabs");
  _reactTabs = function () {
    return data;
  };
  return data;
}
function _tabsModule() {
  const data = _interopRequireDefault(require("./tabs.module.scss"));
  _tabsModule = function () {
    return data;
  };
  return data;
}
const TabContainer = _reactTabs().Tabs;
// TabContainer.tabsRole = TabPanel
exports.TabContainer = TabContainer;
function TabList(props) {
  return (
    /*#__PURE__*/
    // @ts-ignore @TODO "Types of property 'ref' are incompatible"
    _react().default.createElement(_reactTabs().TabList, (0, _extends2().default)({}, props, {
      className: (0, _classnames().default)(_tabsModule().default.tabContainer, props.className)
    }))
  );
}
TabList.tabsRole = 'TabList';
const TabPanel = _reactTabs().TabPanel;
exports.TabPanel = TabPanel;
function Tab(props) {
  return (
    /*#__PURE__*/
    // @ts-ignore @TODO "Types of property 'ref' are incompatible"
    _react().default.createElement(_reactTabs().Tab, (0, _extends2().default)({}, props, {
      className: (0, _classnames().default)(props.className, _tabsModule().default.tab),
      selectedClassName: _tabsModule().default.active,
      disabledClassName: _tabsModule().default.disabled
    }))
  );
}
Tab.tabsRole = 'Tab';

//# sourceMappingURL=tabs.js.map