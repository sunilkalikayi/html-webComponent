"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CompositionContent = CompositionContent;
exports.Compositions = Compositions;
function _react() {
  const data = _interopRequireWildcard(require("react"));
  _react = function () {
    return data;
  };
  return data;
}
function _lodash() {
  const data = _interopRequireDefault(require("lodash.head"));
  _lodash = function () {
    return data;
  };
  return data;
}
function _queryString() {
  const data = _interopRequireDefault(require("query-string"));
  _queryString = function () {
    return data;
  };
  return data;
}
function _documenterTheme() {
  const data = require("@teambit/documenter.theme.theme-context");
  _documenterTheme = function () {
    return data;
  };
  return data;
}
function _baseUiSurfacesSplitPane() {
  const data = require("@teambit/base-ui.surfaces.split-pane.split-pane");
  _baseUiSurfacesSplitPane = function () {
    return data;
  };
  return data;
}
function _baseUiSurfacesSplitPane2() {
  const data = require("@teambit/base-ui.surfaces.split-pane.hover-splitter");
  _baseUiSurfacesSplitPane2 = function () {
    return data;
  };
  return data;
}
function _component() {
  const data = require("@teambit/component");
  _component = function () {
    return data;
  };
  return data;
}
function _documenterUi() {
  const data = require("@teambit/documenter.ui.property-table");
  _documenterUi = function () {
    return data;
  };
  return data;
}
function _panels() {
  const data = require("@teambit/panels");
  _panels = function () {
    return data;
  };
  return data;
}
function _docsUiQueries() {
  const data = require("@teambit/docs.ui.queries.get-docs");
  _docsUiQueries = function () {
    return data;
  };
  return data;
}
function _uiFoundationUiButtons() {
  const data = require("@teambit/ui-foundation.ui.buttons.collapser");
  _uiFoundationUiButtons = function () {
    return data;
  };
  return data;
}
function _designUi() {
  const data = require("@teambit/design.ui.empty-box");
  _designUi = function () {
    return data;
  };
  return data;
}
function _previewUi() {
  const data = require("@teambit/preview.ui.component-preview");
  _previewUi = function () {
    return data;
  };
  return data;
}
function _uiFoundationUiHooks() {
  const data = require("@teambit/ui-foundation.ui.hooks.use-is-mobile");
  _uiFoundationUiHooks = function () {
    return data;
  };
  return data;
}
function _compositionsUi() {
  const data = require("@teambit/compositions.ui.compositions-menu-bar");
  _compositionsUi = function () {
    return data;
  };
  return data;
}
function _compositionsUiHooks() {
  const data = require("@teambit/compositions.ui.hooks.use-composition");
  _compositionsUiHooks = function () {
    return data;
  };
  return data;
}
function _mdxUi() {
  const data = require("@teambit/mdx.ui.mdx-layout");
  _mdxUi = function () {
    return data;
  };
  return data;
}
function _designUi2() {
  const data = require("@teambit/design.ui.separator");
  _designUi2 = function () {
    return data;
  };
  return data;
}
function _documenterUi2() {
  const data = require("@teambit/documenter.ui.heading");
  _documenterUi2 = function () {
    return data;
  };
  return data;
}
function _designUi3() {
  const data = require("@teambit/design.ui.alert-card");
  _designUi3 = function () {
    return data;
  };
  return data;
}
function _baseReactNavigation() {
  const data = require("@teambit/base-react.navigation.link");
  _baseReactNavigation = function () {
    return data;
  };
  return data;
}
function _designUiInput() {
  const data = require("@teambit/design.ui.input.option-button");
  _designUiInput = function () {
    return data;
  };
  return data;
}
function _designUiSurfaces() {
  const data = require("@teambit/design.ui.surfaces.status-message-card");
  _designUiSurfaces = function () {
    return data;
  };
  return data;
}
function _compositionsModule() {
  const data = _interopRequireDefault(require("./compositions.module.scss"));
  _compositionsModule = function () {
    return data;
  };
  return data;
}
function _ui() {
  const data = require("./ui");
  _ui = function () {
    return data;
  };
  return data;
}
function _compositionsPanel() {
  const data = require("./ui/compositions-panel/compositions-panel");
  _compositionsPanel = function () {
    return data;
  };
  return data;
}
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function Compositions({
  menuBarWidgets,
  emptyState
}) {
  var _component$preview;
  const component = (0, _react().useContext)(_component().ComponentContext);
  const [selected, selectComposition] = (0, _react().useState)((0, _lodash().default)(component.compositions));
  const selectedRef = (0, _react().useRef)(selected);
  selectedRef.current = selected;
  const properties = (0, _docsUiQueries().useDocs)(component.id);

  // reset selected composition when component changes.
  // this does trigger renderer, but perf seems to be ok
  (0, _react().useEffect)(() => {
    var _selectedRef$current;
    const prevId = (_selectedRef$current = selectedRef.current) === null || _selectedRef$current === void 0 ? void 0 : _selectedRef$current.identifier;
    const next = component.compositions.find(c => c.identifier === prevId) || component.compositions[0];
    selectComposition(next);
  }, [component]);
  const isMobile = (0, _uiFoundationUiHooks().useIsMobile)();
  const showSidebar = !isMobile && component.compositions.length > 0;
  const [isSidebarOpen, setSidebarOpenness] = (0, _react().useState)(showSidebar);
  const sidebarOpenness = isSidebarOpen ? _baseUiSurfacesSplitPane().Layout.row : _baseUiSurfacesSplitPane().Layout.left;
  const compositionUrl = (0, _previewUi().toPreviewUrl)(component, 'compositions');
  const isScaling = component === null || component === void 0 ? void 0 : (_component$preview = component.preview) === null || _component$preview === void 0 ? void 0 : _component$preview.isScaling;
  const compositionIdentifierParam = isScaling ? `name=${selected === null || selected === void 0 ? void 0 : selected.identifier}` : selected === null || selected === void 0 ? void 0 : selected.identifier;
  const currentCompositionFullUrl = (0, _previewUi().toPreviewUrl)(component, 'compositions', compositionIdentifierParam);
  const [compositionParams, setCompositionParams] = (0, _react().useState)({});
  const queryParams = (0, _react().useMemo)(() => _queryString().default.stringify(compositionParams), [compositionParams]);

  // collapse sidebar when empty, reopen when not
  (0, _react().useEffect)(() => setSidebarOpenness(showSidebar), [showSidebar]);
  return /*#__PURE__*/_react().default.createElement(_compositionsUiHooks().CompositionContextProvider, {
    queryParams: compositionParams,
    setQueryParams: setCompositionParams
  }, /*#__PURE__*/_react().default.createElement(_baseUiSurfacesSplitPane().SplitPane, {
    layout: sidebarOpenness,
    size: "85%",
    className: _compositionsModule().default.compositionsPage
  }, /*#__PURE__*/_react().default.createElement(_baseUiSurfacesSplitPane().Pane, {
    className: _compositionsModule().default.left
  }, /*#__PURE__*/_react().default.createElement(_compositionsUi().CompositionsMenuBar, {
    menuBarWidgets: menuBarWidgets,
    className: _compositionsModule().default.menuBar
  }, /*#__PURE__*/_react().default.createElement(_baseReactNavigation().Link, {
    external: true,
    href: currentCompositionFullUrl,
    className: _compositionsModule().default.openInNewTab
  }, /*#__PURE__*/_react().default.createElement(_designUiInput().OptionButton, {
    icon: "open-tab"
  }))), /*#__PURE__*/_react().default.createElement(CompositionContent, {
    emptyState: emptyState,
    component: component,
    selected: selected,
    queryParams: queryParams
  })), /*#__PURE__*/_react().default.createElement(_baseUiSurfacesSplitPane2().HoverSplitter, {
    className: _compositionsModule().default.splitter
  }, /*#__PURE__*/_react().default.createElement(_uiFoundationUiButtons().Collapser, {
    placement: "left",
    isOpen: isSidebarOpen,
    onMouseDown: e => e.stopPropagation() // avoid split-pane drag
    ,
    onClick: () => setSidebarOpenness(x => !x),
    tooltipContent: `${isSidebarOpen ? 'Hide' : 'Show'} side compositions`,
    className: _compositionsModule().default.collapser
  })), /*#__PURE__*/_react().default.createElement(_baseUiSurfacesSplitPane().Pane, {
    className: _compositionsModule().default.right
  }, /*#__PURE__*/_react().default.createElement(_documenterTheme().ThemeContext, null, /*#__PURE__*/_react().default.createElement(_panels().TabContainer, {
    className: _compositionsModule().default.tabsContainer
  }, /*#__PURE__*/_react().default.createElement(_panels().TabList, {
    className: _compositionsModule().default.tabs
  }, /*#__PURE__*/_react().default.createElement(_panels().Tab, null, "compositions"), /*#__PURE__*/_react().default.createElement(_panels().Tab, null, "properties")), /*#__PURE__*/_react().default.createElement(_panels().TabPanel, {
    className: _compositionsModule().default.tabContent
  }, /*#__PURE__*/_react().default.createElement(_compositionsPanel().CompositionsPanel, {
    isScaling: isScaling,
    onSelectComposition: selectComposition,
    url: compositionUrl,
    compositions: component.compositions,
    active: selected,
    className: _compositionsModule().default.compost
  })), /*#__PURE__*/_react().default.createElement(_panels().TabPanel, {
    className: _compositionsModule().default.tabContent
  }, properties && properties.length > 0 ? /*#__PURE__*/_react().default.createElement(_documenterUi().PropTable, {
    rows: properties,
    showListView: true
  }) : /*#__PURE__*/_react().default.createElement("div", null)))))));
}
function CompositionContent({
  component,
  selected,
  queryParams,
  emptyState
}) {
  var _component$environmen;
  const env = (_component$environmen = component.environment) === null || _component$environmen === void 0 ? void 0 : _component$environmen.id;
  const EmptyStateTemplate = emptyState === null || emptyState === void 0 ? void 0 : emptyState.get(env || ''); // || defaultTemplate;

  if (component.compositions.length === 0 && component.host === 'teambit.workspace/workspace' && EmptyStateTemplate) {
    return /*#__PURE__*/_react().default.createElement("div", {
      className: _compositionsModule().default.noCompositionsPage
    }, /*#__PURE__*/_react().default.createElement("div", null, /*#__PURE__*/_react().default.createElement(_documenterUi2().H1, {
      className: _compositionsModule().default.title
    }, "Compositions"), /*#__PURE__*/_react().default.createElement(_designUi2().Separator, {
      isPresentational: true,
      className: _compositionsModule().default.separator
    }), /*#__PURE__*/_react().default.createElement(_designUi3().AlertCard, {
      level: "info",
      title: "There are no compositions for this Component. Learn how to add compositions:"
    }, /*#__PURE__*/_react().default.createElement(_mdxUi().MDXLayout, null, /*#__PURE__*/_react().default.createElement(EmptyStateTemplate, null)))));
  }
  if ((component === null || component === void 0 ? void 0 : component.buildStatus) === 'pending' && (component === null || component === void 0 ? void 0 : component.host) === 'teambit.scope/scope') return /*#__PURE__*/_react().default.createElement(_designUiSurfaces().StatusMessageCard, {
    className: _compositionsModule().default.buildStatusMessage,
    status: "PROCESSING",
    title: "component preview pending"
  }, "this might take some time");
  if ((component === null || component === void 0 ? void 0 : component.buildStatus) === 'failed' && (component === null || component === void 0 ? void 0 : component.host) === 'teambit.scope/scope') return /*#__PURE__*/_react().default.createElement(_designUiSurfaces().StatusMessageCard, {
    className: _compositionsModule().default.buildStatusMessage,
    status: "FAILURE",
    title: "failed to get component preview "
  });

  // TODO: get the docs domain from the community aspect and pass it here as a prop
  if (component.compositions.length === 0) {
    return /*#__PURE__*/_react().default.createElement(_designUi().EmptyBox, {
      title: "There are no compositions for this component.",
      linkText: "Learn how to create compositions",
      link: `https://bit.dev/docs/dev-services-overview/compositions/compositions-overview`
    });
  }
  return /*#__PURE__*/_react().default.createElement(_ui().ComponentComposition, {
    className: _compositionsModule().default.compositionsIframe
    // TODO: Oded to add control for viewport.
    ,
    viewport: null,
    component: component,
    forceHeight: "100%",
    composition: selected,
    fullContentHeight: true,
    pubsub: true,
    queryParams: queryParams
  });
}

//# sourceMappingURL=compositions.js.map