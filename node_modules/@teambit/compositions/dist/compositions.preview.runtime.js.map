{"version":3,"names":["CompositionsPreview","constructor","preview","render","componentId","modules","otherPreviewDefs","context","componentMap","fullName","compositions","selectPreviewModel","metadata","getMetadata","active","getActiveComposition","mainModule","default","componentFullName","previewModule","files","combined","Object","assign","componentMapMetadata","undefined","module","firstQueryParam","window","location","hash","split","query","getQuery","compositionId","getParam","first","head","firstId","identifier","values","provider","compPreview","registerPreview","name","bind","PreviewRuntime","PreviewAspect","CompositionsAspect","addRuntime"],"sources":["compositions.preview.runtime.ts"],"sourcesContent":["import { ComponentID } from '@teambit/component-id';\nimport {\n  PreviewAspect,\n  PreviewPreview,\n  RenderingContext,\n  PreviewRuntime,\n  PreviewModule,\n  ModuleFile,\n} from '@teambit/preview';\nimport head from 'lodash.head';\nimport { CompositionBrowserMetadataObject } from './composition';\n\nimport { CompositionsAspect } from './compositions.aspect';\n\nexport class CompositionsPreview {\n  constructor(\n    /**\n     * preview extension.\n     */\n    private preview: PreviewPreview\n  ) {}\n\n  render(componentId: ComponentID, modules: PreviewModule, otherPreviewDefs, context: RenderingContext) {\n    if (!modules.componentMap[componentId.fullName]) return;\n\n    const compositions = this.selectPreviewModel(componentId.fullName, modules);\n    const metadata = this.getMetadata(componentId.fullName, modules);\n    const active = this.getActiveComposition(compositions, metadata);\n\n    modules.mainModule.default(active, context);\n  }\n\n  /** gets relevant information for this preview to render */\n  selectPreviewModel(componentFullName: string, previewModule: PreviewModule) {\n    const files = previewModule.componentMap[componentFullName] || [];\n\n    // allow compositions to come from many files. It is assumed they will have unique named\n    const combined = Object.assign({}, ...files);\n    return combined;\n  }\n\n  getMetadata(componentFullName: string, previewModule: PreviewModule): CompositionBrowserMetadataObject | undefined {\n    const metadata = previewModule?.componentMapMetadata\n      ? previewModule.componentMapMetadata[componentFullName]\n      : undefined;\n    if (metadata) {\n      return metadata as CompositionBrowserMetadataObject;\n    }\n    return undefined;\n  }\n\n  private getActiveComposition(module: ModuleFile, metadata?: CompositionBrowserMetadataObject) {\n    const firstQueryParam = window.location.hash.split('&')[1];\n    const query = this.preview.getQuery();\n    const compositionId = this.preview.getParam(query, 'name') || firstQueryParam;\n\n    if (compositionId && module[compositionId]) {\n      return module[compositionId];\n    }\n\n    if (metadata && metadata.compositions) {\n      const first = head(metadata.compositions);\n      const firstId = first?.identifier;\n      if (firstId && module[firstId]) {\n        return module[firstId];\n      }\n    }\n\n    const first = head(Object.values(module));\n    return first;\n  }\n\n  static runtime = PreviewRuntime;\n\n  static dependencies = [PreviewAspect];\n\n  static async provider([preview]: [PreviewPreview]) {\n    const compPreview = new CompositionsPreview(preview);\n    preview.registerPreview({\n      name: 'compositions',\n      render: compPreview.render.bind(compPreview),\n      selectPreviewModel: compPreview.selectPreviewModel.bind(compPreview),\n      default: true,\n    });\n\n    return compPreview;\n  }\n}\n\nCompositionsAspect.addRuntime(CompositionsPreview);\n"],"mappings":"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"}