{"version":3,"names":["CompositionsPanel","url","compositions","isScaling","onSelectComposition","onSelect","active","className","rest","handleSelect","useCallback","selected","classNames","map","composition","href","identifier","styles","linkWrapper","panelLink","box","name","displayName","right","icon"],"sources":["compositions-panel.tsx"],"sourcesContent":["import { Icon } from '@teambit/evangelist.elements.icon';\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\n\nimport { Composition } from '../../composition';\nimport styles from './compositions-panel.module.scss';\n\nexport type CompositionsPanelProps = {\n  /**\n   * list of compositions\n   */\n  compositions: Composition[];\n  /**\n   * select composition to display\n   */\n  onSelectComposition: (composition: Composition) => void;\n  /**\n   * the currently active composition\n   */\n  active?: Composition;\n  /**\n   * the url to the base composition. doesntc contain the current composition params\n   */\n  url: string;\n  /**\n   * checks if a component is using the new preview api. if false, doesnt scale to support new preview\n   */\n  isScaling?: boolean;\n} & React.HTMLAttributes<HTMLUListElement>;\n\nexport function CompositionsPanel({\n  url,\n  compositions,\n  isScaling,\n  onSelectComposition: onSelect,\n  active,\n  className,\n  ...rest\n}: CompositionsPanelProps) {\n  const handleSelect = useCallback(\n    (selected: Composition) => {\n      onSelect && onSelect(selected);\n    },\n    [onSelect]\n  );\n\n  return (\n    <ul {...rest} className={classNames(className)}>\n      {compositions.map((composition) => {\n        const href = isScaling ? `${url}&name=${composition.identifier}` : `${url}&${composition.identifier}`;\n\n        // TODO - move to composition panel node\n        return (\n          <li\n            key={composition.identifier}\n            className={classNames(styles.linkWrapper, composition === active && styles.active)}\n          >\n            <a className={styles.panelLink} onClick={() => handleSelect(composition)}>\n              <span className={styles.box}></span>\n              <span className={styles.name}>{composition.displayName}</span>\n            </a>\n            <div className={styles.right}>\n              <a className={styles.panelLink} target=\"_blank\" rel=\"noopener noreferrer\" href={href}>\n                <Icon className={styles.icon} of=\"open-tab\" />\n              </a>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAsD;AAAA;AAyB/C,SAASA,iBAAiB,OAQN;EAAA,IARO;MAChCC,GAAG;MACHC,YAAY;MACZC,SAAS;MACTC,mBAAmB,EAAEC,QAAQ;MAC7BC,MAAM;MACNC;IAEsB,CAAC;IADpBC,IAAI;EAEP,MAAMC,YAAY,GAAG,IAAAC,oBAAW,EAC7BC,QAAqB,IAAK;IACzBN,QAAQ,IAAIA,QAAQ,CAACM,QAAQ,CAAC;EAChC,CAAC,EACD,CAACN,QAAQ,CAAC,CACX;EAED,oBACE,kEAAQG,IAAI;IAAE,SAAS,EAAE,IAAAI,qBAAU,EAACL,SAAS;EAAE,IAC5CL,YAAY,CAACW,GAAG,CAAEC,WAAW,IAAK;IACjC,MAAMC,IAAI,GAAGZ,SAAS,GAAI,GAAEF,GAAI,SAAQa,WAAW,CAACE,UAAW,EAAC,GAAI,GAAEf,GAAI,IAAGa,WAAW,CAACE,UAAW,EAAC;;IAErG;IACA,oBACE;MACE,GAAG,EAAEF,WAAW,CAACE,UAAW;MAC5B,SAAS,EAAE,IAAAJ,qBAAU,EAACK,kCAAM,CAACC,WAAW,EAAEJ,WAAW,KAAKR,MAAM,IAAIW,kCAAM,CAACX,MAAM;IAAE,gBAEnF;MAAG,SAAS,EAAEW,kCAAM,CAACE,SAAU;MAAC,OAAO,EAAE,MAAMV,YAAY,CAACK,WAAW;IAAE,gBACvE;MAAM,SAAS,EAAEG,kCAAM,CAACG;IAAI,EAAQ,eACpC;MAAM,SAAS,EAAEH,kCAAM,CAACI;IAAK,GAAEP,WAAW,CAACQ,WAAW,CAAQ,CAC5D,eACJ;MAAK,SAAS,EAAEL,kCAAM,CAACM;IAAM,gBAC3B;MAAG,SAAS,EAAEN,kCAAM,CAACE,SAAU;MAAC,MAAM,EAAC,QAAQ;MAAC,GAAG,EAAC,qBAAqB;MAAC,IAAI,EAAEJ;IAAK,gBACnF,+BAAC,0BAAI;MAAC,SAAS,EAAEE,kCAAM,CAACO,IAAK;MAAC,EAAE,EAAC;IAAU,EAAG,CAC5C,CACA,CACH;EAET,CAAC,CAAC,CACC;AAET"}