{"version":3,"names":["CompositionsMain","constructor","compositionFilePattern","previewFilePattern","preview","workspace","schema","devFiles","envs","getPreviewFiles","components","ComponentMap","as","component","compositionFiles","state","filesystem","byGlob","previewFiles","Set","map","file","relative","files","filter","has","isCompositionFile","filePath","includePatterns","excludePatterns","splitPatterns","matchPatterns","getCompositions","entry","get","CompositionsAspect","id","compositions","data","Composition","fromArray","readCompositions","maybeFiles","byComponent","flatten","computeCompositions","getCompositionFilePattern","getComponentDevPatterns","env","calculateEnv","componentEnvCompositionsDevPatterns","getCompositionsDevPatterns","componentPatterns","concat","getDevPatternToRegister","bind","onComponentLoad","loadOpts","loadCompositions","undefined","composition","toObject","pathArray","path","split","length","exports","parseModule","join","componentDir","exportModel","displayName","staticProperties","identifier","provider","graphql","config","compositionPreviewFilePattern","registerDevPattern","register","compositionsSchema","registerDefinition","CompositionPreviewDefinition","MainRuntime","PreviewAspect","GraphqlAspect","WorkspaceAspect","SchemaAspect","DevFilesAspect","EnvsAspect","addRuntime"],"sources":["compositions.main.runtime.ts"],"sourcesContent":["import { MainRuntime } from '@teambit/cli';\nimport { AspectData, Component, ComponentMap, IComponent } from '@teambit/component';\nimport { DevFilesAspect, DevFilesMain } from '@teambit/dev-files';\nimport EnvsAspect, { EnvsMain } from '@teambit/envs';\nimport { GraphqlAspect, GraphqlMain } from '@teambit/graphql';\nimport { ComponentLoadOptions } from '@teambit/legacy/dist/consumer/component/component-loader';\nimport { AbstractVinyl } from '@teambit/legacy/dist/consumer/component/sources';\nimport { flatten } from '@teambit/legacy/dist/utils';\nimport { PreviewAspect, PreviewMain } from '@teambit/preview';\nimport { SchemaAspect, SchemaMain } from '@teambit/schema';\nimport { matchPatterns, splitPatterns } from '@teambit/toolbox.path.match-patterns';\nimport { Workspace, WorkspaceAspect } from '@teambit/workspace';\nimport { join } from 'path';\nimport { Composition } from './composition';\nimport { CompositionsAspect } from './compositions.aspect';\nimport { compositionsSchema } from './compositions.graphql';\nimport { CompositionPreviewDefinition } from './compositions.preview-definition';\n\nexport type CompositionsConfig = {\n  /**\n   * glob pattern to detect composition files. This includes all related files, like styles and jsons.\n   * @example ['/*.composition?(s).*']\n   */\n  compositionFilePattern: string[];\n  /**\n   * glob pattern to select Preview files. this will only include files matched by compositionFilePattern.\n   * @example ['*.{t,j}s', '*.{t,j}sx']\n   */\n  compositionPreviewFilePattern: string[];\n};\n\n/**\n * the component documentation extension.\n */\nexport class CompositionsMain {\n  constructor(\n    /**\n     * Glob pattern to select all composition files\n     */\n    private compositionFilePattern: string[],\n\n    /**\n     * Glob pattern to select composition preview files\n     */\n    private previewFilePattern: string[],\n\n    /**\n     * envs extension.\n     */\n    private preview: PreviewMain,\n\n    /**\n     * workspace extension.\n     */\n    private workspace: Workspace,\n\n    /**\n     * schema extension.\n     */\n    private schema: SchemaMain,\n\n    private devFiles: DevFilesMain,\n\n    private envs: EnvsMain\n  ) {}\n\n  /**\n   * returns an array of doc file paths for a set of components.\n   */\n  getPreviewFiles(components: Component[]): ComponentMap<AbstractVinyl[]> {\n    return ComponentMap.as<AbstractVinyl[]>(components, (component) => {\n      // this includes non executables, like `button.compositions.module.scss` or `presets.compositions.json`\n      const compositionFiles = component.state.filesystem.byGlob(this.compositionFilePattern);\n\n      // select only relevant preview files (.tsx, etc)\n      const previewFiles = new Set(\n        component.state.filesystem.byGlob(this.previewFilePattern).map((file) => file.relative)\n      );\n      const files = compositionFiles.filter((file) => previewFiles.has(file.relative));\n\n      return files;\n    });\n  }\n\n  /**\n   * checks if a file matches the composition file pattern.\n   */\n  isCompositionFile(filePath: string): boolean {\n    const { includePatterns, excludePatterns } = splitPatterns(this.compositionFilePattern);\n    return matchPatterns(filePath, includePatterns, excludePatterns);\n  }\n\n  /**\n   * get component compositions.\n   */\n  getCompositions(component: IComponent): Composition[] {\n    const entry = component.get(CompositionsAspect.id);\n    if (!entry) return [];\n    const compositions = entry.data.compositions;\n    if (!compositions) return [];\n\n    return Composition.fromArray(compositions);\n  }\n\n  /**\n   * read composition from the component source code.\n   */\n  readCompositions(component: Component): Composition[] {\n    const maybeFiles = this.getPreviewFiles([component]).byComponent(component);\n\n    if (!maybeFiles) return [];\n    const [, files] = maybeFiles;\n    return flatten(\n      files.map((file) => {\n        return this.computeCompositions(component, file);\n      })\n    );\n  }\n\n  getCompositionFilePattern() {\n    return this.compositionFilePattern;\n  }\n\n  getComponentDevPatterns(component: Component) {\n    const env = this.envs.calculateEnv(component).env;\n    const componentEnvCompositionsDevPatterns: string[] = env.getCompositionsDevPatterns\n      ? env.getCompositionsDevPatterns(component)\n      : [];\n    const componentPatterns = componentEnvCompositionsDevPatterns.concat(this.getCompositionFilePattern());\n    return componentPatterns;\n  }\n\n  getDevPatternToRegister() {\n    return this.getComponentDevPatterns.bind(this);\n  }\n\n  async onComponentLoad(component: Component, loadOpts?: ComponentLoadOptions): Promise<AspectData | undefined> {\n    if (loadOpts?.loadCompositions === false) return undefined;\n    const compositions = this.readCompositions(component);\n    return {\n      compositions: compositions.map((composition) => composition.toObject()),\n    };\n  }\n\n  private computeCompositions(component: Component, file: AbstractVinyl): Composition[] {\n    // :TODO hacked for a specific file extension now until david will take care in the compiler.\n    const pathArray = file.path.split('.');\n    pathArray[pathArray.length - 1] = 'js';\n\n    const exports = this.schema.parseModule(join(this.workspace.componentDir(component.id), file.relative));\n    return exports.map((exportModel) => {\n      const displayName = exportModel.staticProperties?.get('compositionName');\n\n      return new Composition(\n        exportModel.identifier,\n        file.relative,\n        typeof displayName === 'string' ? displayName : undefined\n      );\n    });\n  }\n\n  static defaultConfig: CompositionsConfig = {\n    compositionFilePattern: ['**/*.composition?(s).*'],\n    compositionPreviewFilePattern: ['**/*.{t,j}s?(x)'],\n  };\n\n  static runtime = MainRuntime;\n  static dependencies = [PreviewAspect, GraphqlAspect, WorkspaceAspect, SchemaAspect, DevFilesAspect, EnvsAspect];\n\n  static async provider(\n    [preview, graphql, workspace, schema, devFiles, envs]: [\n      PreviewMain,\n      GraphqlMain,\n      Workspace,\n      SchemaMain,\n      DevFilesMain,\n      EnvsMain\n    ],\n    config: CompositionsConfig\n  ) {\n    const compositions = new CompositionsMain(\n      config.compositionFilePattern,\n      config.compositionPreviewFilePattern,\n      preview,\n      workspace,\n      schema,\n      devFiles,\n      envs\n    );\n\n    // TODO: use the docs implementation to allow component specific pattern\n    devFiles.registerDevPattern(compositions.getDevPatternToRegister());\n\n    graphql.register(compositionsSchema(compositions));\n    preview.registerDefinition(new CompositionPreviewDefinition(compositions));\n\n    if (workspace) {\n      workspace.onComponentLoad(compositions.onComponentLoad.bind(compositions));\n    }\n\n    return compositions;\n  }\n}\n\nCompositionsAspect.addRuntime(CompositionsMain);\n"],"mappings":"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"}