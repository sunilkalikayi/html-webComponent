{"version":3,"names":["MochaMain","constructor","logger","createTester","mochaConfig","babelConfig","mochaModule","require","MochaTester","MochaAspect","id","provider","loggerMain","createLogger","LoggerAspect","MainRuntime","addRuntime"],"sources":["mocha.main.runtime.ts"],"sourcesContent":["import { MainRuntime } from '@teambit/cli';\nimport type { TransformOptions } from '@babel/core';\nimport type Mocha from 'mocha';\nimport { Logger, LoggerAspect, LoggerMain } from '@teambit/logger';\nimport { MochaAspect } from './mocha.aspect';\nimport { MochaTester } from './mocha.tester';\n\nexport class MochaMain {\n  constructor(private logger: Logger) {}\n\n  createTester(\n    mochaConfig: Mocha.MochaOptions = {},\n    babelConfig: TransformOptions = {},\n    // eslint-disable-next-line global-require\n    mochaModule = require('mocha')\n  ) {\n    return new MochaTester(MochaAspect.id, this.logger, mochaConfig, babelConfig, mochaModule);\n  }\n\n  static slots = [];\n  static dependencies = [LoggerAspect];\n  static runtime = MainRuntime;\n  static async provider([loggerMain]: [LoggerMain]) {\n    const logger = loggerMain.createLogger(MochaAspect.id);\n    return new MochaMain(logger);\n  }\n}\n\nMochaAspect.addRuntime(MochaMain);\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEO,MAAMA,SAAS,CAAC;EACrBC,WAAW,CAASC,MAAc,EAAE;IAAA,KAAhBA,MAAc,GAAdA,MAAc;EAAG;EAErCC,YAAY,CACVC,WAA+B,GAAG,CAAC,CAAC,EACpCC,WAA6B,GAAG,CAAC,CAAC;EAClC;EACAC,WAAW,GAAGC,OAAO,CAAC,OAAO,CAAC,EAC9B;IACA,OAAO,KAAIC,qBAAW,EAACC,oBAAW,CAACC,EAAE,EAAE,IAAI,CAACR,MAAM,EAAEE,WAAW,EAAEC,WAAW,EAAEC,WAAW,CAAC;EAC5F;EAKA,aAAaK,QAAQ,CAAC,CAACC,UAAU,CAAe,EAAE;IAChD,MAAMV,MAAM,GAAGU,UAAU,CAACC,YAAY,CAACJ,oBAAW,CAACC,EAAE,CAAC;IACtD,OAAO,IAAIV,SAAS,CAACE,MAAM,CAAC;EAC9B;AACF;AAAC;AAAA,gCAnBYF,SAAS,WAYL,EAAE;AAAA,gCAZNA,SAAS,kBAaE,CAACc,sBAAY,CAAC;AAAA,gCAbzBd,SAAS,aAcHe,kBAAW;AAO9BN,oBAAW,CAACO,UAAU,CAAChB,SAAS,CAAC"}