import { Logger } from '@teambit/logger';
import { Tester, CallbackFn, TesterContext, Tests } from '@teambit/tester';
import Mocha from 'mocha';
import type { TransformOptions } from '@babel/core';
export declare class MochaTester implements Tester {
    readonly id: string;
    private logger;
    readonly mochaConfig: Mocha.MochaOptions;
    /**
     * babel config are needed when the spec files are not native javascript and need to be compiled.
     * pass the same config you pass to your babel compiler if you're using one.
     */
    private babelConfig;
    private MochaModule;
    _callback: CallbackFn | undefined;
    displayName: string;
    constructor(id: string, logger: Logger, mochaConfig: Mocha.MochaOptions, 
    /**
     * babel config are needed when the spec files are not native javascript and need to be compiled.
     * pass the same config you pass to your babel compiler if you're using one.
     */
    babelConfig: TransformOptions, MochaModule: typeof Mocha);
    test(context: TesterContext): Promise<Tests>;
    /**
     * @todo: make this work. currently, it doesn't update the UI upon changes.
     */
    watch(context: TesterContext): Promise<Tests>;
    onTestRunComplete(callback: CallbackFn): Promise<void>;
    private runMochaOnOneFile;
    version(): string;
}
