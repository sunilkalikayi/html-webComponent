{"version":3,"names":["withProviders","ensureRootElementInBody","root","document","createElement","id","body","appendChild","getRoot","getElementById","mountHtmlComposition","composition","RenderHtmlComposition"],"sources":["mount.ts"],"sourcesContent":["// import { RenderingContext } from '@teambit/preview';\n// import { StandaloneNotFoundPage } from '@teambit/design.ui.pages.standalone-not-found-page';\nimport { RenderHtmlComposition } from './render-composition';\nimport { HtmlComposition } from './interfaces';\n\n// TODO implement wrapping for providers with html env\n// function wrap(Component: ComponentType, WrapperComponent?: ComponentType): ComponentType {\n//   function Wrapper({ children }: { children?: ReactNode }) {\n\n//   return Wrapper;\n// }\n\n/**\n * HOC to wrap and mount all registered providers into the DOM.\n * TODO implement for regular html providers/wrappers with wrap function above\n */\nexport function withProviders() {\n  return `<div></div>`;\n}\n\nfunction ensureRootElementInBody() {\n  const root = document.createElement('div');\n  root.id = 'root';\n  document.body.appendChild(root);\n  return root;\n}\n\nconst getRoot = () => document.getElementById('root') || ensureRootElementInBody();\n\nexport default function mountHtmlComposition(composition: HtmlComposition) {\n  const root = getRoot();\n  RenderHtmlComposition(root, composition);\n}\n"],"mappings":";;;;;;;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAFA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACO,SAASA,aAAa,GAAG;EAC9B,OAAQ,aAAY;AACtB;AAEA,SAASC,uBAAuB,GAAG;EACjC,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC1CF,IAAI,CAACG,EAAE,GAAG,MAAM;EAChBF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,IAAI,CAAC;EAC/B,OAAOA,IAAI;AACb;AAEA,MAAMM,OAAO,GAAG,MAAML,QAAQ,CAACM,cAAc,CAAC,MAAM,CAAC,IAAIR,uBAAuB,EAAE;AAEnE,SAASS,oBAAoB,CAACC,WAA4B,EAAE;EACzE,MAAMT,IAAI,GAAGM,OAAO,EAAE;EACtB,IAAAI,0CAAqB,EAACV,IAAI,EAAES,WAAW,CAAC;AAC1C"}