"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mountHtmlComposition;
exports.withProviders = withProviders;
function _renderComposition() {
  const data = require("./render-composition");
  _renderComposition = function () {
    return data;
  };
  return data;
}
// import { RenderingContext } from '@teambit/preview';
// import { StandaloneNotFoundPage } from '@teambit/design.ui.pages.standalone-not-found-page';

// TODO implement wrapping for providers with html env
// function wrap(Component: ComponentType, WrapperComponent?: ComponentType): ComponentType {
//   function Wrapper({ children }: { children?: ReactNode }) {

//   return Wrapper;
// }

/**
 * HOC to wrap and mount all registered providers into the DOM.
 * TODO implement for regular html providers/wrappers with wrap function above
 */
function withProviders() {
  return `<div></div>`;
}
function ensureRootElementInBody() {
  const root = document.createElement('div');
  root.id = 'root';
  document.body.appendChild(root);
  return root;
}
const getRoot = () => document.getElementById('root') || ensureRootElementInBody();
function mountHtmlComposition(composition) {
  const root = getRoot();
  (0, _renderComposition().RenderHtmlComposition)(root, composition);
}

//# sourceMappingURL=mount.js.map