"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UndeprecateCmd = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _chalk() {
  const data = _interopRequireDefault(require("chalk"));
  _chalk = function () {
    return data;
  };
  return data;
}
class UndeprecateCmd {
  constructor(deprecation, workspace) {
    this.deprecation = deprecation;
    this.workspace = workspace;
    (0, _defineProperty2().default)(this, "name", 'undeprecate <id>');
    (0, _defineProperty2().default)(this, "group", 'collaborate');
    (0, _defineProperty2().default)(this, "description", 'undeprecate a deprecated component (local/remote)');
    (0, _defineProperty2().default)(this, "alias", '');
    (0, _defineProperty2().default)(this, "options", []);
    (0, _defineProperty2().default)(this, "loader", true);
    (0, _defineProperty2().default)(this, "migration", true);
    (0, _defineProperty2().default)(this, "skipWorkspace", true);
    (0, _defineProperty2().default)(this, "remoteOp", true);
  }
  async report([id]) {
    const result = await this.undeprecate(id);
    if (result) {
      return _chalk().default.green(`the component "${id}" has been undeprecated successfully`);
    }
    return _chalk().default.bold(`the component "${id}" is already undeprecated. no changes have been made`);
  }
  async undeprecate(id) {
    const componentId = await this.workspace.resolveComponentId(id);
    return this.deprecation.unDeprecate(componentId);
  }
}
exports.UndeprecateCmd = UndeprecateCmd;

//# sourceMappingURL=undeprecate-cmd.js.map