{"version":3,"names":["DeprecationMain","constructor","scope","workspace","getDeprecationInfo","component","data","config","extensions","findExtension","DeprecationAspect","id","deprecatedBackwardCompatibility","state","_consumer","deprecated","isDeprecate","Boolean","deprecate","newId","ComponentID","fromObject","toString","undefined","componentId","results","bitMap","addComponentConfig","toObject","write","unDeprecate","provider","graphql","componentAspect","cli","deprecation","register","DeprecateCmd","UndeprecateCmd","registerShowFragments","DeprecationFragment","deprecationSchema","MainRuntime","GraphqlAspect","ScopeAspect","ComponentAspect","WorkspaceAspect","CLIAspect","addRuntime"],"sources":["deprecation.main.runtime.ts"],"sourcesContent":["import { CLIAspect, CLIMain, MainRuntime } from '@teambit/cli';\nimport { ComponentMain, ComponentAspect, Component, ComponentID } from '@teambit/component';\nimport { ScopeMain, ScopeAspect } from '@teambit/scope';\nimport WorkspaceAspect, { Workspace } from '@teambit/workspace';\nimport { GraphqlAspect, GraphqlMain } from '@teambit/graphql';\nimport { ComponentIdObj } from '@teambit/component-id';\nimport { DeprecationAspect } from './deprecation.aspect';\nimport { deprecationSchema } from './deprecation.graphql';\nimport { DeprecationFragment } from './deprecation.fragment';\nimport { DeprecateCmd } from './deprecate-cmd';\nimport { UndeprecateCmd } from './undeprecate-cmd';\n\nexport type DeprecationInfo = {\n  isDeprecate: boolean;\n  newId?: string;\n};\n\nexport type DeprecationMetadata = {\n  deprecate?: boolean;\n  newId?: ComponentIdObj;\n};\n\nexport class DeprecationMain {\n  constructor(private scope: ScopeMain, private workspace: Workspace) {}\n  static runtime = MainRuntime;\n  static dependencies = [GraphqlAspect, ScopeAspect, ComponentAspect, WorkspaceAspect, CLIAspect];\n\n  async getDeprecationInfo(component: Component): Promise<DeprecationInfo> {\n    const data = component.config.extensions.findExtension(DeprecationAspect.id)?.config as\n      | DeprecationMetadata\n      | undefined;\n    const deprecatedBackwardCompatibility = component.state._consumer.deprecated;\n    const isDeprecate = Boolean(data?.deprecate || deprecatedBackwardCompatibility);\n    const newId = data?.newId ? ComponentID.fromObject(data?.newId).toString() : undefined;\n    return {\n      isDeprecate,\n      newId,\n    };\n  }\n\n  /**\n   * mark a component as deprecated. after this change, the component will be modified.\n   * tag and export the component to have it deprecated on the remote.\n   *\n   * @param componentId\n   * @param newId\n   * @returns boolean whether or not the component has been deprecated\n   */\n  async deprecate(componentId: ComponentID, newId?: ComponentID): Promise<boolean> {\n    const results = this.workspace.bitMap.addComponentConfig(componentId, DeprecationAspect.id, {\n      deprecate: true,\n      newId: newId?.toObject(),\n    });\n    await this.workspace.bitMap.write();\n\n    return results;\n  }\n\n  async unDeprecate(componentId: ComponentID) {\n    const results = this.workspace.bitMap.addComponentConfig(componentId, DeprecationAspect.id, {\n      deprecate: false,\n      newId: '',\n    });\n    await this.workspace.bitMap.write();\n\n    return results;\n  }\n\n  static async provider([graphql, scope, componentAspect, workspace, cli]: [\n    GraphqlMain,\n    ScopeMain,\n    ComponentMain,\n    Workspace,\n    CLIMain\n  ]) {\n    const deprecation = new DeprecationMain(scope, workspace);\n    cli.register(new DeprecateCmd(deprecation, workspace), new UndeprecateCmd(deprecation, workspace));\n    componentAspect.registerShowFragments([new DeprecationFragment(deprecation)]);\n    graphql.register(deprecationSchema(deprecation));\n\n    return deprecation;\n  }\n}\n\nDeprecationAspect.addRuntime(DeprecationMain);\n"],"mappings":"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"}