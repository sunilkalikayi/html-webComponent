{"version":3,"names":["ElementTask","constructor","elements","storageResolver","ElementsAspect","id","CompilerAspect","execute","context","url","envRuntime","outDirName","getElementsDirName","elementsWrapperFn","env","getElementsWrapper","bind","targets","computeTargets","bundlerContext","Object","assign","entry","publicPath","getElementsDir","rootPath","bundler","getElementsBundler","bundlerResults","run","computeResults","outputPath","resolve"],"sources":["elements.task.ts"],"sourcesContent":["import { resolve } from 'path';\nimport { ExecutionContext } from '@teambit/envs';\nimport { BuildContext, BuiltTaskResult, BuildTask, TaskLocation, ArtifactStorageResolver } from '@teambit/builder';\nimport { CompilerAspect } from '@teambit/compiler';\nimport { Bundler, BundlerContext, Target } from '@teambit/bundler';\nimport { ElementsMain } from './elements.main.runtime';\nimport { computeTargets } from './compute-targets';\nimport { computeResults } from './compute-results';\nimport { ElementsAspect } from '.';\n\nexport type ElementsWrapperContext = {\n  mainFilePath: string;\n  componentName: string;\n};\nexport type ElementsWrapperFn = (context: ElementsWrapperContext) => string;\n\nexport class ElementTask implements BuildTask {\n  constructor(\n    /**\n     * elements extension.\n     */\n    private elements: ElementsMain,\n    private storageResolver?: ArtifactStorageResolver\n  ) {}\n\n  aspectId = ElementsAspect.id;\n  name = 'GenerateElementBundle';\n  location: TaskLocation = 'end';\n  readonly dependencies = [CompilerAspect.id];\n\n  async execute(context: BuildContext): Promise<BuiltTaskResult> {\n    const url = `/elements/${context.envRuntime.id}`;\n\n    const outDirName = this.elements.getElementsDirName();\n\n    const elementsWrapperFn = context.env.getElementsWrapper.bind(context.env);\n\n    const targets: Target[] = await computeTargets(context, elementsWrapperFn, outDirName);\n\n    const bundlerContext: BundlerContext = Object.assign(context, {\n      targets,\n      entry: [],\n      publicPath: this.getElementsDir(context),\n      rootPath: url,\n    });\n\n    const bundler: Bundler = await context.env.getElementsBundler(bundlerContext, []);\n    const bundlerResults = await bundler.run();\n\n    return computeResults(bundlerContext, bundlerResults, outDirName, this.storageResolver);\n  }\n\n  getElementsDir(context: ExecutionContext) {\n    const outputPath = resolve(`${context.id}/public`);\n    return outputPath;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAQO,MAAMA,WAAW,CAAsB;EAC5CC,WAAW;EACT;AACJ;AACA;EACYC,QAAsB,EACtBC,eAAyC,EACjD;IAAA,KAFQD,QAAsB,GAAtBA,QAAsB;IAAA,KACtBC,eAAyC,GAAzCA,eAAyC;IAAA,kDAGxCC,kBAAc,CAACC,EAAE;IAAA,8CACrB,uBAAuB;IAAA,kDACL,KAAK;IAAA,sDACN,CAACC,0BAAc,CAACD,EAAE,CAAC;EALxC;EAOH,MAAME,OAAO,CAACC,OAAqB,EAA4B;IAC7D,MAAMC,GAAG,GAAI,aAAYD,OAAO,CAACE,UAAU,CAACL,EAAG,EAAC;IAEhD,MAAMM,UAAU,GAAG,IAAI,CAACT,QAAQ,CAACU,kBAAkB,EAAE;IAErD,MAAMC,iBAAiB,GAAGL,OAAO,CAACM,GAAG,CAACC,kBAAkB,CAACC,IAAI,CAACR,OAAO,CAACM,GAAG,CAAC;IAE1E,MAAMG,OAAiB,GAAG,MAAM,IAAAC,gCAAc,EAACV,OAAO,EAAEK,iBAAiB,EAAEF,UAAU,CAAC;IAEtF,MAAMQ,cAA8B,GAAGC,MAAM,CAACC,MAAM,CAACb,OAAO,EAAE;MAC5DS,OAAO;MACPK,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,IAAI,CAACC,cAAc,CAAChB,OAAO,CAAC;MACxCiB,QAAQ,EAAEhB;IACZ,CAAC,CAAC;IAEF,MAAMiB,OAAgB,GAAG,MAAMlB,OAAO,CAACM,GAAG,CAACa,kBAAkB,CAACR,cAAc,EAAE,EAAE,CAAC;IACjF,MAAMS,cAAc,GAAG,MAAMF,OAAO,CAACG,GAAG,EAAE;IAE1C,OAAO,IAAAC,gCAAc,EAACX,cAAc,EAAES,cAAc,EAAEjB,UAAU,EAAE,IAAI,CAACR,eAAe,CAAC;EACzF;EAEAqB,cAAc,CAAChB,OAAyB,EAAE;IACxC,MAAMuB,UAAU,GAAG,IAAAC,eAAO,EAAE,GAAExB,OAAO,CAACH,EAAG,SAAQ,CAAC;IAClD,OAAO0B,UAAU;EACnB;AACF;AAAC"}