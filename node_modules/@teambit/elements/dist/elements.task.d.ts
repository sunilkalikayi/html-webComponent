import { ExecutionContext } from '@teambit/envs';
import { BuildContext, BuiltTaskResult, BuildTask, TaskLocation, ArtifactStorageResolver } from '@teambit/builder';
import { ElementsMain } from './elements.main.runtime';
export declare type ElementsWrapperContext = {
    mainFilePath: string;
    componentName: string;
};
export declare type ElementsWrapperFn = (context: ElementsWrapperContext) => string;
export declare class ElementTask implements BuildTask {
    /**
     * elements extension.
     */
    private elements;
    private storageResolver?;
    constructor(
    /**
     * elements extension.
     */
    elements: ElementsMain, storageResolver?: ArtifactStorageResolver | undefined);
    aspectId: string;
    name: string;
    location: TaskLocation;
    readonly dependencies: string[];
    execute(context: BuildContext): Promise<BuiltTaskResult>;
    getElementsDir(context: ExecutionContext): string;
}
