import { ArtifactStorageResolver, BuilderMain } from '@teambit/builder';
import { Component, ComponentMain } from '@teambit/component';
import { LoggerMain } from '@teambit/logger';
import { WebpackConfigTransformer } from '@teambit/webpack';
import { GraphqlMain } from '@teambit/graphql';
import { ElementsArtifact } from './elements-artifact';
import { ElementTask } from './elements.task';
export declare class ElementsMain {
    private builder;
    private componentExtension;
    constructor(builder: BuilderMain, componentExtension: ComponentMain);
    baseRoute: string;
    getElementsDirName(): string;
    createTask(storageResolver?: ArtifactStorageResolver): ElementTask;
    getWebpackTransformers(): WebpackConfigTransformer[];
    getElements(component: Component): Promise<ElementsArtifact | undefined>;
    isElementsExist(component: Component): boolean;
    getElementUrl(component: Component): Promise<string | undefined>;
    static slots: never[];
    static dependencies: import("@teambit/harmony").Aspect[];
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    static provider([componentExtension, builder, loggerMain, graphql]: [
        ComponentMain,
        BuilderMain,
        LoggerMain,
        GraphqlMain
    ]): Promise<ElementsMain>;
}
