{"version":3,"names":["NewComponentHelperMain","constructor","workspace","harmony","getNewComponentId","name","namespace","scope","defaultScope","isValidScopeName","InvalidScopeName","BitError","fullComponentName","ComponentID","fromObject","getNewComponentPath","componentId","pathFromUser","composeComponentPath","_legacy","changeScope","defaultDirectory","writeAndAddNewComp","comp","targetId","options","config","targetPath","path","throwForExistingPath","write","track","rootDir","componentName","fullName","mainFile","state","_consumer","err","fs","remove","bitMap","clearCache","triggerOnComponentAdd","stat","isDirectory","isEmpty","isDirEmpty","code","getConfigFromExistingToNewComponent","aspectIds","aspects","entries","map","e","id","toString","loadAspects","undefined","fromExisting","forEach","entry","aspectId","aspect","get","Error","shouldPreserveConfigForClonedComponent","provider","_","WorkspaceAspect","MainRuntime","NewComponentHelperAspect","addRuntime"],"sources":["new-component-helper.main.runtime.ts"],"sourcesContent":["import fs from 'fs-extra';\nimport { BitError } from '@teambit/bit-error';\nimport { InvalidScopeName, isValidScopeName } from '@teambit/legacy-bit-id';\nimport { MainRuntime } from '@teambit/cli';\nimport { composeComponentPath } from '@teambit/legacy/dist/utils/bit/compose-component-path';\nimport { Component } from '@teambit/component';\nimport { isDirEmpty } from '@teambit/legacy/dist/utils';\nimport { ComponentID } from '@teambit/component-id';\nimport { Harmony } from '@teambit/harmony';\nimport { PathLinuxRelative } from '@teambit/legacy/dist/utils/path';\nimport WorkspaceAspect, { Workspace } from '@teambit/workspace';\nimport { NewComponentHelperAspect } from './new-component-helper.aspect';\n\nexport class NewComponentHelperMain {\n  constructor(private workspace: Workspace, private harmony: Harmony) {}\n  /**\n   * when creating/forking a component, the user provides the new name and optionally the scope/namespace.\n   * from this user input, create a ComponentID.\n   */\n  getNewComponentId(name: string, namespace?: string, scope?: string): ComponentID {\n    scope = scope || this.workspace.defaultScope;\n    if (!isValidScopeName(scope)) {\n      throw new InvalidScopeName(scope);\n    }\n    if (!scope) throw new BitError(`failed finding defaultScope`);\n\n    const fullComponentName = namespace ? `${namespace}/${name}` : name;\n    return ComponentID.fromObject({ name: fullComponentName }, scope);\n  }\n\n  /**\n   * when creating/forking a component, the user may or may not provide a path.\n   * if not provided, generate the path based on the component-id.\n   * the component will be written to that path.\n   */\n  getNewComponentPath(componentId: ComponentID, pathFromUser?: string): PathLinuxRelative {\n    if (pathFromUser) return pathFromUser;\n    return composeComponentPath(componentId._legacy.changeScope(componentId.scope), this.workspace.defaultDirectory);\n  }\n\n  async writeAndAddNewComp(\n    comp: Component,\n    targetId: ComponentID,\n    options?: { path?: string; scope?: string },\n    config?: { [aspectName: string]: any }\n  ) {\n    const targetPath = this.getNewComponentPath(targetId, options?.path);\n    await this.throwForExistingPath(targetPath);\n    await this.workspace.write(comp, targetPath);\n    try {\n      await this.workspace.track({\n        rootDir: targetPath,\n        componentName: targetId.fullName,\n        mainFile: comp.state._consumer.mainFile,\n        defaultScope: options?.scope,\n        config,\n      });\n    } catch (err) {\n      await fs.remove(targetPath);\n      throw err;\n    }\n\n    await this.workspace.bitMap.write();\n    this.workspace.clearCache();\n    // this takes care of compiling the component as well\n    await this.workspace.triggerOnComponentAdd(targetId);\n  }\n\n  private async throwForExistingPath(targetPath: string) {\n    try {\n      const stat = await fs.stat(targetPath);\n      if (!stat.isDirectory()) {\n        throw new BitError(`unable to create component at \"${targetPath}\", this path already exists`);\n      }\n      const isEmpty = await isDirEmpty(targetPath);\n      if (!isEmpty) {\n        throw new BitError(`unable to create component at \"${targetPath}\", this directory is not empty`);\n      }\n    } catch (err: any) {\n      if (err.code === 'ENOENT') {\n        return;\n      }\n      throw err;\n    }\n  }\n\n  async getConfigFromExistingToNewComponent(comp: Component) {\n    const aspectIds = comp.state.aspects.entries.map((e) => e.id.toString());\n    await this.workspace.loadAspects(aspectIds, undefined, 'new-component-helper.getConfigFromExistingToNewComponent');\n    const fromExisting = {};\n    comp.state.aspects.entries.forEach((entry) => {\n      if (!entry.config) return;\n      const aspectId = entry.id.toString();\n      const aspect = this.harmony.get<CloneConfig>(aspectId);\n      if (!aspect) throw new Error(`error: unable to get \"${aspectId}\" aspect from Harmony`);\n      if (\n        'shouldPreserveConfigForClonedComponent' in aspect &&\n        aspect.shouldPreserveConfigForClonedComponent === false\n      ) {\n        return;\n      }\n      fromExisting[aspectId] = entry.config;\n    });\n    return fromExisting;\n  }\n\n  static slots = [];\n  static dependencies = [WorkspaceAspect];\n  static runtime = MainRuntime;\n  static async provider([workspace]: [Workspace], config, _, harmony: Harmony) {\n    return new NewComponentHelperMain(workspace, harmony);\n  }\n}\n\nNewComponentHelperAspect.addRuntime(NewComponentHelperMain);\n\nexport interface CloneConfig {\n  readonly shouldPreserveConfigForClonedComponent?: boolean; // default true\n}\n"],"mappings":"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"}