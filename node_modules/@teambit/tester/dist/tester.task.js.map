{"version":3,"names":["TesterTask","constructor","aspectId","devFiles","CompilerAspect","id","execute","context","components","capsuleNetwork","originalSeedersCapsules","getAllComponents","tester","env","getTester","componentsSpecFiles","ComponentMap","as","component","detectTestFiles","testCount","toArray","reduce","acc","specs","length","artifacts","componentsResults","patternsWithCapsule","componentSpecFiles","get","Error","capsule","graphCapsules","getCapsule","compiler","getCompiler","toString","distFolder","getDistDir","distDir","componentDir","join","path","paths","map","specFile","distPath","getDistPathBySrcPath","relative","specFilesWithCapsule","patternEntry","val","testerContext","Object","assign","release","specFiles","rootPath","capsulesRootDir","patterns","testsResults","test","Promise","all","compResult","junit","testsResultsToJUnitFormat","componentId","fs","outputFile","getJUnitArtifactPath","getArtifactDef","componentTests","componentErrors","errors","metadata","tests","results","CAPSULE_ARTIFACTS_DIR","name","globPatterns","rootDir"],"sources":["tester.task.ts"],"sourcesContent":["import { BuildContext, BuiltTaskResult, BuildTask, CAPSULE_ARTIFACTS_DIR } from '@teambit/builder';\nimport fs from 'fs-extra';\nimport { join } from 'path';\nimport { Compiler, CompilerAspect } from '@teambit/compiler';\nimport { DevFilesMain } from '@teambit/dev-files';\nimport { ComponentMap } from '@teambit/component';\nimport { Tester } from './tester';\nimport { detectTestFiles } from './utils';\nimport { testsResultsToJUnitFormat } from './utils/junit-generator';\n\n/**\n * tester build task. Allows to test components during component build.\n */\nexport class TesterTask implements BuildTask {\n  readonly name = 'TestComponents';\n  readonly dependencies = [CompilerAspect.id];\n  constructor(readonly aspectId: string, private devFiles: DevFilesMain) {}\n\n  async execute(context: BuildContext): Promise<BuiltTaskResult> {\n    const components = context.capsuleNetwork.originalSeedersCapsules.getAllComponents();\n    const tester: Tester = context.env.getTester();\n    const componentsSpecFiles = ComponentMap.as(components, (component) => {\n      return detectTestFiles(component, this.devFiles);\n    });\n\n    const testCount = componentsSpecFiles.toArray().reduce((acc, [, specs]) => acc + specs.length, 0);\n    if (testCount === 0)\n      return {\n        artifacts: [],\n        componentsResults: [],\n      };\n\n    const patternsWithCapsule = ComponentMap.as(components, (component) => {\n      const componentSpecFiles = componentsSpecFiles.get(component);\n      if (!componentSpecFiles) throw new Error('capsule not found');\n      const [, specs] = componentSpecFiles;\n      const capsule = context.capsuleNetwork.graphCapsules.getCapsule(component.id);\n      if (!capsule) throw new Error('capsule not found');\n      const compiler: Compiler = context.env.getCompiler();\n      if (!compiler) {\n        throw new Error(`compiler not found for ${component.id.toString()}`);\n      }\n      // @ts-ignore. not sure why ts complain that compiler might be undefined, when we check it above.\n      const distFolder = compiler.getDistDir() || compiler.distDir;\n      return {\n        componentDir: join(capsule.path, distFolder),\n        paths: specs.map((specFile) => {\n          const distPath = compiler.getDistPathBySrcPath(specFile.relative);\n          // TODO: fix spec type file need to capsule will return files with type AbstractVinyl\n          return { path: join(capsule.path, distPath), relative: distPath };\n        }),\n      };\n    });\n\n    const specFilesWithCapsule = ComponentMap.as(components, (component) => {\n      const patternEntry = patternsWithCapsule.get(component);\n      // @ts-ignore\n      const [, val] = patternEntry;\n      return val.paths;\n    });\n\n    const testerContext = Object.assign(context, {\n      release: true,\n      specFiles: specFilesWithCapsule,\n      rootPath: context.capsuleNetwork.capsulesRootDir,\n      patterns: patternsWithCapsule,\n    });\n\n    // TODO: remove after fix AbstractVinyl on capsule\n    // @ts-ignore\n    const testsResults = await tester.test(testerContext);\n\n    // write junit files\n    await Promise.all(\n      testsResults.components.map(async (compResult) => {\n        const junit = testsResultsToJUnitFormat([compResult]);\n        const capsule = context.capsuleNetwork.graphCapsules.getCapsule(compResult.componentId);\n        if (!capsule) {\n          throw new Error(`unable to find ${compResult.componentId.toString()} in capsules`);\n        }\n        await fs.outputFile(join(capsule.path, getJUnitArtifactPath()), junit);\n      })\n    );\n\n    return {\n      artifacts: getArtifactDef(), // @ts-ignore\n      componentsResults: testsResults.components.map((componentTests) => {\n        const componentErrors = componentTests.errors;\n        const component = context.capsuleNetwork.graphCapsules.getCapsule(componentTests.componentId)?.component;\n        if (!component) {\n          throw new Error(`unable to find ${componentTests.componentId.toString()} in capsules`);\n        }\n\n        return {\n          component,\n          metadata: { tests: componentTests.results },\n          errors: componentErrors,\n        };\n      }),\n    };\n  }\n}\n\nexport function getJUnitArtifactPath() {\n  return join(CAPSULE_ARTIFACTS_DIR, '__bit_junit.xml');\n}\n\nexport function getArtifactDef() {\n  return [\n    {\n      name: 'junit',\n      globPatterns: [getJUnitArtifactPath()],\n      rootDir: CAPSULE_ARTIFACTS_DIR,\n    },\n  ];\n}\n"],"mappings":"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"}