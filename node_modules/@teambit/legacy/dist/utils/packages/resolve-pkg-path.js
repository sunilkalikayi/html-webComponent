"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resolvePackagePath = resolvePackagePath;
function _fsExtra() {
  const data = _interopRequireDefault(require("fs-extra"));
  _fsExtra = function () {
    return data;
  };
  return data;
}
function _path() {
  const data = _interopRequireDefault(require("path"));
  _path = function () {
    return data;
  };
  return data;
}
/**
 * Recursively search for node package inside node_modules dir
 * This function propagates up until it gets to the root provided then stops
 *
 * @param {string} packageName - package name
 * @param {string} workingDir - dir to start searching of
 * @param {string} root - path to dir to stop the search
 * @returns The resolved path for the package directory
 */
function resolvePackagePath(packageName, workingDir, root) {
  const pathToCheck = _path().default.resolve(workingDir, 'node_modules', packageName);
  if (_fsExtra().default.existsSync(pathToCheck)) {
    return pathToCheck;
  }
  if (workingDir === root) {
    return undefined;
  }
  const parentWorkingDir = _path().default.dirname(workingDir);
  if (parentWorkingDir === workingDir) return undefined;
  return resolvePackagePath(packageName, parentWorkingDir, root);
}