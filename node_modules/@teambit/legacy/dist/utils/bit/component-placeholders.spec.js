"use strict";

function _chai() {
  const data = require("chai");
  _chai = function () {
    return data;
  };
  return data;
}
function _componentPlaceholders() {
  const data = require("./component-placeholders");
  _componentPlaceholders = function () {
    return data;
  };
  return data;
}
describe('replacePlaceHolderForPackageValue', () => {
  it('should be able to replace the main file without an extension', () => {
    // @ts-ignore
    const result = (0, _componentPlaceholders().replacePlaceHolderForPackageValue)({
      mainFile: 'index.ts'
    }, 'dist/{main}.js');
    (0, _chai().expect)(result).to.equal('dist/index.js');
  });
  it('should be able to replace the component name', () => {
    // @ts-ignore
    const result = (0, _componentPlaceholders().replacePlaceHolderForPackageValue)({
      name: 'foo'
    }, 'bar/baz/{name}');
    (0, _chai().expect)(result).to.equal('bar/baz/foo');
  });
  it('should be able to replace the component scope', () => {
    // @ts-ignore
    const result = (0, _componentPlaceholders().replacePlaceHolderForPackageValue)({
      scope: 'foo'
    }, 'bar/baz/{scope}');
    (0, _chai().expect)(result).to.equal('bar/baz/foo');
  });
  it('should return the same value if it is not string', () => {
    // @ts-ignore
    const result = (0, _componentPlaceholders().replacePlaceHolderForPackageValue)({
      name: 'foo'
    }, false);
    (0, _chai().expect)(result).to.equal(false);
  });
});