import { PathLinux, PathOsBased } from '../utils/path';
export declare type MergeFileResult = {
    filePath: PathLinux;
    output: string | null | undefined;
    conflict: string | null | undefined;
    isBinaryConflict?: boolean;
};
export declare type MergeFileParams = {
    filePath: PathLinux;
    currentFile: {
        label: string;
        path: PathOsBased;
    };
    baseFile: {
        path: PathOsBased;
    };
    otherFile: {
        label: string;
        path: PathOsBased;
    };
};
/**
 * use git `merge-file` command. From the command help:
 * `git merge-file <current-file> <base-file> <other-file>
 * git merge-file incorporates all changes that lead from the <base-file> to <other-file> into
 * <current-file>. The result ordinarily goes into <current-file>.`
 *
 * Here, we are not going to write the result into current-file. Instead, we'll use the "-p" flag,
 * to just return the results.
 */
export default function mergeFiles({ filePath, currentFile, baseFile, otherFile, }: MergeFileParams): Promise<MergeFileResult>;
