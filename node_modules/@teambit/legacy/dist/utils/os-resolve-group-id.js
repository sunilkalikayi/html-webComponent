"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = resolveGroupId;
function _uidNumber() {
  const data = _interopRequireDefault(require("uid-number"));
  _uidNumber = function () {
    return data;
  };
  return data;
}
function _generalError() {
  const data = _interopRequireDefault(require("../error/general-error"));
  _generalError = function () {
    return data;
  };
  return data;
}
function _logger() {
  const data = _interopRequireDefault(require("../logger/logger"));
  _logger = function () {
    return data;
  };
  return data;
}
async function resolveGroupId(groupName) {
  return new Promise((resolve, reject) => {
    (0, _uidNumber().default)(null, groupName, (err, uid, gid) => {
      if (err) {
        _logger().default.error('resolveGroupId', err);
        if (err.message.includes('EPERM')) {
          return reject(new (_generalError().default)(`unable to resolve group id of "${groupName}", current user does not have sufficient permissions`));
        }
        if (err.message.includes('group id does not exist')) {
          return reject(new (_generalError().default)(`unable to resolve group id of "${groupName}", the group does not exist`));
        }
        return reject(new (_generalError().default)(`unable to resolve group id of "${groupName}", got an error ${err.message}`));
      }
      // on Windows it'll always be null
      return resolve(gid);
    });
  });
}