"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concurrentComponentsLimit = concurrentComponentsLimit;
exports.concurrentFetchLimit = concurrentFetchLimit;
exports.concurrentIOLimit = concurrentIOLimit;
function _globalConfig() {
  const data = require("../api/consumer/lib/global-config");
  _globalConfig = function () {
    return data;
  };
  return data;
}
function _constants() {
  const data = require("../constants");
  _constants = function () {
    return data;
  };
  return data;
}
const CONCURRENT_IO_LIMIT = 100;
const CONCURRENT_COMPONENTS_LIMIT = 50;
const CONCURRENT_FETCH_LIMIT = 15;

/**
 * limit number of files to read/write/delete/symlink at the same time
 */
function concurrentIOLimit() {
  return (0, _globalConfig().getNumberFromConfig)(_constants().CFG_CONCURRENCY_IO) || CONCURRENT_IO_LIMIT;
}

/**
 * limit number of components to load at the same time
 */
function concurrentComponentsLimit() {
  return (0, _globalConfig().getNumberFromConfig)(_constants().CFG_CONCURRENCY_COMPONENTS) || CONCURRENT_COMPONENTS_LIMIT;
}

/**
 * limit number of scopes to fetch from at the same time
 */
function concurrentFetchLimit() {
  return (0, _globalConfig().getNumberFromConfig)(_constants().CFG_CONCURRENCY_FETCH) || CONCURRENT_FETCH_LIMIT;
}