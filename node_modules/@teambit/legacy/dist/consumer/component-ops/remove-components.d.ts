import { Consumer } from '..';
import BitIds from '../../bit-id/bit-ids';
import RemovedLocalObjects from '../../scope/removed-local-objects';
/**
 * Remove components local and remote
 * splits array of ids into local and remote and removes according to flags
 * @param {string[]} ids - list of remote component ids to delete
 * @param {boolean} force - delete component that are used by other components.
 * @param {boolean} remote - delete component from a remote scope
 * @param {boolean} track - keep tracking local staged components in bitmap.
 * @param {boolean} deleteFiles - delete local added files from fs.
 */
export default function removeComponents({ consumer, ids, force, remote, track, deleteFiles, fromLane, }: {
    consumer: Consumer | null | undefined;
    ids: BitIds;
    force: boolean;
    remote: boolean;
    track: boolean;
    deleteFiles: boolean;
    fromLane: boolean;
}): Promise<{
    localResult: RemovedLocalObjects;
    remoteResult: Record<string, any>[];
}>;
