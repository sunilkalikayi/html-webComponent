"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.regexp.exec.js");
require("core-js/modules/es.string.replace.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _bitError() {
  const data = require("@teambit/bit-error");
  _bitError = function () {
    return data;
  };
  return data;
}
function _constants() {
  const data = require("../../constants");
  _constants = function () {
    return data;
  };
  return data;
}
class BitStructure {
  constructor(componentsDefaultDirectory, dependenciesDirectory) {
    (0, _defineProperty2().default)(this, "_componentsDefaultDirectory", void 0);
    (0, _defineProperty2().default)(this, "isComponentsDefaultDirectoryValidated", false);
    (0, _defineProperty2().default)(this, "dependenciesDirectory", void 0);
    this._componentsDefaultDirectory = componentsDefaultDirectory || _constants().DEFAULT_COMPONENTS_DIR_PATH;
    this.dependenciesDirectory = dependenciesDirectory || _constants().DEFAULT_DEPENDENCIES_DIR_PATH;
  }
  get dependenciesDirStructure() {
    return this.dependenciesDirectory;
  }
  get componentsDefaultDirectory() {
    if (!this.isComponentsDefaultDirectoryValidated) {
      const allowedPlaceholders = ['name', 'scope', 'scopeId', 'owner'];
      this._componentsDefaultDirectory.split('/').forEach(dir => {
        if (dir.startsWith('{') && dir.endsWith('}')) {
          // this is a dynamic parameter
          const dirStripped = dir.replace(/[{}]/g, '');
          if (!allowedPlaceholders.includes(dirStripped)) {
            throw new (_bitError().BitError)(`the "${dirStripped}" part of the component structure "${this._componentsDefaultDirectory}" is invalid, it must be one of the following: ${allowedPlaceholders.join(', ')}`);
          }
        }
      });
      this.isComponentsDefaultDirectoryValidated = true;
    }
    return this._componentsDefaultDirectory;
  }
}
exports.default = BitStructure;