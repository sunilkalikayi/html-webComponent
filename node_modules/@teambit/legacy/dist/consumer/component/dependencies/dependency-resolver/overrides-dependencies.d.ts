import { BitId } from '../../../../bit-id';
import Consumer from '../../../../consumer/consumer';
import { ResolvedPackageData } from '../../../../utils/packages';
import ComponentMap from '../../../bit-map/component-map';
import Component from '../../../component/consumer-component';
import { AllDependencies, FileType } from './dependencies-resolver';
export declare type ManuallyChangedDependencies = {
    dependencies?: string[];
    devDependencies?: string[];
    peerDependencies?: string[];
};
export default class OverridesDependencies {
    component: Component;
    consumer: Consumer;
    componentMap: ComponentMap;
    componentFromModel: Component | null | undefined;
    manuallyRemovedDependencies: ManuallyChangedDependencies;
    manuallyAddedDependencies: ManuallyChangedDependencies;
    missingPackageDependencies: string[];
    constructor(component: Component, consumer: Consumer);
    shouldIgnoreFile(file: string, fileType: FileType): boolean;
    shouldIgnorePackage(packageName: string, fileType: FileType): boolean;
    shouldIgnorePackageByType(packageName: string, field: string): boolean;
    shouldIgnorePeerPackage(packageName: string): boolean;
    shouldIgnoreComponent(componentId: BitId, fileType: FileType): boolean;
    getDependenciesToAddManually(packageJson: Record<string, any> | null | undefined, existingDependencies: AllDependencies): {
        components: Record<string, any>;
        packages: Record<string, any>;
    } | null | undefined;
    _getIgnoredComponentsByField(field: 'devDependencies' | 'dependencies' | 'peerDependencies'): BitId[];
    _getComponentIdToAdd(field: string, dependency: string): {
        componentId?: BitId;
        packageName?: string;
    } | undefined;
    _getComponentIdFromPackage(packageName: string): BitId | undefined;
    _manuallyAddPackage(field: string, dependency: string, dependencyValue: string, packageJson: Record<string, any> | null | undefined): Record<string, any> | null | undefined;
    _addManuallyRemovedDep(field: string, value: string): void;
    _addManuallyAddedDep(field: string, value: string): void;
    _resolvePackageData(packageName: string): ResolvedPackageData | undefined;
}
