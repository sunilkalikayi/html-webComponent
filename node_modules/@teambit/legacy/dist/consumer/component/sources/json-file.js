"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _fsExtra() {
  const data = _interopRequireDefault(require("fs-extra"));
  _fsExtra = function () {
    return data;
  };
  return data;
}
function _validationError() {
  const data = _interopRequireDefault(require("../../../error/validation-error"));
  _validationError = function () {
    return data;
  };
  return data;
}
function _logger() {
  const data = _interopRequireDefault(require("../../../logger/logger"));
  _logger = function () {
    return data;
  };
  return data;
}
function _abstractVinyl() {
  const data = _interopRequireDefault(require("./abstract-vinyl"));
  _abstractVinyl = function () {
    return data;
  };
  return data;
}
class JSONFile extends _abstractVinyl().default {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2().default)(this, "override", false);
  }
  async write() {
    const stat = await this._getStatIfFileExists();
    if (stat) {
      if (stat.isSymbolicLink()) {
        // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!
        throw new (_validationError().default)(`fatal: trying to write a json file into a symlink file at "${this.path}"`);
      }
      if (!this.override) {
        // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!
        _logger().default.debug(`json-file.write, ignore existing file ${this.path}`);
        // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!
        return this.path;
      }
    }
    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!
    _logger().default.debug(`json-file.write, path ${this.path}`);
    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!
    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!
    await _fsExtra().default.outputFile(this.path, this.contents);
    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!
    return this.path;
  }
  static load({
    base,
    path,
    content,
    override = false
  }) {
    const jsonStr = JSON.stringify(content, null, 4);
    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!
    const jsonFile = new JSONFile({
      base,
      path,
      contents: Buffer.from(jsonStr)
    });
    jsonFile.override = override;
    return jsonFile;
  }
}
exports.default = JSONFile;