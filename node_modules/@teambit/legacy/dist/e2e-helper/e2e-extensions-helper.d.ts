import BitJsoncHelper from './e2e-bit-jsonc-helper';
import CommandHelper from './e2e-command-helper';
import FixtureHelper from './e2e-fixtures-helper';
import FsHelper from './e2e-fs-helper';
import ScopeHelper from './e2e-scope-helper';
import ScopesData from './e2e-scopes';
export default class ExtensionsHelper {
    scopes: ScopesData;
    command: CommandHelper;
    bitJsonc: BitJsoncHelper;
    scopeHelper: ScopeHelper;
    fixtures: FixtureHelper;
    fs: FsHelper;
    constructor(scopes: ScopesData, command: CommandHelper, bitJsonc: BitJsoncHelper, scopeHelper: ScopeHelper, fixtures: FixtureHelper, fsHelper: FsHelper);
    addExtensionToWorkspace(extName: string, extConfig?: {}): void;
    addExtensionToVariant(variant: string, extName: string, extConfig?: {}, replaceExisting?: boolean): void;
    removeAllExtensionsFromVariant(variant: string): void;
    /**
     * This will set the extension as the only extension of the variant
     * If you want to add new one, use addExtensionToVariant
     *
     * @param {string} variant
     * @param {string} extName
     * @param {*} [extConfig={}]
     * @memberof ExtensionsHelper
     */
    setExtensionToVariant(variant: string, extName: string, extConfig?: {}): void;
    createNewComponentExtension(name?: string, content?: string, config?: any): void;
}
