"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _fsExtra() {
  const data = _interopRequireDefault(require("fs-extra"));
  _fsExtra = function () {
    return data;
  };
  return data;
}
function path() {
  const data = _interopRequireWildcard(require("path"));
  path = function () {
    return data;
  };
  return data;
}
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
class PackageJsonHelper {
  constructor(scopes) {
    (0, _defineProperty2().default)(this, "scopes", void 0);
    this.scopes = scopes;
  }
  read(packageJsonFolder = this.scopes.localPath) {
    const packageJsonPath = path().join(packageJsonFolder, 'package.json');
    return _fsExtra().default.readJSONSync(packageJsonPath) || {};
  }
  write(packageJson, packageJsonFolder = this.scopes.localPath) {
    const packageJsonPath = path().join(packageJsonFolder, 'package.json');
    return _fsExtra().default.writeJSONSync(packageJsonPath, packageJson, {
      spaces: 2
    });
  }
  create(data, location = this.scopes.localPath) {
    const packageJsonPath = path().join(location, 'package.json');
    _fsExtra().default.writeJSONSync(packageJsonPath, data, {
      spaces: 2
    });
  }
  corrupt(packageJsonPath = path().join(this.scopes.localPath, 'package.json')) {
    _fsExtra().default.writeFileSync(packageJsonPath, '{ corrupted');
  }
  addKeyValue(data, pkgJsonPath = path().join(this.scopes.localPath)) {
    const pkgJson = this.read(pkgJsonPath);
    _fsExtra().default.writeJSONSync(path().join(pkgJsonPath, 'package.json'), Object.assign(pkgJson, data), {
      spaces: 2
    });
  }
  readComponentPackageJson(id) {
    const packageJsonFolderPath = path().join(this.scopes.localPath, 'components', id);
    return this.read(packageJsonFolderPath);
  }
}
exports.default = PackageJsonHelper;