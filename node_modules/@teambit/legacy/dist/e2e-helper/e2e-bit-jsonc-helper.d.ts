import ScopesData from './e2e-scopes';
export default class BitJsoncHelper {
    scopes: ScopesData;
    constructor(scopes: ScopesData);
    read(bitJsoncDir?: string): any;
    write(bitJsonc: Record<string, any>, bitJsoncDir?: string): void;
    addKeyVal(key: string, val: any, bitJsoncDir?: string): void;
    addToVariant(variant: string, key: string, val: any, replaceExisting?: boolean, bitJsoncDir?: string): void;
    /**
     * Replace the entire variant config with the provided config.
     * In case you only want to add new extension to variant you probably want to use addToVariant
     * @param bitJsoncDir
     * @param variant
     * @param config
     */
    setVariant(bitJsoncDir: string | undefined, variant: string, config: any): void;
    setPolicyToVariant(variant: string, policy: Record<string, any>): void;
    addKeyValToWorkspace(key: string, val: any, bitJsoncDir?: string): void;
    addKeyValToDependencyResolver(key: string, val: any, bitJsoncDir?: string): void;
    getPolicyFromDependencyResolver(): any;
    addPolicyToDependencyResolver(policy: Record<string, any>): void;
    addDefaultScope(scope?: string): void;
    setComponentsDir(compDir: string): void;
    setPackageManager(packageManager?: string): void;
    addDefaultOwner(owner: string): void;
    corrupt(): void;
    disablePreview(): void;
    setupDefault(): void;
}
