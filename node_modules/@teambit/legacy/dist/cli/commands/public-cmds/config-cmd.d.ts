import { Group } from '../../command-groups';
import { LegacyCommand } from '../../legacy-command';
declare class ConfigSet implements LegacyCommand {
    name: string;
    description: string;
    alias: string;
    skipWorkspace: boolean;
    opts: never[];
    action([key, value]: [string, string]): Promise<any>;
    report(): string;
}
declare class ConfigGet implements LegacyCommand {
    name: string;
    description: string;
    alias: string;
    opts: never[];
    action([key]: [string]): Promise<any>;
    report(value: string): string;
}
declare class ConfigList implements LegacyCommand {
    name: string;
    description: string;
    alias: string;
    opts: never[];
    action(): Promise<any>;
    report(conf: {
        [key: string]: string;
    }): string;
}
declare class ConfigDel implements LegacyCommand {
    name: string;
    description: string;
    alias: string;
    opts: never[];
    action([key]: [string]): Promise<any>;
    report(): string;
}
export default class Config implements LegacyCommand {
    name: string;
    description: string;
    extendedDescription: string;
    group: Group;
    alias: string;
    commands: (ConfigSet | ConfigGet | ConfigList | ConfigDel)[];
    opts: never[];
    migration: boolean;
    action(): Promise<any>;
    report(conf: {
        [key: string]: string;
    }): string;
}
export {};
