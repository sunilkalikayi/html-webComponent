"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.paintLog = exports.paintHeader = exports.paintBitProp = exports.formatPlainComponentItem = exports.formatNewBit = exports.formatBitString = exports.formatBit = void 0;
function _chalk() {
  const data = _interopRequireDefault(require("chalk"));
  _chalk = function () {
    return data;
  };
  return data;
}
const formatNewBit = ({
  name
}) => _chalk().default.white('     > ') + _chalk().default.cyan(name);
exports.formatNewBit = formatNewBit;
const formatBit = ({
  scope,
  name,
  version
}) => _chalk().default.white('     > ') + _chalk().default.cyan(`${scope ? `${scope}/` : ''}${name} - ${version ? version.toString() : 'latest'}`);
exports.formatBit = formatBit;
const formatPlainComponentItem = ({
  scope,
  name,
  version,
  deprecated
}) => _chalk().default.cyan(`- ${scope ? `${scope}/` : ''}${name}@${version ? version.toString() : 'latest'}  ${deprecated ? _chalk().default.yellow('[deprecated]') : ''}`);
exports.formatPlainComponentItem = formatPlainComponentItem;
const formatBitString = bit => _chalk().default.white('     > ') + _chalk().default.cyan(`${bit}`);
exports.formatBitString = formatBitString;
const paintBitProp = (key, value) => {
  if (!value) return '';
  return `${_chalk().default.magenta(key)} -> ${value}\n`;
};
exports.paintBitProp = paintBitProp;
const paintHeader = value => {
  if (!value) return '';
  return `${_chalk().default.underline(value)}\n`;
};
exports.paintHeader = paintHeader;
const paintAuthor = (email, username) => {
  if (email && username) {
    return _chalk().default.white(`author: ${username} <${email}>\n`);
  }
  if (email && !username) {
    return _chalk().default.white(`author: <${email}>\n`);
  }
  if (!email && username) {
    return _chalk().default.white(`author: ${username}\n`);
  }
  return '';
};
const paintLog = log => {
  const {
    message,
    date,
    tag,
    hash,
    username,
    email
  } = log;
  const title = tag ? `tag ${tag} (${hash})\n` : `snap ${hash}\n`;
  return _chalk().default.yellow(title) + paintAuthor(email, username) + (date ? _chalk().default.white(`date: ${date}\n`) : '') + (message ? _chalk().default.white(`\n      ${message}\n`) : '');
};
exports.paintLog = paintLog;