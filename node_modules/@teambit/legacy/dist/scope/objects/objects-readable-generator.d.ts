/// <reference types="node" />
import { Readable } from 'stream';
import { Ref, Repository } from '.';
import { Scope } from '..';
import { CollectObjectsOpts } from '../component-version';
import { Lane, ModelComponent } from '../models';
export declare type ComponentWithCollectOptions = {
    component: ModelComponent;
    version: string;
} & CollectObjectsOpts;
export declare class ObjectsReadableGenerator {
    private repo;
    readable: Readable;
    private pushed;
    constructor(repo: Repository);
    pushObjectsToReadable(componentsWithOptions: ComponentWithCollectOptions[]): Promise<void>;
    pushLanes(lanesToFetch: Lane[]): Promise<void>;
    pushObjects(refs: Ref[], scope: Scope): Promise<void>;
    private getObjectGracefully;
    private pushScopeMeta;
    private push;
    private pushManyObjects;
    private pushComponentObjects;
}
