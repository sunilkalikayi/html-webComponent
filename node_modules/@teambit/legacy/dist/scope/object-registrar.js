"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = types;
exports.typesObj = void 0;
exports.typesToObject = typesToObject;
function _models() {
  const data = require("./models");
  _models = function () {
    return data;
  };
  return data;
}
function types() {
  return [_models().Source, _models().ModelComponent, _models().Version, _models().ScopeMeta, _models().Symlink, _models().Lane, _models().ExportMetadata];
}

// it's possible to define the return type as `{ [typeName: string]: Types[0] }`. not sure if it makes sense
function typesToObject(typesArr) {
  return typesArr.reduce((map, objectType) => {
    map[objectType.name] = objectType;
    return map;
  }, {});
}
const typesObj = typesToObject(types());
exports.typesObj = typesObj;