import { Scope } from '..';
import { BitId } from '../../bit-id';
import { Consumer } from '../../consumer';
import { Lane } from '../models';
import ModelComponent from '../models/model-component';
export declare type untagResult = {
    id: BitId;
    versions: string[];
    component?: ModelComponent;
};
/**
 * If not specified version, remove all local versions.
 */
export declare function removeLocalVersion(scope: Scope, id: BitId, lane: Lane | null, head?: boolean, force?: boolean): Promise<untagResult>;
export declare function removeLocalVersionsForAllComponents(consumer: Consumer, lane: Lane | null, head?: boolean): Promise<untagResult[]>;
export declare function removeLocalVersionsForMultipleComponents(componentsToUntag: ModelComponent[], lane: Lane | null, head?: boolean, force: boolean, scope: Scope): Promise<untagResult[]>;
export declare function getComponentsWithOptionToUntag(consumer: Consumer): Promise<ModelComponent[]>;
