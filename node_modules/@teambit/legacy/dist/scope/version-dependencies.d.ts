import { BitId, BitIds } from '../bit-id';
import ComponentWithDependencies from './component-dependencies';
import ComponentVersion from './component-version';
import { Version } from './models';
import Repository from './objects/repository';
export default class VersionDependencies {
    component: ComponentVersion;
    dependencies: ComponentVersion[];
    version: Version;
    constructor(component: ComponentVersion, dependencies: ComponentVersion[], version: Version);
    get allDependencies(): ComponentVersion[];
    get allDependenciesIds(): BitIds;
    getMissingDependencies(): BitId[];
    throwForMissingDependencies(): void;
    toConsumer(repo: Repository): Promise<ComponentWithDependencies>;
}
export declare function multipleVersionDependenciesToConsumer(versionDependencies: VersionDependencies[], repo: Repository): Promise<ComponentWithDependencies[]>;
