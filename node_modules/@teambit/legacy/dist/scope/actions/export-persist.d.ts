import { Scope } from '..';
import { Lane } from '../models';
import { AuthData } from '../network/http/http';
import { Action } from './action';
declare type Options = {
    clientId: string;
};
/**
 * load objects from pending-dir by a client-id and persist them to the object directory.
 * once done, remove the pending-dir to free the resource.
 */
export declare class ExportPersist implements Action<Options, string[]> {
    execute(scope: Scope, options: Options, authData?: AuthData): Promise<string[]>;
    static onPutHook: (ids: string[], lanes: Lane[], authData?: AuthData) => Promise<void>;
}
export {};
