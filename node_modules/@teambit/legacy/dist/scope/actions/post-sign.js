"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PostSign = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _logger() {
  const data = _interopRequireDefault(require("../../logger/logger"));
  _logger = function () {
    return data;
  };
  return data;
}
/**
 * triggered once "bit sign" has completed.
 * it clears the scope cache so then the main bit-start process of the scope will fetch the updated
 * components with all artifacts.
 */
class PostSign {
  async execute(scope, options, authData) {
    scope.objects.clearCache();
    if (PostSign.onPutHook) {
      PostSign.onPutHook(options.ids, [], authData).catch(err => {
        _logger().default.error('fatal: onPutHook encountered an error (this error does not stop the process)', err);
        // let the process continue. we don't want to stop it when onPutHook failed.
      });
    }
  }
}
exports.PostSign = PostSign;
(0, _defineProperty2().default)(PostSign, "onPutHook", void 0);