"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FetchMissingHistory = void 0;
function _bitId() {
  const data = require("../../bit-id");
  _bitId = function () {
    return data;
  };
  return data;
}
function _logger() {
  const data = _interopRequireDefault(require("../../logger/logger"));
  _logger = function () {
    return data;
  };
  return data;
}
function _scopeComponentsImporter() {
  const data = _interopRequireDefault(require("../component-ops/scope-components-importer"));
  _scopeComponentsImporter = function () {
    return data;
  };
  return data;
}
/**
 * for lanes, when components from other scopes are exported to this scope, some history might be missing.
 */
class FetchMissingHistory {
  async execute(scope, options) {
    _logger().default.debugAndAddBreadCrumb('FetchMissingHistory', 'check if history is missing and fetch it from original scopes');
    const scopeComponentsImporter = _scopeComponentsImporter().default.getInstance(scope);
    const bitIds = _bitId().BitIds.deserialize(options.ids);
    await scopeComponentsImporter.importMissingHistory(bitIds);
    _logger().default.debugAndAddBreadCrumb('FetchMissingHistory', 'completed successfully');
  }
}
exports.FetchMissingHistory = FetchMissingHistory;