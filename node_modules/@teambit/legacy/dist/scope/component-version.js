"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _bitId() {
  const data = require("../bit-id");
  _bitId = function () {
    return data;
  };
  return data;
}
class ComponentVersion {
  constructor(component, version) {
    (0, _defineProperty2().default)(this, "component", void 0);
    (0, _defineProperty2().default)(this, "version", void 0);
    if (!version) {
      throw new TypeError(`ComponentVersion expects "version" to be defined (failed for ${component.id()})`);
    }
    this.component = component;
    this.version = version;
    Object.freeze(this);
  }
  getVersion(repository, throws = true) {
    return this.component.loadVersion(this.version, repository, throws);
  }
  flattenedDependencies(repository) {
    return this.getVersion(repository).then(version => version.flattenedDependencies);
  }
  toId() {
    return new (_bitId().BitId)({
      scope: this.component.scope,
      name: this.component.name,
      version: this.version
    });
  }
  get id() {
    return this.toId();
  }
  toConsumer(repo) {
    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!
    return this.component.toConsumerComponent(this.version, this.component.scope, repo);
  }
}
exports.default = ComponentVersion;