"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.regexp.exec.js");
require("core-js/modules/es.string.replace.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = connect;
function _logger() {
  const data = _interopRequireDefault(require("../../logger/logger"));
  _logger = function () {
    return data;
  };
  return data;
}
function _utils() {
  const data = require("../../utils");
  _utils = function () {
    return data;
  };
  return data;
}
function _exceptions() {
  const data = require("./exceptions");
  _exceptions = function () {
    return data;
  };
  return data;
}
function _fs() {
  const data = _interopRequireDefault(require("./fs"));
  _fs = function () {
    return data;
  };
  return data;
}
function _ssh() {
  const data = _interopRequireDefault(require("./ssh"));
  _ssh = function () {
    return data;
  };
  return data;
}
function _http() {
  const data = require("./http");
  _http = function () {
    return data;
  };
  return data;
}
function connect(host, name, strategiesNames, localScopeName) {
  if (host.startsWith('ssh://') || host.startsWith('bit://')) {
    _logger().default.debug(`Establishing a new SSH connection to ${host}`);
    const sshProps = (0, _utils().parseSSHUrl)(host);
    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!
    return new (_ssh().default)(sshProps).connect(strategiesNames);
  }
  if (host.startsWith('file://')) {
    // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!
    return new (_fs().default)(host.replace('file://', '')).connect();
  }
  if (host.startsWith('http://') || host.startsWith('https://')) {
    return _http().Http.connect(host, name, localScopeName);
  }
  throw new (_exceptions().ProtocolNotSupported)();
}