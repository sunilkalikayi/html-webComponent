/// <reference types="node" />
import { BitId } from '../../bit-id';
import { Ref } from '../objects';
import BitObject from '../objects/object';
declare type ExportMetadataProps = {
    exportVersions: ExportVersions[];
};
export declare type ExportVersions = {
    id: BitId;
    versions: string[];
    head: Ref;
};
export default class ExportMetadata extends BitObject {
    exportVersions: ExportVersions[];
    constructor(props: ExportMetadataProps);
    toObject(): Record<string, any>;
    toString(pretty: boolean): string;
    id(): string;
    toBuffer(pretty: any): Buffer;
    static parse(contents: string): ExportMetadata;
}
export {};
