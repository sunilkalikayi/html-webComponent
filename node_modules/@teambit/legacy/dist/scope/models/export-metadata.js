"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _bitId() {
  const data = require("../../bit-id");
  _bitId = function () {
    return data;
  };
  return data;
}
function _utils() {
  const data = require("../../utils");
  _utils = function () {
    return data;
  };
  return data;
}
function _objects() {
  const data = require("../objects");
  _objects = function () {
    return data;
  };
  return data;
}
function _object() {
  const data = _interopRequireDefault(require("../objects/object"));
  _object = function () {
    return data;
  };
  return data;
}
class ExportMetadata extends _object().default {
  constructor(props) {
    super();
    (0, _defineProperty2().default)(this, "exportVersions", void 0);
    this.exportVersions = props.exportVersions;
  }
  toObject() {
    return {
      exportVersions: this.exportVersions.map(exportComp => ({
        id: exportComp.id.toStringWithoutVersion(),
        versions: exportComp.versions,
        head: exportComp.head.toString()
      }))
    };
  }

  // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!
  toString(pretty) {
    const args = (0, _utils().getStringifyArgs)(pretty);
    return JSON.stringify(this.toObject(), ...args);
  }
  id() {
    return ExportMetadata.name;
  }
  toBuffer(pretty) {
    return Buffer.from(this.toString(pretty));
  }
  static parse(contents) {
    const parsed = JSON.parse(contents);
    const props = {
      exportVersions: parsed.exportVersions.map(comp => ({
        id: _bitId().BitId.parse(comp.id, true),
        versions: comp.versions,
        head: _objects().Ref.from(comp.head)
      }))
    };
    return new ExportMetadata(props);
  }
}
exports.default = ExportMetadata;