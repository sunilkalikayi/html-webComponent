"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _bitError() {
  const data = require("@teambit/bit-error");
  _bitError = function () {
    return data;
  };
  return data;
}
class ServerIsBusy extends _bitError().BitError {
  constructor(queueSize, currentExportId) {
    super(`fatal: the server is busy exporting from other clients. total clients (including yours) in the queue: ${queueSize},
the current export-id in queue is "${currentExportId}".
if the last export was failed during the persist stage and left the remotes locked, you have the following options:
1. if the failure occurred on your local, just re-run the export command with "--resume <id>".
2. run "bit persist <id> <remotes...>", you will need to list all the remote scopes you want the persist to take place.
`);
    this.queueSize = queueSize;
    this.currentExportId = currentExportId;
    (0, _defineProperty2().default)(this, "code", void 0);
    this.code = 137;
  }
}
exports.default = ServerIsBusy;