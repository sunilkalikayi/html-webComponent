"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NoHeadNoVersion = void 0;
function _bitError() {
  const data = require("@teambit/bit-error");
  _bitError = function () {
    return data;
  };
  return data;
}
class NoHeadNoVersion extends _bitError().BitError {
  constructor(id) {
    super(`the component ${id} has no versions and the head is empty.
this is probably a component from another lane which should not be loaded in this lane (or main).
if this component is on a lane, make sure to ask for it with a version.
if that's not the case, make sure to call "getAllIdsAvailableOnLane" and not "getAllBitIdsFromAllLanes"`);
  }
}
exports.NoHeadNoVersion = NoHeadNoVersion;