import { BitObject, BitRawObject, Ref } from '../objects';
import { MigrationDeclaration } from '../../migration/migration-helper';
export declare type ScopeMigrationResult = {
    newObjects: BitObject[];
    refsToRemove: Ref[];
};
declare type VersionMigrationsDeclarations = {
    component: MigrationDeclaration[] | null | undefined;
    symlink: MigrationDeclaration[] | null | undefined;
    scopeMeta: MigrationDeclaration[] | null | undefined;
    version: MigrationDeclaration[] | null | undefined;
};
declare type VersionMigrations = {
    [version: string]: VersionMigrationsDeclarations;
};
/**
 * Running migration process for scope
 * @param {string} scopeVersion - The current scope version
 * @param {Object} migratonManifest - A manifest which define what migrations to run
 * @param {BitRawObject} objects - Scope's raw objects
 * @param {boolean} verbose - print logs
 */
export default function migrate(migrations: VersionMigrations[], objects: BitRawObject[], verbose?: boolean): Promise<ScopeMigrationResult>;
export {};
