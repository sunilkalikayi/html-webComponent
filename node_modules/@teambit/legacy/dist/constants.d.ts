import { PathOsBased } from './utils/path';
export declare const IS_WINDOWS: boolean;
export declare const CACHE_GLOBALS_ENV = "BIT_GLOBALS_DIR";
export declare const BIT_USAGE = "[--version] [--help] <command> [<args>]";
export declare const BITS_DIRNAME = "components";
export declare const BIT_JSON = "bit.json";
export declare const WORKSPACE_JSONC = "workspace.jsonc";
export declare const GIT_IGNORE = ".gitignore";
export declare const BIT_MAP = ".bitmap";
export declare const OLD_BIT_MAP = ".bit.map.json";
export declare const TESTS_FORK_LEVEL: {
    NONE: string;
    ONE: string;
    COMPONENT: string;
};
export declare const REPO_NAME = "teambit/bit";
export declare const DEFAULT_INDEX_NAME = "index";
export declare const DEFAULT_INDEX_EXTS: string[];
export declare const SUPPORTED_EXTENSIONS: string[];
export declare const NO_PLUGIN_TYPE = "none";
export declare const DEFAULT_PACKAGE_MANAGER = "npm";
export declare const DEFAULT_HARMONY_PACKAGE_MANAGER = "teambit.dependencies/pnpm";
export declare const DEFAULT_EXTENSIONS: {};
export declare const DEFAULT_DIST_DIRNAME = "dist";
export declare const DEFAULT_BUNDLE_FILENAME = "dist.js";
export declare const DEFAULT_BIT_VERSION = "0.0.1";
export declare const DEFAULT_BIT_RELEASE_TYPE = "patch";
export declare const DEFAULT_LANGUAGE = "javascript";
export declare const DEFAULT_BINDINGS_PREFIX = "@bit";
export declare const NODE_PATH_COMPONENT_SEPARATOR = ".";
export declare const DEFAULT_COMPONENTS_DIR_PATH: string;
export declare const DEFAULT_DIR_DEPENDENCIES = ".dependencies";
export declare const DEFAULT_DEPENDENCIES_DIR_PATH: string;
export declare const COMPONENT_DIR = "COMPONENT_DIR";
export declare const DEFAULT_SAVE_DEPENDENCIES_AS_COMPONENTS = false;
export declare const DEFAULT_SEPARATOR = "/";
export declare const LATEST_BIT_VERSION = "latest";
export declare const OBJECTS_DIR = "objects";
export declare const PENDING_OBJECTS_DIR = "pending-objects";
export declare const REMOTE_REFS_DIR: string;
export declare const WORKSPACE_LANES_DIR: string;
export declare const NULL_BYTE = "\0";
export declare const SPACE_DELIMITER = " ";
export declare const VERSION_DELIMITER = "@";
export declare const DEPENDENCIES_DIR = "dependencies";
export declare const DEFAULT_REMOTES: {};
export declare const DEFAULT_DEPENDENCIES: {};
export declare const SPINNER_TYPE: any;
/**
 * URLS
 */
/**
 * @deprecated use 'BASE_CLOUD_DOMAIN' or 'BASE_COMMUNITY_DOMAIN'
 */
export declare const BASE_WEB_DOMAIN = "bit.dev";
export declare const BASE_CLOUD_DOMAIN = "bit.cloud";
export declare const BASE_COMMUNITY_DOMAIN = "bit.dev";
export declare const PREVIOUSLY_BASE_WEB_DOMAIN = "bitsrc.io";
export declare const DEFAULT_HUB_DOMAIN: string;
export declare const SYMPHONY_URL: string;
export declare const SYMPHONY_GRAPHQL: string;
export declare const BASE_DOCS_DOMAIN: string;
export declare const BASE_LEGACY_DOCS_DOMAIN: string;
export declare const DEFAULT_HUB_LOGIN: string;
export declare const DEFAULT_ANALYTICS_DOMAIN: string;
export declare const SEARCH_DOMAIN: string;
export declare const RELEASE_SERVER: string;
export declare const DEFAULT_REGISTRY_URL = "https://node.bit.cloud";
export declare const PREVIOUSLY_DEFAULT_REGISTRY_URL: string;
export declare const CENTRAL_BIT_HUB_URL: string;
export declare const CENTRAL_BIT_HUB_NAME = "bit.cloud";
export declare const DEFAULT_REGISTRY_DOMAIN_PREFIX = "@bit";
export declare const DEFAULT_SSH_KEY_FILE: string;
export declare const DEFAULT_BIT_ENV = "production";
export declare const DEFAULT_SSH_READY_TIMEOUT = 99999;
export declare const IGNORE_LIST: string[];
export declare const AUTO_GENERATED_STAMP = "BIT-AUTO-GENERATED";
export declare const AUTO_GENERATED_MSG: string;
export declare const BITMAP_PREFIX_MESSAGE: string;
export declare const BIT_DESCRIPTION = "bit is a free and open source tool designed for easy use, maintenance and discovery of code components.";
/**
 * bit commands
 */
export declare const INIT_COMMAND = "init";
export declare const ENV_VARIABLE_CONFIG_PREFIX = "BIT_CONFIG_";
/**
 * bit global config keys
 */
export declare const CFG_USER_EMAIL_KEY = "user.email";
export declare const CFG_USER_TOKEN_KEY = "user.token";
export declare const CFG_USER_NAME_KEY = "user.name";
export declare const CFG_REGISTRY_URL_KEY = "registry";
export declare const CFG_SSH_KEY_FILE_KEY = "ssh_key_file";
export declare const CFG_HUB_DOMAIN_KEY = "hub_domain";
export declare const CFG_SYMPHONY_URL_KEY = "symphony_url";
export declare const CFG_HUB_LOGIN_KEY = "hub_domain_login";
export declare const CFG_ANALYTICS_DOMAIN_KEY = "analytics_domain";
export declare const CFG_ANALYTICS_ANONYMOUS_KEY = "anonymous_reporting";
export declare const CFG_REPOSITORY_REPORTING_KEY = "repository_reporting";
export declare const CFG_ANALYTICS_REPORTING_KEY = "analytics_reporting";
export declare const CFG_ANALYTICS_ERROR_REPORTS_KEY = "error_reporting";
export declare const CFG_ANALYTICS_ENVIRONMENT_KEY = "bit_environment";
export declare const CFG_ANALYTICS_USERID_KEY = "analytics_id";
export declare const CFG_REGISTRY_DOMAIN_PREFIX = "registry_domain_prefix";
export declare const CFG_POST_EXPORT_HOOK_KEY = "post_export_hook";
export declare const CFG_POST_IMPORT_HOOK_KEY = "post_import_hook";
export declare const CFG_CI_FUNCTION_PATH_KEY = "ci_function_path";
export declare const CFG_CI_ENABLE_KEY = "ci_enable";
export declare const CFG_GIT_EXECUTABLE_PATH = "git_path";
export declare const CFG_LOG_JSON_FORMAT = "log_json_format";
export declare const CFG_LOG_LEVEL = "log_level";
export declare const CFG_NO_WARNINGS = "no_warnings";
export declare const CFG_INTERACTIVE = "interactive";
export declare const CFG_COMMAND_INTERACTIVE_TEMPLATE = "interactive.{commandName}";
export declare const CFG_INIT_INTERACTIVE: any;
export declare const CFG_INIT_DEFAULT_SCOPE = "default_scope";
export declare const CFG_INIT_DEFAULT_DIRECTORY = "default_directory";
export declare const CFG_SSH_NO_COMPRESS = "ssh_no_compress";
export declare const CFG_FEATURE_TOGGLE = "features";
export declare const CFG_PACKAGE_MANAGER_CACHE = "package-manager.cache";
export declare const CFG_CAPSULES_ROOT_BASE_DIR = "capsules_root_base_dir";
export declare const CFG_PROXY = "proxy";
export declare const CFG_HTTPS_PROXY = "https_proxy";
export declare const CFG_PROXY_NO_PROXY = "proxy.no_proxy";
export declare const CFG_PROXY_CA = "proxy.ca";
export declare const CFG_PROXY_CA_FILE = "proxy.cafile";
export declare const CFG_PROXY_STRICT_SSL = "proxy.strict_ssl";
export declare const CFG_PROXY_CERT = "proxy.cert";
export declare const CFG_PROXY_KEY = "proxy.key";
export declare const CFG_FETCH_RETRIES = "network.fetch_retries";
export declare const CFG_FETCH_RETRY_FACTOR = "network.fetch_retry_factor";
export declare const CFG_FETCH_RETRY_MINTIMEOUT = "network.fetch_retry_mintimeout";
export declare const CFG_FETCH_RETRY_MAXTIMEOUT = "network.fetch_retry_maxtimeout";
export declare const CFG_FETCH_TIMEOUT = "network.fetch_timeout";
export declare const CFG_LOCAL_ADDRESS = "network.local_address";
export declare const CFG_MAX_SOCKETS = "network.max_sockets";
export declare const CFG_NETWORK_CONCURRENCY = "network.concurrency";
export declare const CFG_NETWORK_CA = "network.ca";
export declare const CFG_NETWORK_CA_FILE = "network.cafile";
export declare const CFG_NETWORK_STRICT_SSL = "network.strict-ssl";
export declare const CFG_NETWORK_CERT = "network.cert";
export declare const CFG_NETWORK_KEY = "network.key";
export declare const CFG_CONCURRENCY_IO = "concurrency.io";
export declare const CFG_CONCURRENCY_COMPONENTS = "concurrency.components";
export declare const CFG_CONCURRENCY_FETCH = "concurrency.fetch";
export declare const CFG_CACHE_MAX_ITEMS_COMPONENTS = "cache.max.components";
export declare const CFG_CACHE_MAX_ITEMS_OBJECTS = "cache.max.objects";
/**
 * git hooks
 */
export declare const POST_CHECKOUT = "post-checkout";
export declare const POST_MERGE = "post-merge";
export declare const GIT_HOOKS_NAMES: string[];
/**
 * bit hooks
 */
export declare const PRE_TAG_HOOK = "pre-tag";
export declare const POST_TAG_HOOK = "post-tag";
export declare const POST_ADD_HOOK = "post-add";
export declare const PRE_TAG_ALL_HOOK = "pre-tag-all";
export declare const POST_TAG_ALL_HOOK = "post-tag-all";
export declare const PRE_IMPORT_HOOK = "pre-import";
export declare const POST_IMPORT_HOOK = "post-import";
export declare const PRE_EXPORT_HOOK = "pre-export";
export declare const POST_EXPORT_HOOK = "post-export";
export declare const PRE_SEND_OBJECTS = "pre-send-objects";
export declare const POST_SEND_OBJECTS = "post-send-objects";
export declare const PRE_RECEIVE_OBJECTS = "pre-receive-objects";
export declare const POST_RECEIVE_OBJECTS = "post-receive-objects";
export declare const PRE_DEPRECATE_REMOTE = "pre-deprecate-remote";
export declare const PRE_UNDEPRECATE_REMOTE = "pre-undeprecate-remote";
export declare const POST_DEPRECATE_REMOTE = "post-deprecate-remote";
export declare const POST_UNDEPRECATE_REMOTE = "post-undeprecate-remote";
export declare const PRE_REMOVE_REMOTE = "pre-remove-remote";
export declare const POST_REMOVE_REMOTE = "post-remove-remote";
export declare const HOOKS_NAMES: string[];
/**
 * cache root directory
 */
export declare const CACHE_ROOT: string;
/**
 * global config directories
 */
export declare const GLOBAL_CONFIG: PathOsBased;
export declare const GLOBAL_LOGS: PathOsBased;
export declare const GLOBAL_SCOPE: PathOsBased;
export declare const GLOBALS_DEFAULT_CAPSULES: string;
export declare const GLOBAL_CONFIG_FILE = "config.json";
export declare const GLOBAL_REMOTES = "global-remotes.json";
export declare const BIT_HIDDEN_DIR = ".bit";
export declare const BIT_GIT_DIR = "bit";
export declare const DOT_GIT_DIR = ".git";
/**
 * bit registry default URL.
 */
export declare const BIT_REGISTRY = "";
export declare const LATEST = "latest";
export declare const HEAD = "head";
export declare const DEPENDENCY_DELIMITER = "/";
export declare const BIT_SOURCES_DIRNAME = "source";
export declare const BIT_TMP_DIRNAME = "tmp";
export declare const BIT_WORKSPACE_TMP_DIRNAME = ".bitTmp";
export declare const BIT_CACHE_DIRNAME = "cache";
export declare const SUB_DIRECTORIES_GLOB_PATTERN = "/**/*";
export declare const SCOPE_JSON = "scope.json";
export declare const SCOPE_JSONC = "scope.jsonc";
export declare const DEFAULT_RESOLVER: () => string;
/**
 * current bit application version
 */
export declare const BIT_VERSION: any;
export declare const BIT_INSTALL_METHOD: any;
export declare const TOKEN_FLAG_NAME = "token";
export declare const TOKEN_FLAG: string;
export declare const LICENSE_FILENAME = "LICENSE";
export declare const ISOLATED_ENV_ROOT = "environment";
export declare const NODE_PATH_SEPARATOR: string;
export declare const WRAPPER_DIR = "bit_wrapper_dir";
export declare const PACKAGE_JSON = "package.json";
export declare const COMPONENT_CONFIG_FILE_NAME = "component.json";
export declare const DEBUG_LOG: PathOsBased;
export declare const MANUALLY_REMOVE_DEPENDENCY = "-";
export declare const MANUALLY_REMOVE_ENVIRONMENT = "-";
export declare const MANUALLY_ADD_DEPENDENCY = "+";
export declare const OVERRIDE_FILE_PREFIX = "file://";
export declare const OVERRIDE_COMPONENT_PREFIX = "@bit/";
export declare const ACCEPTABLE_NPM_VERSIONS = ">=5.0.0";
export declare const ANGULAR_PACKAGE_IDENTIFIER = "@angular/core";
export declare const ANGULAR_BIT_ENTRY_POINT_FILE: string[];
export declare const COMPONENT_DIST_PATH_TEMPLATE = "{COMPONENT_DIST_PATH}";
export declare const WILDCARD_HELP: (command: string) => string;
export declare const PATTERN_HELP: (command: string) => string;
export declare const COMPONENT_PATTERN_HELP = "component name, component id, or component pattern. use component pattern to select multiple components.\nuse comma to separate patterns and \"!\" to exclude. e.g. \"ui/**, !ui/button\"\nwrap the pattern with quotes";
export declare const CURRENT_UPSTREAM = "current";
export declare const DEPENDENCIES_FIELDS: string[];
export declare const HASH_SIZE = 40;
export declare const PREVIOUS_DEFAULT_LANE = "master";
export declare const statusInvalidComponentsMsg = "invalid components";
export declare const statusFailureMsg = "issues found";
export declare const statusWorkspaceIsCleanMsg = "nothing to tag or export (use \"bit add <file...>\" to track files or directories as components)";
export declare const STARTED_WATCHING_MSG = "started watching for component changes to rebuild";
export declare const WATCHER_COMPLETED_MSG = "watching for changes";
export declare const NOTHING_TO_SNAP_MSG = "nothing to snap";
export declare const AUTO_SNAPPED_MSG = "auto-snapped dependents";
export declare const IMPORT_PENDING_MSG = "your workspace has outdated objects. please use \"bit import\" to pull the latest objects from the remote scope";
export declare enum Extensions {
    dependencyResolver = "teambit.dependencies/dependency-resolver",
    pkg = "teambit.pkg/pkg",
    compiler = "teambit.compilation/compiler",
    envs = "teambit.envs/envs",
    builder = "teambit.pipelines/builder",
    deprecation = "teambit.component/deprecation",
    forking = "teambit.component/forking",
    renaming = "teambit.component/renaming",
    lanes = "teambit.lanes/lanes",
    remove = "teambit.component/remove"
}
export declare enum BuildStatus {
    Pending = "pending",
    Failed = "failed",
    Succeed = "succeed"
}
export declare const SOURCE_DIR_SYMLINK_TO_NM = "_src";
