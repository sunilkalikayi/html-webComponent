"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ExternalActions = void 0;
exports.action = action;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _scope() {
  const data = require("../../../scope");
  _scope = function () {
    return data;
  };
  return data;
}
function _actions() {
  const data = require("../../../scope/actions");
  _actions = function () {
    return data;
  };
  return data;
}
function _actionNotFound() {
  const data = _interopRequireDefault(require("../../../scope/exceptions/action-not-found"));
  _actionNotFound = function () {
    return data;
  };
  return data;
}
class ExternalActions {}
exports.ExternalActions = ExternalActions;
(0, _defineProperty2().default)(ExternalActions, "externalActions", []);
async function action(scopePath, name, options, authData) {
  const externalAction = ExternalActions.externalActions.find(extAction => extAction.name === name);
  if (externalAction) {
    return externalAction.execute(options);
  }
  const scope = await (0, _scope().loadScope)(scopePath);
  const actionList = [_actions().ExportValidate, _actions().ExportPersist, _actions().RemovePendingDir, _actions().FetchMissingDeps, _actions().PostSign, _actions().FetchMissingHistory];
  const ActionClass = actionList.find(a => a.name === name);
  if (!ActionClass) {
    throw new (_actionNotFound().default)(name);
  }
  return new ActionClass().execute(scope, options, authData);
}