"use strict";

function _chai() {
  const data = require("chai");
  _chai = function () {
    return data;
  };
  return data;
}
function _featureToggle() {
  const data = require("./feature-toggle");
  _featureToggle = function () {
    return data;
  };
  return data;
}
describe('featureToggle', () => {
  after(() => {
    process.env[_featureToggle().ENV_VAR_FEATURE_TOGGLE] = '';
  });
  describe('isFeatureEnabled', () => {
    it('should work with multiple features', () => {
      process.env[_featureToggle().ENV_VAR_FEATURE_TOGGLE] = 'feature1, feature2';
      (0, _chai().expect)((0, _featureToggle().isFeatureEnabled)('feature1')).to.be.true;
      (0, _chai().expect)((0, _featureToggle().isFeatureEnabled)('feature2')).to.be.true;
      (0, _chai().expect)((0, _featureToggle().isFeatureEnabled)('feature3')).to.be.false;
    });
  });
  describe('addFeature', () => {
    it('should add feature', () => {
      (0, _featureToggle().addFeature)('add1');
      (0, _chai().expect)((0, _featureToggle().isFeatureEnabled)('add1')).to.be.true;
    });
    it('should add feature to existing features', () => {
      process.env[_featureToggle().ENV_VAR_FEATURE_TOGGLE] = 'feature1, feature2';
      (0, _featureToggle().addFeature)('add1');
      (0, _chai().expect)((0, _featureToggle().isFeatureEnabled)('add1')).to.be.true;
      (0, _chai().expect)((0, _featureToggle().isFeatureEnabled)('feature1')).to.be.true;
      (0, _chai().expect)((0, _featureToggle().isFeatureEnabled)('feature2')).to.be.true;
      (0, _chai().expect)((0, _featureToggle().isFeatureEnabled)('feature3')).to.be.false;
    });
  });
});