{"version":3,"names":["catchErrors","action","req","res","next","catch","error","errorHandle","err","logger","url","status","jsonp","message"],"sources":["error.ts"],"sourcesContent":["import * as express from 'express';\nimport logger from '@teambit/legacy/dist/logger/logger';\n\ninterface ResponseError {\n  status?: number;\n  message?: string;\n}\n\nexport const catchErrors = (action: any) => (req: express.Request, res: express.Response, next: express.NextFunction) =>\n  // TODO: @guy please take care of it\n  // eslint-disable-next-line promise/no-callback-in-promise\n  action(req, res, next).catch((error: ResponseError) => errorHandle(error, req, res, next));\n\nexport function errorHandle(\n  err: ResponseError,\n  req: express.Request,\n  res: express.Response,\n  // TODO: Do not remove unused next, it's needed for express to catch errors!\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  next: express.NextFunction\n) {\n  logger.error(`express.errorHandle, url ${req.url}, error:`, err);\n  err.status = err.status || 500;\n  res.status(err.status);\n  return res.jsonp({\n    message: err.message,\n    error: err,\n  });\n}\n"],"mappings":";;;;;;;;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAOO,MAAMA,WAAW,GAAIC,MAAW,IAAK,CAACC,GAAoB,EAAEC,GAAqB,EAAEC,IAA0B;AAClH;AACA;AACAH,MAAM,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAACC,KAAK,CAAEC,KAAoB,IAAKC,WAAW,CAACD,KAAK,EAAEJ,GAAG,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAAC;AAAC;AAEtF,SAASG,WAAW,CACzBC,GAAkB,EAClBN,GAAoB,EACpBC,GAAqB;AACrB;AACA;AACAC,IAA0B,EAC1B;EACAK,iBAAM,CAACH,KAAK,CAAE,4BAA2BJ,GAAG,CAACQ,GAAI,UAAS,EAAEF,GAAG,CAAC;EAChEA,GAAG,CAACG,MAAM,GAAGH,GAAG,CAACG,MAAM,IAAI,GAAG;EAC9BR,GAAG,CAACQ,MAAM,CAACH,GAAG,CAACG,MAAM,CAAC;EACtB,OAAOR,GAAG,CAACS,KAAK,CAAC;IACfC,OAAO,EAAEL,GAAG,CAACK,OAAO;IACpBP,KAAK,EAAEE;EACT,CAAC,CAAC;AACJ"}