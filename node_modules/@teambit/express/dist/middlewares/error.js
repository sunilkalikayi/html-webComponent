"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.catchErrors = void 0;
exports.errorHandle = errorHandle;
function _logger() {
  const data = _interopRequireDefault(require("@teambit/legacy/dist/logger/logger"));
  _logger = function () {
    return data;
  };
  return data;
}
const catchErrors = action => (req, res, next) =>
// TODO: @guy please take care of it
// eslint-disable-next-line promise/no-callback-in-promise
action(req, res, next).catch(error => errorHandle(error, req, res, next));
exports.catchErrors = catchErrors;
function errorHandle(err, req, res,
// TODO: Do not remove unused next, it's needed for express to catch errors!
// eslint-disable-next-line @typescript-eslint/no-unused-vars
next) {
  _logger().default.error(`express.errorHandle, url ${req.url}, error:`, err);
  err.status = err.status || 500;
  res.status(err.status);
  return res.jsonp({
    message: err.message,
    error: err
  });
}

//# sourceMappingURL=error.js.map