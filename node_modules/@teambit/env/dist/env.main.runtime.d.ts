import { AspectMain } from '@teambit/aspect';
import { Environment, EnvsMain, EnvTransformer } from '@teambit/envs';
import { EnvEnv } from './env.env';
export declare class EnvMain {
    readonly envEnv: EnvEnv;
    private envs;
    constructor(envEnv: EnvEnv, envs: EnvsMain);
    /**
     * compose your own aspect environment.
     */
    compose(transformers?: EnvTransformer[], targetEnv?: Environment): Environment;
    static slots: never[];
    static dependencies: import("@teambit/harmony").Aspect[];
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    static provider([aspectAspect, envs]: [AspectMain, EnvsMain]): Promise<EnvMain>;
}
