{"version":3,"names":["JestWorker","onTestComplete","onTestCompleteCb","watch","jestConfigPath","testFiles","rootPath","jestModulePath","envRootDir","Promise","resolve","console","warn","jestConfig","require","jestModule","jestConfigWithSpecs","Object","assign","testMatch","config","rootDir","roots","runInBand","silent","watchAll","watchPlugins","__dirname","specFiles","onComplete","results","json","parse","stringify","error","withEnv","res","runCLI","catch","err","expose"],"sources":["jest.worker.ts"],"sourcesContent":["import { stringify, parse } from 'flatted';\nimport { expose } from '@teambit/worker';\nimport type jest from 'jest';\n\nexport class JestWorker {\n  private onTestCompleteCb;\n\n  onTestComplete(onTestComplete) {\n    this.onTestCompleteCb = onTestComplete;\n    // return this;\n  }\n\n  watch(\n    jestConfigPath: string,\n    testFiles: string[],\n    rootPath: string,\n    jestModulePath: string,\n    envRootDir: string\n  ): Promise<void> {\n    return new Promise((resolve) => {\n      // TODO: remove this after jest publish new version to npm: https://github.com/facebook/jest/pull/10804\n      // eslint-disable-next-line\n      console.warn = function () {};\n      /* The path to the jest config file. */\n      // eslint-disable-next-line import/no-dynamic-require,global-require\n      const jestConfig = require(jestConfigPath);\n      // eslint-disable-next-line import/no-dynamic-require,global-require\n      const jestModule: typeof jest = require(jestModulePath);\n\n      const jestConfigWithSpecs = Object.assign(jestConfig, {\n        testMatch: testFiles,\n      });\n\n      const config: any = {\n        // Setting the rootDir to the env root dir to make sure we can resolve all the jest presets/plugins\n        // from the env context\n        rootDir: envRootDir,\n        // Setting the roots (where to search for spec files) to the root path (either workspace or capsule root)\n        // TODO: consider change this to be an array of the components running dir.\n        // TODO: aka: in the workspace it will be something like <ws>/node_modules/<comp-package-name>/node_modules/<comp-package-name>\n        // TODO: see dependencyResolver.getRuntimeModulePath (this will make sure the peer deps resolved correctly)\n        // TODO: (@GiladShoham - when trying to set it to this paths, jest ignores it probably because the paths contains \"node_modules\"\n        // TODO: trying to set the https://jestjs.io/docs/27.x/configuration#testpathignorepatterns-arraystring to something else (as it contain node_modules by default)\n        // TODO: didn't help)\n        roots: [rootPath],\n        // useStderr: true,\n        // TODO: check way to enable it\n        runInBand: true,\n        silent: false,\n        watch: true,\n        watchAll: true,\n        watchPlugins: [\n          [\n            `${__dirname}/watch.js`,\n            {\n              specFiles: testFiles,\n              onComplete: (results) => {\n                if (!this.onTestCompleteCb) return;\n                try {\n                  const json = parse(stringify(results));\n                  this.onTestCompleteCb(json);\n                  // disable eslint because we want to catch error but not print it on worker\n                  // eslint-disable-next-line\n                } catch (error: any) {}\n              },\n            },\n          ],\n        ],\n      };\n\n      const withEnv = Object.assign(jestConfigWithSpecs, config);\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      const res = jestModule.runCLI(withEnv, [jestConfigPath]);\n      // eslint-disable-next-line no-console\n      res.catch((err) => console.error(err));\n      resolve();\n    });\n  }\n}\n\nexpose(new JestWorker());\n"],"mappings":";;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAGO,MAAMA,UAAU,CAAC;EAAA;IAAA;EAAA;EAGtBC,cAAc,CAACA,cAAc,EAAE;IAC7B,IAAI,CAACC,gBAAgB,GAAGD,cAAc;IACtC;EACF;;EAEAE,KAAK,CACHC,cAAsB,EACtBC,SAAmB,EACnBC,QAAgB,EAChBC,cAAsB,EACtBC,UAAkB,EACH;IACf,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9B;MACA;MACAC,OAAO,CAACC,IAAI,GAAG,YAAY,CAAC,CAAC;MAC7B;MACA;MACA,MAAMC,UAAU,GAAGC,OAAO,CAACV,cAAc,CAAC;MAC1C;MACA,MAAMW,UAAuB,GAAGD,OAAO,CAACP,cAAc,CAAC;MAEvD,MAAMS,mBAAmB,GAAGC,MAAM,CAACC,MAAM,CAACL,UAAU,EAAE;QACpDM,SAAS,EAAEd;MACb,CAAC,CAAC;MAEF,MAAMe,MAAW,GAAG;QAClB;QACA;QACAC,OAAO,EAAEb,UAAU;QACnB;QACA;QACA;QACA;QACA;QACA;QACA;QACAc,KAAK,EAAE,CAAChB,QAAQ,CAAC;QACjB;QACA;QACAiB,SAAS,EAAE,IAAI;QACfC,MAAM,EAAE,KAAK;QACbrB,KAAK,EAAE,IAAI;QACXsB,QAAQ,EAAE,IAAI;QACdC,YAAY,EAAE,CACZ,CACG,GAAEC,SAAU,WAAU,EACvB;UACEC,SAAS,EAAEvB,SAAS;UACpBwB,UAAU,EAAGC,OAAO,IAAK;YACvB,IAAI,CAAC,IAAI,CAAC5B,gBAAgB,EAAE;YAC5B,IAAI;cACF,MAAM6B,IAAI,GAAG,IAAAC,gBAAK,EAAC,IAAAC,oBAAS,EAACH,OAAO,CAAC,CAAC;cACtC,IAAI,CAAC5B,gBAAgB,CAAC6B,IAAI,CAAC;cAC3B;cACA;YACF,CAAC,CAAC,OAAOG,KAAU,EAAE,CAAC;UACxB;QACF,CAAC,CACF;MAEL,CAAC;MAED,MAAMC,OAAO,GAAGlB,MAAM,CAACC,MAAM,CAACF,mBAAmB,EAAEI,MAAM,CAAC;MAC1D;MACA,MAAMgB,GAAG,GAAGrB,UAAU,CAACsB,MAAM,CAACF,OAAO,EAAE,CAAC/B,cAAc,CAAC,CAAC;MACxD;MACAgC,GAAG,CAACE,KAAK,CAAEC,GAAG,IAAK5B,OAAO,CAACuB,KAAK,CAACK,GAAG,CAAC,CAAC;MACtC7B,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;AACF;AAAC;AAED,IAAA8B,gBAAM,EAAC,IAAIxC,UAAU,EAAE,CAAC"}