{"version":3,"names":["BuilderCmd","constructor","builder","workspace","logger","name","description","COMPONENT_PATTERN_HELP","report","pattern","all","unmodified","dev","install","cachePackagesOnCapsulesRoot","reuseCapsules","tasks","listTasks","skipTests","ConsumerNotFound","consoleWarning","getListTasks","longProcessLogger","createLongProcessLogger","components","getComponentsByUserInput","length","chalk","bold","consoleSuccess","envsExecutionResults","build","installOptions","installTeambitBit","packageManagerConfigRootDir","path","linkingOptions","linkTeambitBit","emptyRootDir","getExistingAsIs","split","map","task","trim","end","throwErrorsIfExist","green","tasksQueue","componentIdStr","compId","resolveComponentId","component","get","results","id","toString","envId","buildTasks","join","tagTasks","snapTasks"],"sources":["build.cmd.ts"],"sourcesContent":["import { Command, CommandOptions } from '@teambit/cli';\nimport { Logger } from '@teambit/logger';\nimport { Workspace } from '@teambit/workspace';\nimport { COMPONENT_PATTERN_HELP } from '@teambit/legacy/dist/constants';\nimport { ConsumerNotFound } from '@teambit/legacy/dist/consumer/exceptions';\nimport chalk from 'chalk';\nimport { BuilderMain } from './builder.main.runtime';\n\ntype BuildOpts = {\n  all: boolean; // deprecated. use unmodified\n  unmodified?: boolean;\n  dev: boolean;\n  rebuild: boolean;\n  install: boolean;\n  cachePackagesOnCapsulesRoot: boolean;\n  reuseCapsules: boolean;\n  tasks: string;\n  listTasks?: string;\n  skipTests?: boolean;\n};\n\nexport class BuilderCmd implements Command {\n  name = 'build [component-pattern]';\n  description = 'run set of tasks for build';\n  arguments = [{ name: 'component-pattern', description: COMPONENT_PATTERN_HELP }];\n  alias = '';\n  group = 'development';\n  options = [\n    ['a', 'all', 'DEPRECATED. use --unmodified'],\n    ['u', 'unmodified', 'include unmodified components (by default, only new and modified components are built)'],\n    ['d', 'dev', 'run the pipeline in dev mode'],\n    ['', 'install', 'install core aspects in capsules'],\n    ['', 'reuse-capsules', 'avoid deleting the capsules root-dir before starting the build'],\n    [\n      '',\n      'tasks <string>',\n      `build the specified task(s) only. for multiple tasks, separate by a comma and wrap with quotes.\nspecify the task-name (e.g. \"TypescriptCompiler\") or the task-aspect-id (e.g. teambit.compilation/compiler)`,\n    ],\n    ['', 'cache-packages-on-capsule-root', 'set the package-manager cache on the capsule root'],\n    [\n      '',\n      'list-tasks <string>',\n      'list tasks of an env or a component-id for each one of the pipelines: build, tag and snap',\n    ],\n    ['', 'skip-tests', 'skip running component tests during tag process'],\n  ] as CommandOptions;\n\n  constructor(private builder: BuilderMain, private workspace: Workspace, private logger: Logger) {}\n\n  async report(\n    [pattern]: [string],\n    {\n      all = false,\n      unmodified = false,\n      dev = false,\n      install = false,\n      cachePackagesOnCapsulesRoot = false,\n      reuseCapsules = false,\n      tasks,\n      listTasks,\n      skipTests,\n    }: BuildOpts\n  ): Promise<string> {\n    if (!this.workspace) throw new ConsumerNotFound();\n    if (all) {\n      this.logger.consoleWarning(`--all is deprecated, please use --unmodified instead`);\n      unmodified = true;\n    }\n    if (listTasks) {\n      return this.getListTasks(listTasks);\n    }\n\n    const longProcessLogger = this.logger.createLongProcessLogger('build');\n    const components = await this.workspace.getComponentsByUserInput(unmodified, pattern, true);\n    if (!components.length) {\n      return chalk.bold(\n        `no components found to build. use \"--unmodified\" flag to build all components or specify the ids to build, otherwise, only new and modified components will be built`\n      );\n    }\n    this.logger.consoleSuccess(`found ${components.length} components to build`);\n\n    const envsExecutionResults = await this.builder.build(\n      components,\n      {\n        installOptions: {\n          installTeambitBit: install,\n          packageManagerConfigRootDir: this.workspace.path,\n        },\n        linkingOptions: { linkTeambitBit: !install },\n        emptyRootDir: !reuseCapsules,\n        getExistingAsIs: reuseCapsules,\n        cachePackagesOnCapsulesRoot,\n      },\n      {\n        dev,\n        tasks: tasks ? tasks.split(',').map((task) => task.trim()) : [],\n        skipTests,\n      }\n    );\n    longProcessLogger.end();\n    envsExecutionResults.throwErrorsIfExist();\n    this.logger.consoleSuccess();\n    return chalk.green(`the build has been completed. total: ${envsExecutionResults.tasksQueue.length} tasks`);\n  }\n\n  private async getListTasks(componentIdStr: string): Promise<string> {\n    const compId = await this.workspace.resolveComponentId(componentIdStr);\n    const component = await this.workspace.get(compId);\n    const results = this.builder.listTasks(component);\n    return `${chalk.green('Tasks List')}\nid:    ${results.id.toString()}\nenvId: ${results.envId}\n\n${chalk.bold('Build Pipeline Tasks:')}\n${results.buildTasks.join('\\n')}\n\n${chalk.bold('Tag Pipeline Tasks:')}\n${results.tagTasks.join('\\n')}\n\n${chalk.bold('Snap Pipeline Tasks:')}\n${results.snapTasks.join('\\n') || '<N/A>'}`;\n  }\n}\n"],"mappings":"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"}