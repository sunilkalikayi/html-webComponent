{"version":3,"names":[],"sources":["storage-resolver.ts"],"sourcesContent":["import { Component } from '@teambit/component';\nimport { ArtifactVinyl } from '@teambit/legacy/dist/consumer/component/sources/artifact';\nimport { FsArtifact } from '../artifact';\n\nexport type StoreResult = {\n  [path: string]: string;\n};\n\ninterface BaseStorageResolver {\n  /**\n   * name of the storage resolver.\n   */\n  name: string;\n}\n\nexport interface WholeArtifactStorageResolver extends BaseStorageResolver {\n  /**\n   * store artifacts in the storage.\n   */\n  store(component: Component, artifact: FsArtifact): Promise<StoreResult | undefined | void>;\n}\n\nexport interface FileStorageResolver extends BaseStorageResolver {\n  /**\n   * store artifacts in the storage.\n   */\n  storeFile(component: Component, artifact: FsArtifact, file: ArtifactVinyl): Promise<string | undefined | void>;\n}\n\nexport type ArtifactStorageResolver = FileStorageResolver | WholeArtifactStorageResolver;\n"],"mappings":""}