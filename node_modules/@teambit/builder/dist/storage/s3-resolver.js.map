{"version":3,"names":[],"sources":["s3-resolver.ts"],"sourcesContent":["// import { S3 } from 'aws-sdk';\n// import { Component, ComponentID } from '@teambit/component';\n// import { StorageResolver } from './storage-resolver';\n// import type { ArtifactList } from '../artifact';\n\n// export class S3Resolver implements StorageResolver {\n//   name = 's3';\n//   // todo artifact map\n//   async store(component: Component, artifacts: ArtifactList) {\n//     // https://staoge.com/{compId}/aspectId/${path}\n//     const artifactsByTaskId = artifacts.groupByTaskId();\n//     const files = Object.entries(artifactsByTaskId).map(([taskId, artifact]) => {\n//       return artifact.paths.map((path) => this.buildKey(component.id, taskId, path));\n//     });\n//     // files file to upload\n//   }\n\n//   private buildKey(id: ComponentID, taskId: string, path: string) {\n//     return id.fullName;\n//   }\n\n//   private upload(key: string, body: string) {\n//     const s3 = this.getS3Client();\n//     s3.upload({\n//       Bucket: 'storage',\n//       Key: key,\n//       Body: body,\n//     });\n//   }\n\n//   private getS3Client() {\n//     //TODO: need to pass bithub token\n//     const s3 = new S3({\n//       accessKeyId: 'bit',\n//       secretAccessKey: process.env.BIT_DEV_TOKEN,\n//       endpoint: 'http://bit.test:5003',\n//     });\n//     return s3;\n//   }\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA"}