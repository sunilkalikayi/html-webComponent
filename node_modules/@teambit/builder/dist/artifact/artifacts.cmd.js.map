{"version":3,"names":["INDENT_TITLE","repeat","INDENT_SUB_TITLE","INDENT_FILES","ArtifactsCmd","constructor","builder","scope","name","description","COMPONENT_PATTERN_HELP","report","componentPattern","artifactsOpts","BitError","artifactExtractor","ArtifactExtractor","list","grouped","groupResultsByAspect","outputArtifacts","aspectId","artifactData","title","chalk","green","artifactDataStr","map","artifact","subTitle","white","taskName","artifactName","files","f","dim","join","outputResult","result","idStr","cyan","id","toString","artifacts","Object","keys","footer","outDir"],"sources":["artifacts.cmd.ts"],"sourcesContent":["import { Command, CommandOptions } from '@teambit/cli';\nimport chalk from 'chalk';\nimport { COMPONENT_PATTERN_HELP } from '@teambit/legacy/dist/constants';\nimport { BitError } from '@teambit/bit-error';\nimport { ScopeMain } from '@teambit/scope';\nimport { BuilderMain } from '../builder.main.runtime';\nimport { ArtifactExtractor, ExtractorArtifactResult, ExtractorResultGrouped } from './artifact-extractor';\n\nconst INDENT_TITLE = ' '.repeat(2);\nconst INDENT_SUB_TITLE = ' '.repeat(4);\nconst INDENT_FILES = ' '.repeat(6);\n\nexport type ArtifactsOpts = {\n  aspect?: string;\n  task?: string;\n  files?: string;\n  outDir?: string;\n};\n\nexport class ArtifactsCmd implements Command {\n  name = 'artifacts <component-pattern>';\n  description = 'EXPERIMENTAL. list and download components artifacts';\n  extendedDescription = `artifacts are created on isolated capsules during tag or snap commands.\nexample of artifacts are dists files generated by a compiler, a JUnit.xml file generated by a tester\nand a package.tgz file generated by pkg aspect.\n`;\n  arguments = [\n    {\n      name: 'component-pattern',\n      description: COMPONENT_PATTERN_HELP,\n    },\n  ];\n  alias = '';\n  group = 'development';\n  options = [\n    ['', 'aspect <aspect-id>', 'show/download only artifacts generated by this aspect-id'],\n    ['', 'task <task-id>', 'show/download only artifacts generated by this task-id'],\n    [\n      '',\n      'files <glob>',\n      'show/download only artifacts matching the given files or the glob pattern (wrap glob patterns in quotes)',\n    ],\n    ['', 'out-dir <string>', 'download the files to the specified dir'],\n  ] as CommandOptions;\n\n  constructor(private builder: BuilderMain, private scope: ScopeMain) {}\n\n  async report([componentPattern]: [string], artifactsOpts: ArtifactsOpts): Promise<string> {\n    if (!this.scope) throw new BitError(`unable to run \"bit artifacts\" outside of a workspace or a scope`);\n    const artifactExtractor = new ArtifactExtractor(this.scope, this.builder, componentPattern, artifactsOpts);\n    const list = await artifactExtractor.list();\n    const grouped = artifactExtractor.groupResultsByAspect(list);\n    const outputArtifacts = (aspectId: string, artifactData: ExtractorArtifactResult[]) => {\n      const title = chalk.green(aspectId);\n      const artifactDataStr = artifactData\n        .map((artifact) => {\n          const subTitle = chalk.white(`${artifact.taskName} (${artifact.artifactName})`);\n          const files = artifact.files.map((f) => INDENT_FILES + chalk.dim(f)).join('\\n');\n          return `${INDENT_SUB_TITLE}${subTitle}\\n${files}`;\n        })\n        .join('\\n');\n      return `${INDENT_TITLE}${title}\\n${artifactDataStr}`;\n    };\n    const outputResult = (result: ExtractorResultGrouped) => {\n      const idStr = chalk.cyan(result.id.toString());\n      const artifacts = Object.keys(result.artifacts)\n        .map((aspectId) => outputArtifacts(aspectId, result.artifacts[aspectId]))\n        .join('\\n\\n');\n      return `${idStr}\\n${artifacts}`;\n    };\n    const footer = artifactsOpts.outDir\n      ? chalk.green('\\n\\nThe above files were saved successfully to the file system')\n      : '';\n    return grouped.map(outputResult).join('\\n\\n') + footer;\n  }\n}\n"],"mappings":"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"}