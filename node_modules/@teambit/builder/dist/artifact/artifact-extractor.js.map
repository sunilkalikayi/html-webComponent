{"version":3,"names":["ArtifactExtractor","constructor","scope","builder","pattern","options","list","ids","idsByPattern","components","loadMany","artifactListPerId","map","component","id","artifacts","getArtifacts","filterByOptions","saveFilesInFileSystemIfAsked","artifactsObjectsToExtractorResults","groupResultsByAspect","extractorResult","result","reduce","acc","current","aspectId","push","outDir","pMapSeries","vinyls","getVinylsAndImportIfMissing","_legacy","legacyScope","idAsFilename","filenamify","toStringWithoutVersion","replacement","compPath","path","join","Promise","all","vinyl","fs","outputFile","contents","results","artifact","artifactName","name","task","taskName","generatedBy","files","refs","ref","relativePath","aspect","filteredArtifacts","forEach","item","filter","minimatch","Artifact","def","ArtifactFiles","isEmpty","ArtifactList","fromArray"],"sources":["artifact-extractor.ts"],"sourcesContent":["import path from 'path';\nimport filenamify from 'filenamify';\nimport fs from 'fs-extra';\nimport { ScopeMain } from '@teambit/scope';\nimport { ComponentID } from '@teambit/component-id';\nimport pMapSeries from 'p-map-series';\nimport minimatch from 'minimatch';\nimport { ArtifactFiles } from '@teambit/legacy/dist/consumer/component/sources/artifact-files';\nimport { BuilderMain } from '../builder.main.runtime';\nimport { ArtifactsOpts } from './artifacts.cmd';\nimport { ArtifactList } from './artifact-list';\nimport { Artifact } from './artifact';\n\nexport type ExtractorResult = {\n  id: ComponentID;\n  artifacts: ExtractorArtifactResult[];\n};\n\nexport type ExtractorArtifactResult = {\n  artifactName: string;\n  aspectId: string;\n  taskName: string;\n  files: string[];\n};\n\nexport type ExtractorResultGrouped = {\n  id: ComponentID;\n  artifacts: { [aspectId: string]: ExtractorArtifactResult[] };\n};\n\ntype ArtifactListPerId = {\n  id: ComponentID;\n  artifacts: ArtifactList<Artifact>;\n};\n\nexport class ArtifactExtractor {\n  constructor(\n    private scope: ScopeMain,\n    private builder: BuilderMain,\n    private pattern: string,\n    private options: ArtifactsOpts\n  ) {}\n\n  async list(): Promise<ExtractorResult[]> {\n    const ids = await this.scope.idsByPattern(this.pattern);\n    const components = await this.scope.loadMany(ids);\n    const artifactListPerId: ArtifactListPerId[] = components.map((component) => {\n      return {\n        id: component.id,\n        artifacts: this.builder.getArtifacts(component),\n      };\n    });\n    this.filterByOptions(artifactListPerId);\n    await this.saveFilesInFileSystemIfAsked(artifactListPerId);\n\n    return this.artifactsObjectsToExtractorResults(artifactListPerId);\n  }\n\n  groupResultsByAspect(extractorResult: ExtractorResult[]) {\n    return extractorResult.map((result) => {\n      const artifacts = result.artifacts.reduce((acc, current) => {\n        (acc[current.aspectId] ||= []).push(current);\n        return acc;\n      }, {});\n      return { id: result.id, artifacts };\n    });\n  }\n\n  private async saveFilesInFileSystemIfAsked(artifactListPerId: ArtifactListPerId[]) {\n    const outDir = this.options.outDir;\n    if (!outDir) {\n      return;\n    }\n    // @todo: optimize this to first import all missing hashes.\n    await pMapSeries(artifactListPerId, async ({ id, artifacts }) => {\n      const vinyls = await artifacts.getVinylsAndImportIfMissing(id._legacy, this.scope.legacyScope);\n      // make sure the component-dir is just one dir. without this, every slash in the component-id will create a new dir.\n      const idAsFilename = filenamify(id.toStringWithoutVersion(), { replacement: '_' });\n      const compPath = path.join(outDir, idAsFilename);\n      await Promise.all(vinyls.map((vinyl) => fs.outputFile(path.join(compPath, vinyl.path), vinyl.contents)));\n    });\n  }\n\n  private artifactsObjectsToExtractorResults(artifactListPerId: ArtifactListPerId[]): ExtractorResult[] {\n    return artifactListPerId.map(({ id, artifacts }) => {\n      const results: ExtractorArtifactResult[] = artifacts.map((artifact) => {\n        return {\n          artifactName: artifact.name,\n          aspectId: artifact.task.aspectId,\n          taskName: artifact.task.name || artifact.generatedBy,\n          files: artifact.files.refs.map((ref) => ref.relativePath),\n        };\n      });\n      return {\n        id,\n        artifacts: results,\n      };\n    });\n  }\n\n  private filterByOptions(artifactListPerId: ArtifactListPerId[]) {\n    const { aspect, task, files } = this.options;\n    let filteredArtifacts: Artifact[] = [];\n\n    artifactListPerId.forEach((item) => {\n      filteredArtifacts = item.artifacts.filter((artifact) => {\n        if (aspect && aspect !== artifact.task.aspectId) return false;\n        if (task && task !== artifact.task.name) return false;\n        return true;\n      });\n      if (files) {\n        filteredArtifacts = item.artifacts\n          .map((artifact) => {\n            const refs = artifact.files.refs.filter((ref) => minimatch(ref.relativePath, files));\n            return new Artifact(artifact.def, new ArtifactFiles([], [], refs), artifact.task);\n          })\n          // remove artifacts with no files\n          .filter((artifact) => !artifact.isEmpty());\n      }\n      item.artifacts = ArtifactList.fromArray(filteredArtifacts);\n    });\n  }\n}\n"],"mappings":"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"}