{"version":3,"names":["DEFAULT_CONTEXT","ArtifactFactory","resolvePaths","root","def","patternsFlattened","flatten","globPatterns","paths","globby","sync","cwd","getArtifactContextPath","context","component","artifactContext","getArtifactContext","capsulePath","capsuleNetwork","graphCapsules","getCapsule","id","path","CapsuleNotFound","capsulesRootDir","createFromComponent","task","contextPath","rootDir","getRootDir","length","undefined","FsArtifact","ArtifactFiles","getStorageResolver","storageResolver","DefaultResolver","toComponentMap","artifactMap","ComponentMap","as","components","toString","artifacts","filter","targetId","map","artifact","ArtifactList","fromArray","join","generate","defs","tupleArr","forEach","capsuleDir","push"],"sources":["artifact-factory.ts"],"sourcesContent":["import { join } from 'path';\nimport globby from 'globby';\nimport { flatten } from 'lodash';\nimport { ArtifactFiles } from '@teambit/legacy/dist/consumer/component/sources/artifact-files';\nimport { Component, ComponentMap } from '@teambit/component';\nimport { ArtifactDefinition } from './artifact-definition';\nimport { DefaultResolver } from '../storage';\nimport { ArtifactList } from './artifact-list';\nimport type { BuildContext, BuildTask } from '../build-task';\nimport { CapsuleNotFound } from '../exceptions';\nimport { FsArtifact } from './fs-artifact';\n\nexport const DEFAULT_CONTEXT = 'component';\n\nexport type ArtifactMap = ComponentMap<ArtifactList<FsArtifact>>;\n\nexport class ArtifactFactory {\n  resolvePaths(root: string, def: ArtifactDefinition): string[] {\n    const patternsFlattened = flatten(def.globPatterns);\n    const paths = globby.sync(patternsFlattened, { cwd: root });\n    return paths;\n  }\n\n  private getArtifactContextPath(context: BuildContext, component: Component, def: ArtifactDefinition) {\n    const artifactContext = this.getArtifactContext(def);\n    if (artifactContext === 'component') {\n      const capsulePath = context.capsuleNetwork.graphCapsules.getCapsule(component.id)?.path;\n      if (!capsulePath) throw new CapsuleNotFound(component.id);\n      return capsulePath;\n    }\n\n    return context.capsuleNetwork.capsulesRootDir;\n  }\n\n  private getArtifactContext(def: ArtifactDefinition) {\n    return def.context || DEFAULT_CONTEXT;\n  }\n\n  createFromComponent(\n    context: BuildContext,\n    component: Component,\n    def: ArtifactDefinition,\n    task: BuildTask\n  ): FsArtifact | undefined {\n    const contextPath = this.getArtifactContextPath(context, component, def);\n    const rootDir = this.getRootDir(contextPath, def);\n    const paths = this.resolvePaths(rootDir, def);\n    if (!paths || !paths.length) {\n      return undefined;\n    }\n    return new FsArtifact(def, new ArtifactFiles(paths), task, rootDir);\n  }\n\n  private getStorageResolver(def: ArtifactDefinition) {\n    return def.storageResolver || new DefaultResolver();\n  }\n\n  private toComponentMap(context: BuildContext, artifactMap: [string, FsArtifact][]) {\n    return ComponentMap.as<ArtifactList<FsArtifact>>(context.components, (component) => {\n      const id = component.id.toString();\n      const artifacts = artifactMap.filter(([targetId]) => targetId === id).map(([, artifact]) => artifact);\n\n      return ArtifactList.fromArray(artifacts);\n    });\n  }\n\n  getRootDir(rootDir: string, def: ArtifactDefinition) {\n    if (!def.rootDir) return rootDir;\n    return join(rootDir, def.rootDir);\n  }\n\n  /**\n   * generate artifacts from a build context according to the spec defined in the artifact definitions.\n   */\n  generate(context: BuildContext, defs: ArtifactDefinition[], task: BuildTask): ComponentMap<ArtifactList<FsArtifact>> {\n    const tupleArr: [string, FsArtifact][] = [];\n\n    defs.forEach((def) => {\n      const artifactContext = this.getArtifactContext(def);\n      if (artifactContext === 'env') {\n        const capsuleDir = context.capsuleNetwork.capsulesRootDir;\n        const rootDir = this.getRootDir(capsuleDir, def);\n        const paths = this.resolvePaths(rootDir, def);\n        if (paths && paths.length) {\n          const artifact = new FsArtifact(def, new ArtifactFiles(this.resolvePaths(rootDir, def)), task, rootDir);\n\n          return context.components.forEach((component) => {\n            tupleArr.push([component.id.toString(), artifact]);\n          });\n        }\n      }\n\n      return context.components.forEach((component) => {\n        const artifact = this.createFromComponent(context, component, def, task);\n        if (artifact) {\n          tupleArr.push([component.id.toString(), artifact]);\n        }\n      });\n    });\n\n    return this.toComponentMap(context, tupleArr);\n  }\n}\n"],"mappings":"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"}