import { ScopeMain } from '@teambit/scope';
import { ComponentID } from '@teambit/component-id';
import { BuilderMain } from '../builder.main.runtime';
import { ArtifactsOpts } from './artifacts.cmd';
export declare type ExtractorResult = {
    id: ComponentID;
    artifacts: ExtractorArtifactResult[];
};
export declare type ExtractorArtifactResult = {
    artifactName: string;
    aspectId: string;
    taskName: string;
    files: string[];
};
export declare type ExtractorResultGrouped = {
    id: ComponentID;
    artifacts: {
        [aspectId: string]: ExtractorArtifactResult[];
    };
};
export declare class ArtifactExtractor {
    private scope;
    private builder;
    private pattern;
    private options;
    constructor(scope: ScopeMain, builder: BuilderMain, pattern: string, options: ArtifactsOpts);
    list(): Promise<ExtractorResult[]>;
    groupResultsByAspect(extractorResult: ExtractorResult[]): {
        id: ComponentID;
        artifacts: {};
    }[];
    private saveFilesInFileSystemIfAsked;
    private artifactsObjectsToExtractorResults;
    private filterByOptions;
}
