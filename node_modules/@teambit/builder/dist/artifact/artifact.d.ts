import type { ArtifactFiles, ArtifactObject } from '@teambit/legacy/dist/consumer/component/sources/artifact-files';
import type { TaskDescriptor } from '../build-task';
import type { ArtifactDefinition } from './artifact-definition';
export declare class Artifact {
    /**
     * definition of the artifact.
     */
    readonly def: ArtifactDefinition;
    readonly files: ArtifactFiles;
    /**
     * the declaring task.
     */
    readonly task: TaskDescriptor;
    /**
     * timestamp of the artifact creation.
     */
    readonly timestamp: number;
    constructor(
    /**
     * definition of the artifact.
     */
    def: ArtifactDefinition, files: ArtifactFiles, 
    /**
     * the declaring task.
     */
    task: TaskDescriptor, 
    /**
     * timestamp of the artifact creation.
     */
    timestamp?: number);
    get storage(): string;
    get storageResolver(): import("..").ArtifactStorageResolver;
    /**
     * name of the artifact.
     */
    get name(): string;
    /**
     * description of the artifact.
     */
    get description(): string | undefined;
    /**
     * aspect id (string) that generated the artifact
     */
    get generatedBy(): string;
    isEmpty(): boolean;
    /**
     * archive all artifact files into a tar.
     */
    tar(): void;
    toObject(): ArtifactObject;
    static fromArtifactObject(object: ArtifactObject): Artifact;
}
