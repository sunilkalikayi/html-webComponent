{"version":3,"names":["YarnPackageManager","constructor","depResolver","logger","install","rootDir","manifests","componentDirectoryMap","installOptions","setStatusLine","rootDirPath","npath","toPortablePath","cacheDir","getCacheFolder","cacheRootDir","config","computeConfiguration","nodeLinker","packageManagerConfigRootDir","project","Project","configuration","setupResolutions","rootComponentsForCapsules","useNesting","overrides","_createLocalDirectoryOverrides","workspaceManifest","omit","rootWs","createWorkspace","rootComponents","manifest","installConfig","hoistingLimits","createRootComponentsDir","Object","entries","reduce","acc","dir","dependencies","peerDependencies","updateManifestsForInstallationInWorkspaceCapsules","extendWithComponentsFromDir","debug","workspacesP","keys","map","path","workspace","workspaces","Promise","all","workspacesIdents","workspaceIdentHash","locator","identHash","cwd","overrideInternalWorkspaceParams","push","setupWorkspaces","cache","Cache","find","installReport","StreamReport","start","stdout","process","report","persistProject","persistLockfile","hasErrors","exit","exitCode","consoleSuccess","Array","from","hashMap","forEach","component","name","getPackageName","relative","getPackageJsonPath","packageJsonPath","join","backupPackageJsons","result","rootPackageJsonPath","getFileToBackup","componentsBackupsP","toArray","file","getComponentPackageJsonToBackup","restorePackageJsons","backupJsons","promises","exists","fs","pathExists","remove","undefined","writeFile","existingFile","readFile","resolve","wsPath","ws","Workspace","setup","identity","structUtils","parseIdent","version","computeDeps","devDependencies","resolutions","convertOverridesToResolutions","ident","makeIdent","scope","makeLocator","reference","anchoredDescriptor","makeDescriptor","WorkspaceResolver","protocol","relativeCwd","anchoredLocator","workspacesByCwd","Map","workspacesByIdent","dup","get","Error","set","getScopedRegistries","registries","scopedRegistries","scopes","scopeName","regDef","authProp","getAuthProp","npmRegistryServer","uri","npmAlwaysAuth","alwaysAuth","keyName","value","registry","token","baseToken","baseDir","userHome","cacheFolder","options","getRegistries","proxyConfig","getProxyConfig","networkConfig","getNetworkConfig","pluginConfig","getPluginConfiguration","startingCwd","Configuration","defaultRegistry","defaultAuthProp","data","installStatePath","pnpDataPath","npmScopes","virtualFolder","httpProxy","httpsProxy","enableStrictSsl","strictSSL","globalFolder","nmSelfReferences","use","rawDeps","packageName","resolveRemoteVersion","parsedPackage","parsePackageName","parsedVersion","versionType","versionSelectorType","type","isSemver","npmPlugin","resolvers","_NpmRemapResolver","NpmSemverResolver","NpmTagResolver","resolver","range","LightReport","descriptor","resolveOptions","candidates","getCandidates","parsedRange","parseRange","selector","getInjectedDirs","componentDir","modulesDir","yarnStateContent","err","code","yarnState","YAML","parse","injectedDirs","key","locations","startsWith","location","supportsDedupingOnExistingRoot","parsedOverrides","parseOverrides","override","pattern","parentPkg","toYarnResolutionSelector","targetPkg","newPref","pref","fullName","description","pkgJsonPath","pkgJson","readJson","writeJson","spaces","defaultPeerDependencies"],"sources":["yarn.package-manager.ts"],"sourcesContent":["import parsePackageName from 'parse-package-name';\nimport {\n  extendWithComponentsFromDir,\n  InstallationContext,\n  DependencyResolverMain,\n  PackageManager,\n  PackageManagerInstallOptions,\n  Registries,\n  Registry,\n  PackageManagerResolveRemoteVersionOptions,\n  ResolvedPackageVersion,\n} from '@teambit/dependency-resolver';\nimport { ComponentMap, Component } from '@teambit/component';\nimport fs from 'fs-extra';\nimport { join, relative, resolve } from 'path';\nimport {\n  Workspace,\n  Project,\n  Configuration,\n  structUtils,\n  IdentHash,\n  Descriptor,\n  Cache,\n  StreamReport,\n  ResolveOptions,\n  LightReport,\n  WorkspaceResolver,\n} from '@yarnpkg/core';\nimport { getPluginConfiguration } from '@yarnpkg/cli';\nimport { npath, PortablePath } from '@yarnpkg/fslib';\nimport { Resolution } from '@yarnpkg/parsers';\nimport npmPlugin from '@yarnpkg/plugin-npm';\nimport { parseOverrides } from '@pnpm/parse-overrides';\nimport { omit } from 'lodash';\nimport userHome from 'user-home';\nimport { Logger } from '@teambit/logger';\nimport versionSelectorType from 'version-selector-type';\nimport YAML from 'yaml';\nimport { createRootComponentsDir } from './create-root-components-dir';\n\ntype BackupJsons = {\n  [path: string]: Buffer | undefined;\n};\n\nexport class YarnPackageManager implements PackageManager {\n  constructor(private depResolver: DependencyResolverMain, private logger: Logger) {}\n\n  async install(\n    { rootDir, manifests, componentDirectoryMap }: InstallationContext,\n    installOptions: PackageManagerInstallOptions = {}\n  ): Promise<void> {\n    this.logger.setStatusLine('installing dependencies');\n\n    const rootDirPath = npath.toPortablePath(rootDir);\n    const cacheDir = this.getCacheFolder(installOptions.cacheRootDir);\n    const config = await this.computeConfiguration(rootDirPath, cacheDir, {\n      nodeLinker: installOptions.nodeLinker,\n      packageManagerConfigRootDir: installOptions.packageManagerConfigRootDir,\n    });\n\n    const project = new Project(rootDirPath, { configuration: config });\n\n    // @ts-ignore\n    project.setupResolutions();\n    if (installOptions.rootComponentsForCapsules && !installOptions.useNesting) {\n      installOptions.overrides = {\n        ...installOptions.overrides,\n        ...this._createLocalDirectoryOverrides(rootDir, componentDirectoryMap),\n      };\n    }\n    const workspaceManifest = manifests[rootDir];\n    manifests = omit(manifests, rootDir);\n    const rootWs = await this.createWorkspace(rootDir, project, workspaceManifest, installOptions.overrides);\n    if (installOptions.rootComponents) {\n      rootWs.manifest.installConfig = {\n        hoistingLimits: 'dependencies',\n      };\n    }\n\n    if (installOptions.rootComponents) {\n      // Manifests are extended with \"wrapper components\"\n      // that group all workspace components with their dependencies and peer dependencies.\n      manifests = {\n        ...(await createRootComponentsDir({\n          depResolver: this.depResolver,\n          rootDir,\n          componentDirectoryMap,\n        })),\n        ...Object.entries(manifests).reduce((acc, [dir, manifest]) => {\n          acc[dir] = {\n            ...manifest,\n            dependencies: {\n              ...manifest.peerDependencies,\n              ...manifest['defaultPeerDependencies'], // eslint-disable-line\n              ...manifest.dependencies,\n            },\n          };\n          return acc;\n        }, {}),\n      };\n    } else if (installOptions.useNesting) {\n      manifests[rootDir] = workspaceManifest;\n      // Nesting is used for scope aspect capsules.\n      // In a capsule, all peer dependencies should be installed,\n      // so we make runtime dependencies from peer dependencies.\n      manifests[rootDir].dependencies = {\n        ...manifests[rootDir].peerDependencies,\n        ...manifests[rootDir]['defaultPeerDependencies'], // eslint-disable-line\n        ...manifests[rootDir].dependencies,\n      };\n    } else if (installOptions.rootComponentsForCapsules) {\n      await updateManifestsForInstallationInWorkspaceCapsules(manifests);\n    } else {\n      manifests = await extendWithComponentsFromDir(rootDir, manifests);\n    }\n\n    this.logger.debug(`running installation in root dir ${rootDir}`);\n    this.logger.debug('root manifest for installation', workspaceManifest);\n    this.logger.debug('components manifests for installation', manifests);\n\n    const workspacesP = Object.keys(manifests).map(async (path) => {\n      const manifest = manifests[path];\n      const workspace = await this.createWorkspace(path, project, manifest);\n      return workspace;\n    });\n\n    const workspaces = await Promise.all(workspacesP);\n\n    if (!installOptions.rootComponents && !installOptions.rootComponentsForCapsules && !installOptions.useNesting) {\n      const workspacesIdents = {};\n      for (const workspace of workspaces) {\n        const workspaceIdentHash = workspace.locator.identHash;\n        if (workspacesIdents[workspaceIdentHash]) {\n          this.logger.debug(\n            `overriding internal workspace fields to prevent duplications for workspace ${workspace.cwd}`\n          );\n          this.overrideInternalWorkspaceParams(workspace);\n        }\n        workspacesIdents[workspace.locator.identHash] = true;\n      }\n    }\n\n    if (!manifests[rootDir]) {\n      workspaces.push(rootWs);\n    }\n    this.setupWorkspaces(project, workspaces);\n\n    const cache = await Cache.find(config);\n    // const existingPackageJsons = await this.backupPackageJsons(rootDir, componentDirectoryMap);\n\n    const installReport = await StreamReport.start(\n      {\n        stdout: process.stdout,\n        configuration: config,\n      },\n      async (report) => {\n        await project.install({\n          persistProject: false,\n          cache,\n          report,\n        });\n        await project.persistLockfile();\n      }\n    );\n\n    // TODO: check if package.json and link files generation can be prevented through the yarn API or\n    // mock the files by hooking to `xfs`.\n    // see the persistProject: false above\n    // await this.restorePackageJsons(existingPackageJsons);\n\n    if (installReport.hasErrors()) process.exit(installReport.exitCode());\n\n    this.logger.consoleSuccess('installing dependencies');\n  }\n\n  /**\n   * Every component is overriden with a local directory of that component.\n   * So the component will be installed from the local directory, not from the registry.\n   */\n  private _createLocalDirectoryOverrides(\n    rootDir: string,\n    componentDirectoryMap: ComponentMap<string>\n  ): Record<string, string> {\n    const overrides = {};\n    Array.from(componentDirectoryMap.hashMap.entries()).forEach(([, [component, path]]) => {\n      const name = this.depResolver.getPackageName(component);\n      overrides[name] = `file:${relative(rootDir, path)}`;\n    });\n    return overrides;\n  }\n\n  private getPackageJsonPath(dir: string): string {\n    const packageJsonPath = join(dir, 'package.json');\n    return packageJsonPath;\n  }\n\n  private async backupPackageJsons(rootDir: string, componentDirectoryMap: ComponentMap<string>): Promise<BackupJsons> {\n    const result: BackupJsons = {};\n    const rootPackageJsonPath = this.getPackageJsonPath(rootDir);\n    result[rootPackageJsonPath] = await this.getFileToBackup(rootPackageJsonPath);\n    const componentsBackupsP = componentDirectoryMap.toArray().map(async ([component, dir]) => {\n      const { packageJsonPath, file } = await this.getComponentPackageJsonToBackup(component, dir);\n      result[packageJsonPath] = file;\n    });\n    await Promise.all(componentsBackupsP);\n    return result;\n  }\n\n  private async restorePackageJsons(backupJsons: BackupJsons): Promise<void | undefined> {\n    const promises = Object.entries(backupJsons).map(async ([packageJsonPath, file]) => {\n      const exists = await fs.pathExists(packageJsonPath);\n      // if there is no backup it means it wasn't there before and should be deleted\n      if (!file) {\n        if (exists) {\n          return fs.remove(packageJsonPath);\n        }\n        return undefined;\n      }\n      return fs.writeFile(packageJsonPath, file);\n    });\n    await Promise.all(promises);\n  }\n\n  private async getFileToBackup(packageJsonPath: string): Promise<Buffer | undefined> {\n    const exists = await fs.pathExists(packageJsonPath);\n    if (!exists) {\n      return undefined;\n    }\n    const existingFile = await fs.readFile(packageJsonPath);\n    return existingFile;\n  }\n\n  private async getComponentPackageJsonToBackup(\n    component: Component,\n    dir: string\n  ): Promise<{ packageJsonPath: string; file: Buffer | undefined }> {\n    const packageJsonPath = resolve(join(dir, 'package.json'));\n    const result = {\n      packageJsonPath,\n      file: await this.getFileToBackup(packageJsonPath),\n    };\n    return result;\n  }\n\n  private async createWorkspace(rootDir: string, project: Project, manifest: any, overrides?: Record<string, string>) {\n    const wsPath = npath.toPortablePath(rootDir);\n    const name = manifest.name || 'workspace';\n\n    const ws = new Workspace(wsPath, { project });\n    await ws.setup();\n    const identity = structUtils.parseIdent(name);\n    // const needOverrideInternal = !!ws.manifest.name && !!manifest.name;\n    ws.manifest.name = identity;\n    ws.manifest.version = manifest.version;\n    ws.manifest.dependencies = this.computeDeps(manifest.dependencies);\n    ws.manifest.devDependencies = this.computeDeps(manifest.devDependencies);\n    ws.manifest.peerDependencies = this.computeDeps(manifest.peerDependencies);\n    ws.manifest.installConfig = manifest.installConfig;\n    if (overrides) {\n      ws.manifest.resolutions = convertOverridesToResolutions(overrides);\n    }\n\n    // if (needOverrideInternal) this.overrideInternalWorkspaceParams(ws);\n\n    return ws;\n  }\n\n  /**\n   * This is used to handle cases where in the capsules dirs we have the same component with different versions\n   * The yarn ident is calculated by the manifest (package.json) name if exist\n   * in our case for the same component with different versions we will get the same ident which will result errors later.\n   * This is make sense in the original case of yarn workspace (it make sense you don't have 2 workspace with same name)\n   * However in our case it doesn't make sense.\n   * This function will make sure the ident will use the version as well\n   * @param ws\n   */\n  private overrideInternalWorkspaceParams(ws: Workspace) {\n    const ident = structUtils.makeIdent(\n      ws.manifest.name?.scope || null,\n      `${ws.manifest.name?.name}-${ws.manifest.version}`\n    );\n\n    ws.manifest.name = ident;\n\n    // @ts-expect-error: It's ok to initialize it now, even if it's readonly (setup is called right after construction)\n    ws.locator = structUtils.makeLocator(ident, ws.reference);\n\n    // @ts-expect-error: It's ok to initialize it now, even if it's readonly (setup is called right after construction)\n    ws.anchoredDescriptor = structUtils.makeDescriptor(ws.locator, `${WorkspaceResolver.protocol}${ws.relativeCwd}`);\n\n    // @ts-expect-error: It's ok to initialize it now, even if it's readonly (setup is called right after construction)\n    ws.anchoredLocator = structUtils.makeLocator(ws.locator, `${WorkspaceResolver.protocol}${ws.relativeCwd}`);\n  }\n\n  private setupWorkspaces(project: Project, workspaces: Workspace[]) {\n    project.workspaces = [];\n    project.workspacesByCwd = new Map();\n    project.workspacesByIdent = new Map();\n\n    workspaces.forEach((workspace) => {\n      const dup = project.workspacesByIdent.get(workspace.locator.identHash);\n      if (typeof dup !== `undefined`) {\n        throw new Error(`Duplicate workspace name: ${workspace.cwd} conflicts with ${dup.cwd}`);\n      }\n\n      project.workspaces.push(workspace);\n      project.workspacesByCwd.set(workspace.cwd, workspace);\n      project.workspacesByIdent.set(workspace.locator.identHash, workspace);\n    });\n  }\n\n  private async getScopedRegistries(registries: Registries) {\n    const scopedRegistries = Object.keys(registries.scopes).reduce((acc, scopeName) => {\n      const regDef = registries.scopes[scopeName];\n      const authProp = this.getAuthProp(regDef);\n      acc[scopeName] = {\n        npmRegistryServer: regDef.uri,\n        npmAlwaysAuth: regDef.alwaysAuth,\n      };\n      if (authProp) {\n        acc[scopeName][authProp.keyName] = authProp.value;\n      }\n\n      return acc;\n    }, {});\n    return scopedRegistries;\n  }\n\n  private getAuthProp(registry: Registry) {\n    if (registry.token) {\n      return {\n        keyName: 'npmAuthToken',\n        value: registry.token,\n      };\n    }\n    if (registry.baseToken) {\n      return {\n        keyName: 'npmAuthIdent',\n        value: registry.baseToken,\n      };\n    }\n    return undefined;\n  }\n\n  private getCacheFolder(baseDir: string = userHome) {\n    return `${baseDir}/.yarn/cache`;\n  }\n\n  // TODO: implement this to automate configuration.\n  private async computeConfiguration(\n    rootDirPath: PortablePath,\n    cacheFolder: string,\n    options: {\n      nodeLinker?: 'hoisted' | 'isolated';\n      packageManagerConfigRootDir?: string;\n    }\n  ): Promise<Configuration> {\n    const registries = await this.depResolver.getRegistries();\n    const proxyConfig = await this.depResolver.getProxyConfig();\n    const networkConfig = await this.depResolver.getNetworkConfig();\n    const pluginConfig = getPluginConfiguration();\n    let startingCwd: PortablePath;\n    if (options.packageManagerConfigRootDir) {\n      startingCwd = npath.toPortablePath(options.packageManagerConfigRootDir);\n    } else {\n      startingCwd = rootDirPath;\n    }\n    const config = await Configuration.find(startingCwd, pluginConfig);\n    const scopedRegistries = await this.getScopedRegistries(registries);\n    const defaultRegistry = registries.defaultRegistry;\n    const defaultAuthProp = this.getAuthProp(defaultRegistry);\n\n    const data = {\n      nodeLinker: options.nodeLinker === 'isolated' ? 'pnpm' : 'node-modules',\n      installStatePath: `${rootDirPath}/.yarn/install-state.gz`,\n      cacheFolder,\n      pnpDataPath: `${rootDirPath}/.pnp.meta.json`,\n      npmScopes: scopedRegistries,\n      virtualFolder: `${rootDirPath}/.yarn/__virtual__`,\n      npmRegistryServer: defaultRegistry.uri || 'https://registry.yarnpkg.com',\n      npmAlwaysAuth: defaultRegistry.alwaysAuth,\n      httpProxy: proxyConfig?.httpProxy,\n      httpsProxy: proxyConfig?.httpsProxy,\n      enableStrictSsl: networkConfig?.strictSSL,\n      // enableInlineBuilds: true,\n      globalFolder: `${userHome}/.yarn/global`,\n      // We need to disable self-references as say create circular symlinks.\n      nmSelfReferences: false,\n\n      // TODO: check about support for the following: (see more here - https://github.com/yarnpkg/berry/issues/1434#issuecomment-801449010)\n      // ca?: string;\n      // cert?: string;\n      // key?: string;\n      // noProxy?: boolean | string;\n    };\n\n    if (defaultAuthProp) {\n      data[defaultAuthProp.keyName] = defaultAuthProp.value;\n    }\n    // TODO: node-modules is hardcoded now until adding support for pnp.\n    config.use('<bit>', data, rootDirPath, {});\n\n    return config;\n  }\n\n  private computeDeps(rawDeps?: { [key: string]: string }): Map<IdentHash, Descriptor> {\n    const map = new Map<IdentHash, Descriptor>();\n    if (!rawDeps) return map;\n\n    Object.keys(rawDeps).forEach((packageName) => {\n      const ident = structUtils.parseIdent(packageName);\n      map.set(ident.identHash, structUtils.makeDescriptor(ident, rawDeps[packageName]));\n    });\n\n    return map;\n  }\n\n  async resolveRemoteVersion(\n    packageName: string,\n    options: PackageManagerResolveRemoteVersionOptions\n  ): Promise<ResolvedPackageVersion> {\n    const parsedPackage = parsePackageName(packageName);\n    const parsedVersion = parsedPackage.version;\n    const versionType = parsedVersion && versionSelectorType(parsedVersion)?.type;\n    if (versionType === 'version') {\n      return {\n        packageName: parsedPackage.name,\n        version: parsedVersion,\n        isSemver: true,\n      };\n    }\n    if (!npmPlugin.resolvers) {\n      throw new Error('npm resolvers for yarn API not found');\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [_NpmRemapResolver, NpmSemverResolver, NpmTagResolver] = npmPlugin.resolvers;\n    let resolver = new NpmSemverResolver();\n    const ident = structUtils.parseIdent(parsedPackage.name);\n    let range = 'npm:*';\n    const rootDirPath = npath.toPortablePath(options.rootDir);\n    const cacheDir = this.getCacheFolder(options.cacheRootDir);\n    const config = await this.computeConfiguration(rootDirPath, cacheDir, {\n      packageManagerConfigRootDir: options.packageManagerConfigRootDir,\n    });\n\n    const project = new Project(rootDirPath, { configuration: config });\n    const report = new LightReport({ configuration: config, stdout: process.stdout });\n\n    // Handle cases when the version is a dist tag like dev / latest for example bit install lodash@latest\n    if (versionType === 'tag') {\n      resolver = new NpmTagResolver();\n      range = `npm:${parsedPackage.version}`;\n    }\n    const descriptor = structUtils.makeDescriptor(ident, range);\n\n    // @ts-ignore\n    project.setupResolutions();\n    const resolveOptions: ResolveOptions = {\n      project,\n      resolver,\n      report,\n    };\n    // const candidates = await resolver.getCandidates(descriptor, new Map(), resolveOptions);\n    const candidates = await resolver.getCandidates(descriptor, new Map(), resolveOptions);\n    const parsedRange = structUtils.parseRange(candidates[0].reference);\n    const version = parsedRange.selector;\n    return {\n      packageName: parsedPackage.name,\n      version,\n      isSemver: true,\n    };\n  }\n\n  async getInjectedDirs(rootDir: string, componentDir: string, packageName: string): Promise<string[]> {\n    const modulesDir = join(rootDir, 'node_modules');\n    relative(modulesDir, componentDir);\n    let yarnStateContent!: string;\n    try {\n      yarnStateContent = await fs.readFile(join(modulesDir, '.yarn-state.yml'), 'utf-8');\n    } catch (err: any) {\n      if (err.code === 'ENOENT') return [];\n    }\n    const yarnState = YAML.parse(yarnStateContent) as Record<string, { locations: string[] }>;\n    const injectedDirs: string[] = [];\n    for (const [key, { locations }] of Object.entries(yarnState)) {\n      if (key.startsWith(`${packageName}@`) || key.startsWith(`${packageName}__root@`)) {\n        for (const location of locations) {\n          injectedDirs.push(location);\n        }\n      }\n    }\n    return injectedDirs;\n  }\n\n  supportsDedupingOnExistingRoot(): boolean {\n    return true;\n  }\n}\n\nfunction convertOverridesToResolutions(\n  overrides: Record<string, string>\n): Array<{ pattern: Resolution; reference: string }> {\n  const parsedOverrides = parseOverrides(overrides);\n  return parsedOverrides.map((override) => ({\n    pattern: {\n      from: override.parentPkg ? toYarnResolutionSelector(override.parentPkg) : undefined,\n      descriptor: toYarnResolutionSelector(override.targetPkg),\n    },\n    reference: override.newPref,\n  }));\n}\n\nfunction toYarnResolutionSelector({ name, pref }: { name: string; pref?: string }) {\n  return {\n    fullName: name,\n    description: pref,\n  };\n}\n\n/**\n * This function prepares the component manifests for installation inside a capsule.\n * Inside a capsule, all peer dependencies of the component should be installed.\n * So peer dependencies are added to the manifest as runtime dependencies.\n * Also, the package.json files are update to contain other component dependencies\n * in dependencies as local \"file:\" dependencies.\n */\nasync function updateManifestsForInstallationInWorkspaceCapsules(manifests: { [key: string]: any }) {\n  await Promise.all(\n    Object.entries(manifests).map(async ([dir, manifest]) => {\n      const pkgJsonPath = join(dir, 'package.json');\n      const pkgJson = await fs.readJson(pkgJsonPath);\n      // We need to write the package.json files because they need to contain the workspace dependencies.\n      // When packages are installed via the \"file:\" protocol, Yarn reads their package.json files\n      // from the file system even if they are from the workspace.\n      await fs.writeJson(\n        pkgJsonPath,\n        {\n          ...pkgJson,\n          dependencies: manifest.dependencies,\n        },\n        { spaces: 2 }\n      );\n      manifest.dependencies = {\n        ...manifest.peerDependencies,\n        ...manifest.defaultPeerDependencies,\n        ...manifest.dependencies,\n      };\n      manifest.installConfig = {\n        hoistingLimits: 'workspaces',\n      };\n    })\n  );\n}\n"],"mappings":"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"}