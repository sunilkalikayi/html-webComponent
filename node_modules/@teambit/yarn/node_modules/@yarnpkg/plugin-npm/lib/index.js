"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.npmPublishUtils = exports.npmHttpUtils = exports.npmConfigUtils = void 0;
const tslib_1 = require("tslib");
const core_1 = require("@yarnpkg/core");
const NpmHttpFetcher_1 = require("./NpmHttpFetcher");
const NpmRemapResolver_1 = require("./NpmRemapResolver");
const NpmSemverFetcher_1 = require("./NpmSemverFetcher");
const NpmSemverResolver_1 = require("./NpmSemverResolver");
const NpmTagResolver_1 = require("./NpmTagResolver");
const npmConfigUtils = tslib_1.__importStar(require("./npmConfigUtils"));
exports.npmConfigUtils = npmConfigUtils;
const npmHttpUtils = tslib_1.__importStar(require("./npmHttpUtils"));
exports.npmHttpUtils = npmHttpUtils;
const npmPublishUtils = tslib_1.__importStar(require("./npmPublishUtils"));
exports.npmPublishUtils = npmPublishUtils;
const authSettings = {
    npmAlwaysAuth: {
        description: `URL of the selected npm registry (note: npm enterprise isn't supported)`,
        type: core_1.SettingsType.BOOLEAN,
        default: false,
    },
    npmAuthIdent: {
        description: `Authentication identity for the npm registry (_auth in npm and yarn v1)`,
        type: core_1.SettingsType.SECRET,
        default: null,
    },
    npmAuthToken: {
        description: `Authentication token for the npm registry (_authToken in npm and yarn v1)`,
        type: core_1.SettingsType.SECRET,
        default: null,
    },
};
const registrySettings = {
    npmAuditRegistry: {
        description: `Registry to query for audit reports`,
        type: core_1.SettingsType.STRING,
        default: null,
    },
    npmPublishRegistry: {
        description: `Registry to push packages to`,
        type: core_1.SettingsType.STRING,
        default: null,
    },
    npmRegistryServer: {
        description: `URL of the selected npm registry (note: npm enterprise isn't supported)`,
        type: core_1.SettingsType.STRING,
        default: `https://registry.yarnpkg.com`,
    },
};
const plugin = {
    configuration: {
        ...authSettings,
        ...registrySettings,
        npmScopes: {
            description: `Settings per package scope`,
            type: core_1.SettingsType.MAP,
            valueDefinition: {
                description: ``,
                type: core_1.SettingsType.SHAPE,
                properties: {
                    ...authSettings,
                    ...registrySettings,
                },
            },
        },
        npmRegistries: {
            description: `Settings per registry`,
            type: core_1.SettingsType.MAP,
            normalizeKeys: npmConfigUtils.normalizeRegistry,
            valueDefinition: {
                description: ``,
                type: core_1.SettingsType.SHAPE,
                properties: {
                    ...authSettings,
                },
            },
        },
    },
    fetchers: [
        NpmHttpFetcher_1.NpmHttpFetcher,
        NpmSemverFetcher_1.NpmSemverFetcher,
    ],
    resolvers: [
        NpmRemapResolver_1.NpmRemapResolver,
        NpmSemverResolver_1.NpmSemverResolver,
        NpmTagResolver_1.NpmTagResolver,
    ],
};
// eslint-disable-next-line arca/no-default-export
exports.default = plugin;
