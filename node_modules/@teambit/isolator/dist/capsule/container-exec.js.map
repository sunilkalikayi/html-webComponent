{"version":3,"names":["ContainerExec","EventEmitter","constructor","_code","DuplexBufferStream","setStatus","status","emit","code","inspect","Promise","resolve","running","pid","abort","Error"],"sources":["container-exec.ts"],"sourcesContent":["import { DuplexBufferStream, Exec, ExecStatus } from '@teambit/capsule';\nimport { EventEmitter } from 'events';\n\nexport default class ContainerExec extends EventEmitter implements Exec {\n  constructor(private _code: number = 0) {\n    super();\n  }\n\n  stdout: DuplexBufferStream = new DuplexBufferStream();\n  stderr: DuplexBufferStream = new DuplexBufferStream();\n  stdin: DuplexBufferStream = new DuplexBufferStream();\n\n  setStatus(status: number): void {\n    this._code = status;\n    this.emit('close');\n  }\n\n  get code(): number {\n    return this._code;\n  }\n\n  inspect(): Promise<ExecStatus> {\n    return Promise.resolve({\n      running: true,\n      pid: 1,\n    });\n  }\n  abort(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEe,MAAMA,aAAa,SAASC,sBAAY,CAAiB;EACtEC,WAAW,CAASC,KAAa,GAAG,CAAC,EAAE;IACrC,KAAK,EAAE;IAAC,KADUA,KAAa,GAAbA,KAAa;IAAA,gDAIJ,KAAIC,6BAAkB,GAAE;IAAA,gDACxB,KAAIA,6BAAkB,GAAE;IAAA,+CACzB,KAAIA,6BAAkB,GAAE;EAJpD;EAMAC,SAAS,CAACC,MAAc,EAAQ;IAC9B,IAAI,CAACH,KAAK,GAAGG,MAAM;IACnB,IAAI,CAACC,IAAI,CAAC,OAAO,CAAC;EACpB;EAEA,IAAIC,IAAI,GAAW;IACjB,OAAO,IAAI,CAACL,KAAK;EACnB;EAEAM,OAAO,GAAwB;IAC7B,OAAOC,OAAO,CAACC,OAAO,CAAC;MACrBC,OAAO,EAAE,IAAI;MACbC,GAAG,EAAE;IACP,CAAC,CAAC;EACJ;EACAC,KAAK,GAAkB;IACrB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;AACF;AAAC"}