"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WebpackBitReporterPlugin = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _events() {
  const data = require("../events");
  _events = function () {
    return data;
  };
  return data;
}
function _webpack() {
  const data = require("../webpack.aspect");
  _webpack = function () {
    return data;
  };
  return data;
}
const PLUGIN_NAME = 'webpack-compiler-started-plugin';

/**
 * Monitors Webpack's compilation, and updates progress to Bit
 */
class WebpackBitReporterPlugin {
  // TODO: add plugin type from webpack and implement it

  constructor({
    options
  }) {
    (0, _defineProperty2().default)(this, "pubsub", void 0);
    (0, _defineProperty2().default)(this, "devServerID", void 0);
    this.pubsub = options.pubsub;
    this.devServerID = options.devServerID;
  }
  apply(compiler) {
    // "Called before a new compilation is created."
    compiler.hooks.compile.tap(PLUGIN_NAME, () => {
      const event = new (_events().WebpackCompilationStartedEvent)(Date.now(), {
        devServerID: this.devServerID
      });
      this.pubsub.pub(_webpack().WebpackAspect.id, event);
    });

    // "Executed when the compilation has completed."
    compiler.hooks.done.tap(PLUGIN_NAME, stats => {
      const event = new (_events().WebpackCompilationDoneEvent)(Date.now(), stats, this.devServerID);
      this.pubsub.pub(_webpack().WebpackAspect.id, event);
    });
  }
}
exports.WebpackBitReporterPlugin = WebpackBitReporterPlugin;

//# sourceMappingURL=webpack-bit-reporter-plugin.js.map