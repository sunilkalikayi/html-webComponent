"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.regexp.exec.js");
require("core-js/modules/es.string.replace.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getExposedRules = getExposedRules;
function _camelcase() {
  const data = _interopRequireDefault(require("camelcase"));
  _camelcase = function () {
    return data;
  };
  return data;
}
require("expose-loader");
function _webpackModules() {
  const data = require("@teambit/webpack.modules.generate-expose-loaders");
  _webpackModules = function () {
    return data;
  };
  return data;
}
function _lodash() {
  const data = require("lodash");
  _lodash = function () {
    return data;
  };
  return data;
}
function _resolvePeer() {
  const data = require("./resolve-peer");
  _resolvePeer = function () {
    return data;
  };
  return data;
}
function getExposedRules(peers, logger, hostRootDir) {
  const loaderPath = require.resolve('expose-loader');
  const depsEntries = peers.map(peer => {
    const resolvedPath = (0, _resolvePeer().resolvePeerToFile)(peer, logger, hostRootDir);
    if (!resolvedPath) return undefined;
    return {
      path: resolvedPath,
      globalName: (0, _camelcase().default)(peer.replace('@', '').replace('/', '-'), {
        pascalCase: true
      })
    };
  });
  return (0, _webpackModules().generateExposeLoaders)((0, _lodash().compact)(depsEntries), {
    loaderPath
  });
}

//# sourceMappingURL=get-exposed-rules.js.map