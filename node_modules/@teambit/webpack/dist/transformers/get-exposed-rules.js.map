{"version":3,"names":["getExposedRules","peers","logger","hostRootDir","loaderPath","require","resolve","depsEntries","map","peer","resolvedPath","resolvePeerToFile","undefined","path","globalName","camelcase","replace","pascalCase","generateExposeLoaders","compact"],"sources":["get-exposed-rules.ts"],"sourcesContent":["import camelcase from 'camelcase';\nimport 'expose-loader';\nimport { Logger } from '@teambit/logger';\nimport { generateExposeLoaders } from '@teambit/webpack.modules.generate-expose-loaders';\nimport { compact } from 'lodash';\nimport { resolvePeerToFile } from './resolve-peer';\n\nexport function getExposedRules(peers: string[], logger: Logger, hostRootDir?: string) {\n  const loaderPath = require.resolve('expose-loader');\n  const depsEntries = peers.map((peer) => {\n    const resolvedPath = resolvePeerToFile(peer, logger, hostRootDir);\n    if (!resolvedPath) return undefined;\n    return {\n      path: resolvedPath,\n      globalName: camelcase(peer.replace('@', '').replace('/', '-'), { pascalCase: true }),\n    };\n  });\n  return generateExposeLoaders(compact(depsEntries), { loaderPath });\n}\n"],"mappings":";;;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEO,SAASA,eAAe,CAACC,KAAe,EAAEC,MAAc,EAAEC,WAAoB,EAAE;EACrF,MAAMC,UAAU,GAAGC,OAAO,CAACC,OAAO,CAAC,eAAe,CAAC;EACnD,MAAMC,WAAW,GAAGN,KAAK,CAACO,GAAG,CAAEC,IAAI,IAAK;IACtC,MAAMC,YAAY,GAAG,IAAAC,gCAAiB,EAACF,IAAI,EAAEP,MAAM,EAAEC,WAAW,CAAC;IACjE,IAAI,CAACO,YAAY,EAAE,OAAOE,SAAS;IACnC,OAAO;MACLC,IAAI,EAAEH,YAAY;MAClBI,UAAU,EAAE,IAAAC,oBAAS,EAACN,IAAI,CAACO,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;QAAEC,UAAU,EAAE;MAAK,CAAC;IACrF,CAAC;EACH,CAAC,CAAC;EACF,OAAO,IAAAC,uCAAqB,EAAC,IAAAC,iBAAO,EAACZ,WAAW,CAAC,EAAE;IAAEH;EAAW,CAAC,CAAC;AACpE"}