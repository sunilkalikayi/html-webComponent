{"version":3,"names":["resolvePeerToDirOrFile","peerName","logger","hostRootDir","resolved","options","paths","process","cwd","__dirname","unshift","realpathSync","require","resolve","folder","findRoot","e","warn","resolvePeerToFile","peer","dirOrFile","undefined","resolver","createResolver","resolvedFile","resolveSync","myResolver","ResolverFactory","fileSystem","CachedInputFileSystem","fs","useSyncFileSystemCalls","mainFields"],"sources":["resolve-peer.ts"],"sourcesContent":["import fs, { realpathSync } from 'fs';\nimport { ResolverFactory, CachedInputFileSystem } from 'enhanced-resolve';\nimport findRoot from 'find-root';\nimport { Logger } from '@teambit/logger';\n\n/**\n * Get the package folder, and in case it's not found get the resolved file path\n * @param peerName\n * @returns\n */\nexport function resolvePeerToDirOrFile(peerName: string, logger: Logger, hostRootDir?: string): string | undefined {\n  let resolved;\n  try {\n    const options = {\n      // resolve the host root dir to its real location, as require.resolve is preserve symlink, so we get wrong result otherwise\n      paths: [process.cwd(), __dirname],\n    };\n    if (hostRootDir) {\n      // resolve the host root dir to its real location, as require.resolve is preserve symlink, so we get wrong result otherwise\n      options.paths.unshift(realpathSync(hostRootDir));\n    }\n\n    resolved = require.resolve(peerName, options);\n    const folder = findRoot(resolved);\n    return folder;\n  } catch (e) {\n    if (resolved) {\n      logger.warn(`Couldn't find root dir for \"${peerName}\" from path \"${resolved}\" to add it as webpack alias`);\n    } else {\n      logger.warn(`Couldn't resolve \"${peerName}\" to add it as webpack alias`);\n    }\n    return resolved;\n  }\n}\n\n/**\n * Make sure to resolve the peer path correctly\n * we first resolve it to its dir (to be aligned with the aliases transformer)\n * Then we resolve it to specific file, using enhanced resolve to make sure we resolve it using the correct main fields order\n * @param peer\n */\nexport function resolvePeerToFile(peer: string, logger: Logger, hostRootDir?: string): string | undefined {\n  const dirOrFile = resolvePeerToDirOrFile(peer, logger, hostRootDir);\n  if (!dirOrFile) return undefined;\n  const resolver = createResolver();\n  const resolvedFile = resolver.resolveSync({}, '', dirOrFile);\n  return resolvedFile;\n}\n\n/**\n * Generate a resolver that will read first the module field then the main field\n * to make it compatible with webpack behavior\n * @returns\n */\nfunction createResolver() {\n  // create a resolver\n  const myResolver = ResolverFactory.createResolver({\n    fileSystem: new CachedInputFileSystem(fs, 4000),\n    useSyncFileSystemCalls: true,\n    mainFields: ['browser', 'module', 'main'],\n  });\n  return myResolver;\n}\n"],"mappings":";;;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAiC;AAAA;AAGjC;AACA;AACA;AACA;AACA;AACO,SAASA,sBAAsB,CAACC,QAAgB,EAAEC,MAAc,EAAEC,WAAoB,EAAsB;EACjH,IAAIC,QAAQ;EACZ,IAAI;IACF,MAAMC,OAAO,GAAG;MACd;MACAC,KAAK,EAAE,CAACC,OAAO,CAACC,GAAG,EAAE,EAAEC,SAAS;IAClC,CAAC;IACD,IAAIN,WAAW,EAAE;MACf;MACAE,OAAO,CAACC,KAAK,CAACI,OAAO,CAAC,IAAAC,kBAAY,EAACR,WAAW,CAAC,CAAC;IAClD;IAEAC,QAAQ,GAAGQ,OAAO,CAACC,OAAO,CAACZ,QAAQ,EAAEI,OAAO,CAAC;IAC7C,MAAMS,MAAM,GAAG,IAAAC,mBAAQ,EAACX,QAAQ,CAAC;IACjC,OAAOU,MAAM;EACf,CAAC,CAAC,OAAOE,CAAC,EAAE;IACV,IAAIZ,QAAQ,EAAE;MACZF,MAAM,CAACe,IAAI,CAAE,+BAA8BhB,QAAS,gBAAeG,QAAS,8BAA6B,CAAC;IAC5G,CAAC,MAAM;MACLF,MAAM,CAACe,IAAI,CAAE,qBAAoBhB,QAAS,8BAA6B,CAAC;IAC1E;IACA,OAAOG,QAAQ;EACjB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASc,iBAAiB,CAACC,IAAY,EAAEjB,MAAc,EAAEC,WAAoB,EAAsB;EACxG,MAAMiB,SAAS,GAAGpB,sBAAsB,CAACmB,IAAI,EAAEjB,MAAM,EAAEC,WAAW,CAAC;EACnE,IAAI,CAACiB,SAAS,EAAE,OAAOC,SAAS;EAChC,MAAMC,QAAQ,GAAGC,cAAc,EAAE;EACjC,MAAMC,YAAY,GAAGF,QAAQ,CAACG,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,EAAEL,SAAS,CAAC;EAC5D,OAAOI,YAAY;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASD,cAAc,GAAG;EACxB;EACA,MAAMG,UAAU,GAAGC,kCAAe,CAACJ,cAAc,CAAC;IAChDK,UAAU,EAAE,KAAIC,wCAAqB,EAACC,aAAE,EAAE,IAAI,CAAC;IAC/CC,sBAAsB,EAAE,IAAI;IAC5BC,UAAU,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,MAAM;EAC1C,CAAC,CAAC;EACF,OAAON,UAAU;AACnB"}