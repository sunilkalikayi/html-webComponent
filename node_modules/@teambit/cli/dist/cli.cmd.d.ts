import { Command, CommandOptions } from '@teambit/cli';
import { CLIMain } from './cli.main.runtime';
import { GenerateOpts } from './generate-doc-md';
export declare class CliGenerateCmd implements Command {
    private cliMain;
    name: string;
    description: string;
    alias: string;
    loader: boolean;
    group: string;
    options: CommandOptions;
    constructor(cliMain: CLIMain);
    report(args: any, { metadata }: GenerateOpts): Promise<string>;
    json(): Promise<(Pick<Command, "name" | "alias" | "options" | "description" | "extendedDescription" | "group" | "private" | "internal" | "remoteOp" | "skipWorkspace" | "arguments" | "examples"> & {
        commands?: any;
    })[]>;
}
export declare class CliCmd implements Command {
    private cliMain;
    private docsDomain;
    name: string;
    description: string;
    alias: string;
    commands: Command[];
    loader: boolean;
    group: string;
    options: CommandOptions;
    constructor(cliMain: CLIMain, docsDomain: string);
    report(): Promise<string>;
}
