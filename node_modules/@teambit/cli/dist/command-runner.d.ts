import { CLIArgs, Command, Flags } from '@teambit/legacy/dist/cli/command';
export declare class CommandRunner {
    private command;
    private args;
    private flags;
    private commandName;
    constructor(command: Command, args: CLIArgs, flags: Flags);
    /**
     * run command using one of the handler, "json"/"report"/"render". once done, exit the process.
     */
    runCommand(): Promise<boolean | void | null>;
    private bootstrapCommand;
    /**
     * when both "render" and "report" were implemented, check whether it's a terminal.
     * if it's a terminal, use "render", if not, use "report" because "report" is just a string
     */
    private shouldRunRender;
    /**
     * this works for both, Harmony commands and Legacy commands (the legacy-command-adapter
     * implements json() method)
     */
    private runJsonHandler;
    private runRenderHandler;
    private runReportHandler;
    /**
     * the loader and logger.console write output to the console during the command execution.
     * for internals commands, such as, _put, _fetch, the command.loader = false.
     */
    private determineConsoleWritingDuringCommand;
    private writeAndExit;
    private runMigrateIfNeeded;
}
