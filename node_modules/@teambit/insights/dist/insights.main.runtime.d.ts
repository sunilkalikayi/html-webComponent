import { CLIMain } from '@teambit/cli';
import { GraphBuilder } from '@teambit/graph';
import { IssuesMain } from '@teambit/issues';
import { Component } from '@teambit/component';
import { InsightResult } from './insight';
import { InsightManager, RunInsightOptions } from './insight-manager';
export declare class InsightsMain {
    private insightManager;
    constructor(insightManager: InsightManager);
    runInsights(names: string[], opts: RunInsightOptions): Promise<InsightResult[]>;
    listInsights(): string[];
    addInsightsAsComponentIssues(components: Component[], issuesToIgnore: string[]): Promise<void>;
    static slots: never[];
    static dependencies: import("@teambit/harmony").Aspect[];
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    static config: {
        silence: boolean;
    };
    static provider([graphBuilder, cli, issues]: [GraphBuilder, CLIMain, IssuesMain]): Promise<InsightsMain>;
}
