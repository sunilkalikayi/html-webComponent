"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.promise.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
  _defineProperty2 = function () {
    return data;
  };
  return data;
}
function _chalk() {
  const data = _interopRequireDefault(require("chalk"));
  _chalk = function () {
    return data;
  };
  return data;
}
class InsightsCmd {
  constructor(insights) {
    this.insights = insights;
    (0, _defineProperty2().default)(this, "name", 'insights [names...]');
    (0, _defineProperty2().default)(this, "description", 'Insights on component graph');
    (0, _defineProperty2().default)(this, "group", 'development');
    (0, _defineProperty2().default)(this, "private", true);
    (0, _defineProperty2().default)(this, "options", [['l', 'list', 'list all insights'], ['j', 'json', 'return the insights in json format']]);
  }
  async report([names], options) {
    if (options.list) {
      const results = await this.json([names], options);
      return JSON.stringify(results, null, 2);
    }
    const results = await this.insights.runInsights(names, {
      renderData: true
    });
    return template(results);
  }
  async json([names], {
    list
  }) {
    if (list) {
      const results = this.insights.listInsights();
      return results;
    }
    return this.insights.runInsights(names, {
      renderData: false
    });
  }
}
exports.default = InsightsCmd;
function template(results) {
  const elements = results.map(result => {
    return `\n${_chalk().default.cyan.bold(result.message)}
  ${result.renderedData}`;
  }).join('\n');
  return elements;
}

//# sourceMappingURL=insights.cmd.js.map