import { Insight, InsightResult } from './insight';
export declare type RunInsightOptions = {
    renderData: boolean;
};
export declare class InsightManager {
    /** insights is an insight registry */
    readonly insights: Map<string, Insight>;
    constructor(
    /**
     * array of registered insights
     */
    insights: Insight[]);
    /**
     * registers a new insight and returns the updated insight registry map
     */
    register(insight: Insight): void;
    /**
     * list of all registered insights
     */
    listInsights(): string[];
    /**
     * gets a specific insight by its name or undefined if doesn't exist
     */
    getByName(insightName: string): Insight | undefined;
    /**
     * deletes a specific insight by its name if exists
     */
    delete(insightName: string): void;
    /**
     * execute an array of insights
     *
     */
    run(insightNames: string[], opts: RunInsightOptions): Promise<InsightResult[]>;
    /**
     * execute all insights in the registry
     *
     */
    runAll(opts: RunInsightOptions): Promise<InsightResult[]>;
}
